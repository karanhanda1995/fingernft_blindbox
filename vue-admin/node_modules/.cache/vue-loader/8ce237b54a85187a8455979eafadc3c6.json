{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\components\\Pagination\\index.vue?vue&type=style&index=0&id=72233bcd&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\components\\Pagination\\index.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652081880732},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652081880145},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1652081880241},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1652081880134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucGFnaW5hdGlvbi1jb250YWluZXIgewogIGJhY2tncm91bmQ6ICNmZmY7CiAgcGFkZGluZzogMzJweCAxNnB4Owp9Ci5wYWdpbmF0aW9uLWNvbnRhaW5lci5oaWRkZW4gewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5wYWdpbmF0aW9uLWNvbnRhaW5lci5tb2JpbGUgewogIHBhZGRpbmc6IDEwcHggMDsKICBtYXJnaW4tdG9wOiAwOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Pagination","sourcesContent":["<template>\n  <div :class=\"{'hidden':hidden, 'mobile': mobileObj}\" class=\"pagination-container\">\n    <el-pagination :hide-on-single-page=\"show\" :background=\"background\"\n      :current-page.sync=\"currentPage\" :key=\"lang\" :page-size.sync=\"pageSize\" :layout=\"layout\" :total=\"totalValue\"\n      v-bind=\"$attrs\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" />\n  </div>\n</template>\n\n<script>\nimport { scrollTo } from \"@/utils/scrollTo\";\nimport { isMobile } from \"@/utils\";\n\nexport default {\n  name: \"Pagination\",\n  props: {\n    show: {\n      type: Boolean,\n      default: true,\n    },\n    total: {\n      required: true,\n      type: [Number,String],\n    },\n    page: {\n      type: Number,\n      default: 1,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    layout: {\n      type: String,\n      default: isMobile()\n        ? \"total, prev, pager, next\"\n        : \"total, sizes, prev, pager, next, jumper\",\n    },\n    background: {\n      type: Boolean,\n      default: true,\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true,\n    },\n    hidden: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    lang(){\n      return this.$store.state.app.language;\n    },\n    mobileObj() {\n      return !!isMobile();\n    },\n    currentPage: {\n      get() {\n        return this.page;\n      },\n      set(val) {\n        this.$emit(\"update:page\", val);\n      },\n    },\n    totalValue(){\n      if(!this.total) {\n        return 0;\n      }\n      if(typeof(this.total) == \"string\"){\n        return parseInt(this.total);\n      }\n      return this.total;\n    },\n    pageSize: {\n      get() {\n        return this.limit;\n      },\n      set(val) {\n        this.$emit(\"update:limit\", val);\n      },\n    },\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit(\"pagination\", { page: this.currentPage, limit: val });\n      if (this.autoScroll) {\n        scrollTo(0, 800);\n      }\n    },\n    handleCurrentChange(val) {\n      this.$emit(\"pagination\", { page: val, limit: this.pageSize });\n      if (this.autoScroll) {\n        scrollTo(0, 800);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.pagination-container {\n  background: #fff;\n  padding: 32px 16px;\n}\n.pagination-container.hidden {\n  display: none;\n}\n\n.pagination-container.mobile {\n  padding: 10px 0;\n  margin-top: 0;\n}\n</style>\n"]}]}