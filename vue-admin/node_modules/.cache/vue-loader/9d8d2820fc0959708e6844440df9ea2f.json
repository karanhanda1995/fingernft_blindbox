{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\views\\layout\\components\\TagsView.vue?vue&type=style&index=0&id=57b800e8&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\views\\layout\\components\\TagsView.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652081880732},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652081880145},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1652081880241},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652081887366},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1652081880134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50YWdzLXZpZXctY29udGFpbmVyIHsKICAvLyBoZWlnaHQ6IDU5cHg7CiAgcGFkZGluZzogMTBweCAwOwogIHdpZHRoOiAxMDAlOwogIC8vIGJhY2tncm91bmQ6ICNmZmY7CiAgLy8gYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkOGRjZTU7CiAgLy8gYm94LXNoYWRvdzogMCAxcHggM3B4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAwIDNweCAwIHJnYmEoMCwgMCwgMCwgMC4wNCk7CiAgYmFja2dyb3VuZC1jb2xvcjogIzQ3OEFGRjsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAudGFncy12aWV3LXdyYXBwZXIgewogICAgLnRhZ3Mtdmlldy1pdGVtIHsKICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgaGVpZ2h0OiAyOHB4OwogICAgICBsaW5lLWhlaWdodDogMjhweDsKICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjsKICAgICAgY29sb3I6ICNmZmZmZmY7CiAgICAgIHBhZGRpbmc6IDAgOHB4OwogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgICAgIGJvcmRlci1yYWRpdXM6IDIzcHg7CiAgICAgIC8vIG1hcmdpbi10b3A6IDRweDsKICAgICAgJjpmaXJzdC1vZi10eXBlIHsKICAgICAgICBtYXJnaW4tbGVmdDogMTVweDsKICAgICAgfQogICAgICAmOmxhc3Qtb2YtdHlwZSB7CiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogICAgICB9CiAgICAgICYuYWN0aXZlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0VBRkZFOwogICAgICAgIC8vICY6OmJlZm9yZSB7CiAgICAgICAgLy8gICBjb250ZW50OiAiIjsKICAgICAgICAvLyAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICAgICAgLy8gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgICAgLy8gICB3aWR0aDogOHB4OwogICAgICAgIC8vICAgaGVpZ2h0OiA4cHg7CiAgICAgICAgLy8gICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICAgICAgLy8gICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgLy8gICBtYXJnaW4tcmlnaHQ6IDJweDsKICAgICAgICAvLyB9CiAgICAgIH0KICAgIH0KICB9CiAgLmNvbnRleHRtZW51IHsKICAgIG1hcmdpbjogMDsKICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICB6LWluZGV4OiAzMDAwOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogICAgcGFkZGluZzogNXB4IDA7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBmb250LXdlaWdodDogNDAwOwogICAgY29sb3I6ICMzMzM7CiAgICBib3gtc2hhZG93OiAycHggMnB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4zKTsKICAgIGxpIHsKICAgICAgbWFyZ2luOiAwOwogICAgICBwYWRkaW5nOiA3cHggMTZweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAmOmhvdmVyIHsKICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TagsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TagsView.vue","sourceRoot":"src/views/layout/components","sourcesContent":["<template>\n  <div id=\"tags-view-container\" class=\"tags-view-container\">\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\n      <router-link v-for=\"tag in visitedViews\" ref=\"tag\" :key=\"tag.path\" :class=\"isActive(tag) ? 'active' : ''\" :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\" tag=\"span\" class=\"tags-view-item\" @click.middle.native=\"!isAffix(tag) ? closeSelectedTag(tag) : ''\" @contextmenu.prevent.native=\"openMenu(tag, $event)\">\n        {{$t(tag.title)}}\n        <span v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\n      </router-link>\n    </scroll-pane>\n    <ul v-show=\"visible\" :style=\"{ left: left + 'px', top: top + 'px' }\" class=\"contextmenu\">\n      <li @click=\"refreshSelectedTag(selectedTag)\">{{$t('tagView.refresh')}}</li>\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\">\n        {{$t('tagView.close')}}\n      </li>\n      <li @click=\"closeOthersTags\">{{$t('tagView.closeOthers')}}</li>\n      <li @click=\"closeAllTags(selectedTag)\">{{$t('tagView.closeAll')}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport ScrollPane from \"./ScrollPane\";\nimport path from \"path\";\n\nexport default {\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: [],\n    };\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes() {\n      return this.$store.state.permission.routers;\n    },\n  },\n  watch: {\n    $route() {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener(\"click\", this.closeMenu);\n      } else {\n        document.body.removeEventListener(\"click\", this.closeMenu);\n      }\n    },\n  },\n  mounted() {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive(route) {\n      return route.path === this.$route.path;\n    },\n    isAffix(tag) {\n      return tag.meta && tag.meta.affix;\n    },\n    filterAffixTags(routes, basePath = \"/\") {\n      let tags = [];\n      routes.forEach((route) => {\n        if (route.meta && route.meta.affix) {\n          const tagPath = path.resolve(basePath, route.path);\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: { ...route.meta },\n          });\n        }\n        if (route.children) {\n          const tempTags = this.filterAffixTags(route.children, route.path);\n          if (tempTags.length >= 1) {\n            tags = [...tags, ...tempTags];\n          }\n        }\n      });\n      return tags;\n    },\n    initTags() {\n      const affixTags = (this.affixTags = this.filterAffixTags(this.routes));\n      for (const tag of affixTags) {\n        // Must have tag name\n        if (tag.name) {\n          this.$store.dispatch(\"tagsView/addVisitedView\", tag);\n        }\n      }\n    },\n    addTags() {\n      const { name } = this.$route;\n      if (name) {\n        this.$store.dispatch(\"tagsView/addView\", this.$route);\n      }\n      return false;\n    },\n    moveToCurrentTag() {\n      const tags = this.$refs.tag;\n      this.$nextTick(() => {\n        for (const tag of tags) {\n          if (tag.to.path === this.$route.path) {\n            this.$refs.scrollPane.moveToTarget(tag);\n            // when query is different then update\n            if (tag.to.fullPath !== this.$route.fullPath) {\n              this.$store.dispatch(\"tagsView/updateVisitedView\", this.$route);\n            }\n            break;\n          }\n        }\n      });\n    },\n    refreshSelectedTag(view) {\n      this.$store.dispatch(\"tagsView/delCachedView\", view).then(() => {\n        const { fullPath } = view;\n        this.$nextTick(() => {\n          this.$router.replace({\n            path: \"/redirect\" + fullPath,\n          });\n        });\n      });\n    },\n    closeSelectedTag(view) {\n      this.$store\n        .dispatch(\"tagsView/delView\", view)\n        .then(({ visitedViews }) => {\n          // if (this.isActive(view)) {\n          //   this.toLastView(visitedViews, view);\n          // }\n        });\n    },\n    closeOthersTags() {\n      this.$router.push(this.selectedTag);\n      this.$store\n        .dispatch(\"tagsView/delOthersViews\", this.selectedTag)\n        .then(() => {\n          this.moveToCurrentTag();\n        });\n    },\n    closeAllTags(view) {\n      this.$store.dispatch(\"tagsView/delAllViews\").then(({ visitedViews }) => {\n        if (this.affixTags.some((tag) => tag.path === view.path)) {\n          return;\n        }\n        this.toLastView(visitedViews, view);\n      });\n    },\n    toLastView(visitedViews, view) {\n      const latestView = visitedViews.slice(-1)[0];\n      if (latestView) {\n        this.$router.push(latestView.fullPath);\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === \"Dashboard\") {\n          // to reload home page\n          this.$router.replace({ path: \"/redirect\" + view.fullPath });\n        } else {\n          this.$router.push(\"/\");\n        }\n      }\n    },\n    openMenu(tag, e) {\n      const menuMinWidth = 105;\n      const offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n      const offsetWidth = this.$el.offsetWidth; // container width\n      const maxLeft = offsetWidth - menuMinWidth; // left boundary\n      const left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu() {\n      this.visible = false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.tags-view-container {\n  // height: 59px;\n  padding: 10px 0;\n  width: 100%;\n  // background: #fff;\n  // border-bottom: 1px solid #d8dce5;\n  // box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 0 3px 0 rgba(0, 0, 0, 0.04);\n  background-color: #478AFF;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  .tags-view-wrapper {\n    .tags-view-item {\n      display: inline-block;\n      position: relative;\n      cursor: pointer;\n      height: 28px;\n      line-height: 28px;\n      border: 1px solid #ffffff;\n      color: #ffffff;\n      padding: 0 8px;\n      font-size: 12px;\n      margin-left: 5px;\n      border-radius: 23px;\n      // margin-top: 4px;\n      &:first-of-type {\n        margin-left: 15px;\n      }\n      &:last-of-type {\n        margin-right: 15px;\n      }\n      &.active {\n        background-color: #7EAFFE;\n        // &::before {\n        //   content: \"\";\n        //   background: #fff;\n        //   display: inline-block;\n        //   width: 8px;\n        //   height: 8px;\n        //   border-radius: 50%;\n        //   position: relative;\n        //   margin-right: 2px;\n        // }\n      }\n    }\n  }\n  .contextmenu {\n    margin: 0;\n    background: #fff;\n    z-index: 3000;\n    position: absolute;\n    list-style-type: none;\n    padding: 5px 0;\n    border-radius: 4px;\n    font-size: 12px;\n    font-weight: 400;\n    color: #333;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.3);\n    li {\n      margin: 0;\n      padding: 7px 16px;\n      cursor: pointer;\n      &:hover {\n        background: #eee;\n      }\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n//reset element css of el-icon-close\n.tags-view-wrapper {\n  .tags-view-item {\n    .el-icon-close {\n      width: 16px;\n      height: 16px;\n      vertical-align: 2px;\n      border-radius: 50%;\n      text-align: center;\n      transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n      transform-origin: 100% 50%;\n      &:before {\n        transform: scale(0.6);\n        display: inline-block;\n        vertical-align: -3px;\n      }\n      &:hover {\n        background-color: #b4bccc;\n        color: #fff;\n      }\n    }\n  }\n}\n</style>\n"]}]}