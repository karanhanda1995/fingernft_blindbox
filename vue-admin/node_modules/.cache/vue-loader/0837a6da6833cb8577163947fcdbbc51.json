{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\views\\config\\Network.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\views\\config\\Network.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1652081856293},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1652081880134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBuZXR3b3JrT3B0aW9ucyBmcm9tICdAL3V0aWxzL25ldHdvcmstb3B0aW9ucy5qcycKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jwpjb25zdCBkYXRhS2V5ID0gJ2NvbmZpZ05ldHdvcmsnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFLZXksCiAgICAgIGdyb3VwczogbmV0d29ya09wdGlvbnMsCiAgICAgIGVkaXREYXRhOiB7fSwKICAgICAgZWRpdEtleTogJycsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBydWxlczogewogICAgICAgIG5ldHdvcms6IHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnY29uZmlnLm5ldHdvcmsnKSArICcgJyArIHRoaXMuJHQoJ2dsb2JhbC5pc1JlcXVpcmVkJyksCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH0sCiAgICAgICAgbmFtZTogewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiB0aGlzLiR0KCdjb25maWcubmV0d29ya19uYW1lJykgKyAnICcgKyB0aGlzLiR0KCdnbG9iYWwuaXNSZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwKICAgICAgICBzeW1ib2w6IHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnY29uZmlnLm5ldHdvcmtfc3ltYm9sJykgKyAnICcgKyB0aGlzLiR0KCdnbG9iYWwuaXNSZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwKICAgICAgICBycGM6IHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnY29uZmlnLm5ldHdvcmtfcnBjJykgKyAnICcgKyB0aGlzLiR0KCdnbG9iYWwuaXNSZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwKICAgICAgICBjaGFpbklkOiB7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHQoJ2NvbmZpZy5uZXR3b3JrX2NoYWluSWQnKSArICcgJyArIHRoaXMuJHQoJ2dsb2JhbC5pc1JlcXVpcmVkJyksCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LAogICAgICAgIGV4cGxvcmVyOiB7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHQoJ2NvbmZpZy5uZXR3b3JrX2V4cGxvcmVyJykgKyAnICcgKyB0aGlzLiR0KCdnbG9iYWwuaXNSZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwKICAgICAgICBibG9ja1RpbWU6IHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnY29uZmlnLm5ldHdvcmtfYmxvY2tUaW1lJykgKyAnICcgKyB0aGlzLiR0KCdnbG9iYWwuaXNSZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSh7CiAgICAgIGNvbmZpZzogc3RhdGUgPT4gc3RhdGUuYXBwLmNvbmZpZwogICAgfSksCiAgICBzaG93RGF0YSAoKSB7CiAgICAgIGlmICh0aGlzLmNvbmZpZykgewogICAgICAgIHJldHVybiB0aGlzLmNvbmZpZ1tkYXRhS2V5XSB8fCB7fQogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB7fQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBlZGl0Q29uZmlnICgpIHsKICAgICAgdGhpcy5lZGl0S2V5ID0gJ2VkaXQnCiAgICAgIHRoaXMuZWRpdERhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc2hvd0RhdGEpKQogICAgICBpZiAoIXRoaXMuZWRpdERhdGEubmV0d29yaykgewogICAgICAgIHRoaXMuZWRpdERhdGEubmV0d29yayA9ICdPdGhlcicKICAgICAgfQogICAgfSwKICAgIG9uU2VsZWN0Q2hhbmdlICh2YWwpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7aSA8IHRoaXMuZ3JvdXBzLmxlbmd0aDtpKyspIHsKICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuZ3JvdXBzW2ldCiAgICAgICAgZm9yIChsZXQgaiA9IDA7aiA8IGdyb3VwLm9wdGlvbnMubGVuZ3RoO2orKykgewogICAgICAgICAgY29uc3Qgb3B0aW9uID0gZ3JvdXAub3B0aW9uc1tqXQogICAgICAgICAgaWYgKG9wdGlvbi5uZXR3b3JrID09PSB2YWwpIHsKICAgICAgICAgICAgdGhpcy5lZGl0RGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob3B0aW9uKSkKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgY2FuY2VsQ29uZmlnICgpIHsKICAgICAgdGhpcy4kcmVmcy5mb3JtUmVmLmNsZWFyVmFsaWRhdGUoKQogICAgICB0aGlzLmVkaXRLZXkgPSAnJwogICAgfSwKICAgIGFzeW5jIHVwZGF0ZUNvbmZpZyAoKSB7CiAgICAgIGxldCB2YWxpZFJldCA9IGZhbHNlCiAgICAgIGlmICh0aGlzLmVkaXREYXRhLm5ldHdvcmsgPT09ICdPdGhlcicpIHsKICAgICAgICB0aGlzLiRyZWZzLmZvcm1SZWYudmFsaWRhdGUocmV0ID0+IHsKICAgICAgICAgIHZhbGlkUmV0ID0gcmV0CiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRyZWZzLmZvcm1SZWYudmFsaWRhdGVGaWVsZCgncnBjJywgcmV0ID0+IHsKICAgICAgICAgIHZhbGlkUmV0ID0gIXJldAogICAgICAgIH0pCiAgICAgIH0KICAgICAgaWYgKCF2YWxpZFJldCkgcmV0dXJuCiAgICAgIGNvbnN0IGNvbmZpcm1SZXQgPSBhd2FpdCB0aGlzLiRjb25maXJtKHRoaXMuJHQoJ2dsb2JhbC51cGRhdGVUaXAnKSwgdGhpcy4kdCgnZ2xvYmFsLnRpcCcpLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHRoaXMuJHQoJ2dsb2JhbC5jb25maXJtJyksCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogdGhpcy4kdCgnZ2xvYmFsLmNhbmNlbCcpLAogICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgfSkuY2F0Y2goKCkgPT4geyByZXR1cm4gZmFsc2UgfSkKICAgICAgaWYgKCFjb25maXJtUmV0KSByZXR1cm4KCiAgICAgIGNvbnN0IHZhbHVlID0gSlNPTi5zdHJpbmdpZnkodGhpcy5lZGl0RGF0YSkKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAga2V5OiBkYXRhS2V5LAogICAgICAgIHZhbHVlLAogICAgICB9OwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIHRoaXMuJGFwaSgiY29uZmlnLnVwZGF0ZSIsIGRhdGEpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgICAgIGlmICh0aGlzLiR0b29sLmNoZWNrUmVzcG9uc2UocmVzKSkgewogICAgICAgICAgICB0aGlzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgICAgdGl0bGU6IHRoaXMuJHQoJ2dsb2JhbC5zdWNjZXNzJyksCiAgICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnZ2xvYmFsLnVwZGF0ZVN1Y2Nlc3MnKSwKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMuY2FuY2VsQ29uZmlnKCk7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnVVBEQVRFX0NPTkZJR19JVEVNJywgewogICAgICAgICAgICAgIGtleTogZGF0YUtleSwKICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5lZGl0RGF0YQogICAgICAgICAgICB9KQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgICB0aXRsZTogdGhpcy4kdCgnZ2xvYmFsLmZhaWwnKSwKICAgICAgICAgICAgICBtZXNzYWdlOiByZXMuZXJybXNnLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgdGl0bGU6IHRoaXMuJHQoJ2dsb2JhbC5mYWlsJyksCiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHQoJ3Jlc3BvbnNlLicgKyByZXMuZGF0YS5lcnJubyksCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["Network.vue"],"names":[],"mappingsfile":"Network.vue","sourceRoot":"src/views/config","sourcesContent":["<template>\n  <div class=\"config-group\">\n    <div style=\"text-align: right\">\n      <el-button :loading=\"loading\" v-permission=\"['*']\" type=\"danger\" v-if=\"editKey !== 'edit'\" @click=\"editConfig\">{{ $t('global.edit') }}</el-button>\n      <el-button :loading=\"loading\" v-permission=\"['*']\" type=\"primary\" v-if=\"editKey === 'edit'\" @click=\"updateConfig\">{{ $t('popular.save') }}</el-button>\n      <el-button :loading=\"loading\" v-permission=\"['*']\" v-if=\"editKey === 'edit'\" @click=\"cancelConfig()\">{{ $t('global.cancel') }}</el-button>\n    </div>\n    <el-divider />\n    <el-form ref=\"formRef\" :model=\"editData\" :rules=\"rules\" label-position=\"top\">\n      <el-form-item :label=\"$t('config.network')\" prop=\"network\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.network }}</template>\n        <template v-else>\n          <el-select v-model=\"editData.network\" @change=\"onSelectChange\">\n            <el-option-group v-for=\"(g, i) in groups\" :key=\"i\" :label=\"g.label\">\n              <el-option v-for=\"(o, j) in g.options\" :key=\"j\" :label=\"o.network\" :value=\"o.network\" />\n            </el-option-group>\n          </el-select>\n        </template>\n      </el-form-item>\n      <el-form-item :label=\"$t('config.network_name')\" prop=\"name\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.name }}</template>\n        <template v-else-if=\"editData.network !== 'Other'\">\n          {{ editData.name }}\n        </template>\n        <template v-else>\n          <el-input v-model=\"editData.name\" />\n        </template>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('config.network_symbol')\" prop=\"symbol\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.symbol }}</template>\n        <template v-else-if=\"editData.network !== 'Other'\">\n          {{ editData.symbol }}\n        </template>\n        <template v-else>\n          <el-input v-model=\"editData.symbol\" />\n        </template>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('config.network_rpc')\" prop=\"rpc\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.rpc }}</template>\n        <template v-else>\n          <el-input v-model=\"editData.rpc\" />\n        </template>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('config.network_chainId')\" prop=\"chainId\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.chainId }}</template>\n        <template v-else-if=\"editData.network !== 'Other'\">\n          {{ editData.chainId }}\n        </template>\n        <template v-else>\n          <el-input v-model=\"editData.chainId\" />\n        </template>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('config.network_explorer')\" prop=\"explorer\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.explorer }}</template>\n        <template v-else-if=\"editData.network !== 'Other'\">\n          {{ editData.explorer }}\n        </template>\n        <template v-else>\n          <el-input v-model=\"editData.explorer\" />\n        </template>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('config.network_blockTime')\" prop=\"blockTime\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.blockTime }}</template>\n        <template v-else-if=\"editData.network !== 'Other'\">\n          {{ editData.blockTime }}\n        </template>\n        <template v-else>\n          <el-input-number v-model=\"editData.blockTime\" :min=\"0\" controls-position=\"right\" style=\"width: 100%;\" />\n        </template>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('config.network_opensea')\" prop=\"opensea\">\n        <template v-if=\"editKey !== 'edit'\">{{ showData.opensea }}</template>\n        <template v-else-if=\"editData.network !== 'Other'\">\n          {{ editData.opensea }}\n        </template>\n        <template v-else>\n          <el-input v-model=\"editData.opensea\" />\n        </template>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n  import networkOptions from '@/utils/network-options.js'\n  import { mapState } from 'vuex'\n  const dataKey = 'configNetwork'\n  export default {\n    data () {\n      return {\n        dataKey,\n        groups: networkOptions,\n        editData: {},\n        editKey: '',\n        loading: false,\n        rules: {\n          network: {\n            required: true,\n            message: this.$t('config.network') + ' ' + this.$t('global.isRequired'),\n            trigger: 'change'\n          },\n          name: {\n            required: true,\n            message: this.$t('config.network_name') + ' ' + this.$t('global.isRequired'),\n            trigger: 'blur'\n          },\n          symbol: {\n            required: true,\n            message: this.$t('config.network_symbol') + ' ' + this.$t('global.isRequired'),\n            trigger: 'blur'\n          },\n          rpc: {\n            required: true,\n            message: this.$t('config.network_rpc') + ' ' + this.$t('global.isRequired'),\n            trigger: 'blur'\n          },\n          chainId: {\n            required: true,\n            message: this.$t('config.network_chainId') + ' ' + this.$t('global.isRequired'),\n            trigger: 'blur'\n          },\n          explorer: {\n            required: true,\n            message: this.$t('config.network_explorer') + ' ' + this.$t('global.isRequired'),\n            trigger: 'blur'\n          },\n          blockTime: {\n            required: true,\n            message: this.$t('config.network_blockTime') + ' ' + this.$t('global.isRequired'),\n            trigger: 'change'\n          }\n        }\n      }\n    },\n    computed: {\n      ...mapState({\n        config: state => state.app.config\n      }),\n      showData () {\n        if (this.config) {\n          return this.config[dataKey] || {}\n        } else {\n          return {}\n        }\n      }\n    },\n    methods: {\n      editConfig () {\n        this.editKey = 'edit'\n        this.editData = JSON.parse(JSON.stringify(this.showData))\n        if (!this.editData.network) {\n          this.editData.network = 'Other'\n        }\n      },\n      onSelectChange (val) {\n        for (let i = 0;i < this.groups.length;i++) {\n          const group = this.groups[i]\n          for (let j = 0;j < group.options.length;j++) {\n            const option = group.options[j]\n            if (option.network === val) {\n              this.editData = JSON.parse(JSON.stringify(option))\n              return\n            }\n          }\n        }\n      },\n      cancelConfig () {\n        this.$refs.formRef.clearValidate()\n        this.editKey = ''\n      },\n      async updateConfig () {\n        let validRet = false\n        if (this.editData.network === 'Other') {\n          this.$refs.formRef.validate(ret => {\n            validRet = ret\n          })\n        } else {\n          this.$refs.formRef.validateField('rpc', ret => {\n            validRet = !ret\n          })\n        }\n        if (!validRet) return\n        const confirmRet = await this.$confirm(this.$t('global.updateTip'), this.$t('global.tip'), {\n          confirmButtonText: this.$t('global.confirm'),\n          cancelButtonText: this.$t('global.cancel'),\n          type: \"warning\",\n        }).catch(() => { return false })\n        if (!confirmRet) return\n\n        const value = JSON.stringify(this.editData)\n        var data = {\n          key: dataKey,\n          value,\n        };\n        this.loading = true\n        this.$api(\"config.update\", data)\n          .then((res) => {\n            this.loading = false\n            if (this.$tool.checkResponse(res)) {\n              this.$notify.success({\n                title: this.$t('global.success'),\n                message: this.$t('global.updateSuccess'),\n              });\n              this.cancelConfig();\n              this.$store.commit('UPDATE_CONFIG_ITEM', {\n                key: dataKey,\n                value: this.editData\n              })\n            } else {\n              this.$notify.error({\n                title: this.$t('global.fail'),\n                message: res.errmsg,\n              });\n            }\n          })\n          .catch((res) => {\n            this.loading = false\n            this.$notify.error({\n              title: this.$t('global.fail'),\n              message: this.$t('response.' + res.data.errno),\n            });\n          });\n      },\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .config-group {\n    .el-select {\n      width: 100%;\n    }\n  }\n\n  .el-form-item ::v-deep .el-form-item__label {\n    font-size: 18px;\n    color: #333;\n  }\n</style>\n"]}]}