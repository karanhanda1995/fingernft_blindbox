{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\components\\Media.vue?vue&type=style&index=0&id=6e5ac9e4&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\components\\Media.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652081880732},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652081880145},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1652081880241},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652081887366},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1652081880134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGFibGUgYXVkaW8gewogIHdpZHRoOiA4MCU7Cn0KLmlsLW1lZGlhOmhvdmVyIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KLnZpZGVvLXdyYXAgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoudmlkZW8tYnRuIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9Cg=="},{"version":3,"sources":["Media.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Media.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"il-media\">\n    <template v-if=\"mediaType === 'image'\">\n      <el-image style=\"width: 100px; height: 100px\" :src=\"mediaUrl\" :preview-src-list=\"srcList\">\n      </el-image>\n    </template>\n    <template v-else>\n      <audio v-if=\"mediaType === 'audio'\" :src=\"mediaUrl\" controls></audio>\n      <div class=\"video-wrap\" v-if=\"mediaType === 'video'\">\n        <video :src=\"mediaUrl\" :width=\"isPreview ? '80%' : '200px'\" :controls=\"isPreview ? 'controls' : ''\"></video>\n        <div @click=\"dialogVisible=true\" v-if=\"isPreview\" class=\"video-btn\"></div>\n      </div>\n    </template>\n    <el-dialog :visible.sync=\"dialogVisible\" class=\"media-dialog\">\n      <video :src=\"mediaUrl\" width=\"100%\" controls></video>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import { mapState } from \"vuex\";\n  export default {\n    name: \"Media\",\n    data () {\n      return {\n        dialogVisible: false,\n        typeData: {\n          image: [\".jpeg\", \".jpg\", \".png\", \".gif\"],\n          audio: [\".mp3\", \".wav\", \".oga\"],\n          video: [\".webm\", \".mp4\", \".m4v\", \".ogg\", \".ogv\", \".mov\"],\n        },\n      };\n    },\n    props: {\n      url: {\n        type: String,\n        default: '',\n      },\n      type: {\n        type: String,\n        default: '',\n      },\n      // 可选：是否预览\n      isPreview: {\n        default: false,\n      },\n    },\n    computed: {\n      ...mapState({ config: (state) => state.user.config }),\n      mediaUrl () {\n        if (this.url.startsWith(\"ipfs\", 0)) {\n          return this.url.replace(\"ipfs://\", this.config.ipfsUrl);\n        } else {\n          return this.url;\n        }\n      },\n      mediaType () {\n        if(this.type){\n          return this.type.split('/')[0];\n        }\n        if(this.$tool.isAudioUrl(this.url)) return \"audio\";\n        if(this.$tool.isVideoUrl(this.url)) return \"video\";\n        return \"image\";\n      },\n      srcList () {\n        return this.isPreview ? [this.mediaUrl] : [];\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  table audio {\n    width: 80%;\n  }\n  .il-media:hover {\n    cursor: pointer;\n  }\n  .video-wrap {\n    position: relative;\n  }\n  .video-btn {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n"]}]}