{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\components\\Upload.vue?vue&type=style&index=0&id=44fc689e&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\components\\Upload.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652081880732},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652081880145},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1652081880241},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652081887366},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1652081880134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi51cGxvYWQgewoJcGFkZGluZzogMTBweCAwOwoJbWFyZ2luOiAxMHB4IDA7CgkuaW1nLWJveCB7CgkJd2lkdGg6IDE1MHB4OwoJCWhlaWdodDogMTUwcHg7CgkJbWF4LXdpZHRoOiAxMDAlOwoJCW1heC1oZWlnaHQ6IDEwMCU7CgkJb3ZlcmZsb3c6IGhpZGRlbjsKCQlkaXNwbGF5OiBpbmxpbmUtZmxleDsKCQlqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKCQlhbGlnbi1pdGVtczogY2VudGVyOwoJCXBvc2l0aW9uOiByZWxhdGl2ZTsKCQltYXJnaW46IDAgMTBweCAxMHB4IDA7CgkJZmxvYXQ6IGxlZnQ7CgkJaW1nIHsKCQkJd2lkdGg6IGF1dG87CgkJCWhlaWdodDogYXV0bzsKCQkJbWF4LXdpZHRoOiAxMDAlOwoJCQltYXgtaGVpZ2h0OiAxMDAlOwoJCX0KCX0KCS51cGxvYWQtYm94IHsKCQkuaW1nLXJlbW92ZSB7CgkJCXdpZHRoOiAxMDAlOwoJCQloZWlnaHQ6IDEwMCU7CgkJCWN1cnNvcjogcG9pbnRlcjsKCQkJZm9udC1zaXplOiAyNHB4OwoJCQlwb3NpdGlvbjogYWJzb2x1dGU7CgkJCXRvcDogMDsKCQkJbGVmdDogMDsKCQkJb3BhY2l0eTogMDsKCQkJZGlzcGxheTogZmxleDsKCQkJanVzdGlmeS1jb250ZW50OiBjZW50ZXI7CgkJCWFsaWduLWl0ZW1zOiBjZW50ZXI7CgkJCWNvbG9yOiAjZmZmOwoJCX0KCQkuaW1nLXJlbW92ZTpob3ZlciB7CgkJCWJhY2tncm91bmQ6ICMzMzM7CgkJCW9wYWNpdHk6IDAuODsKCQl9Cgl9CgkuYnRuLWJveCB7CgkJbWFyZ2luOiAyMHB4IDA7CgkJcGFkZGluZy1sZWZ0OiAyMHB4OwoJfQp9Ci5kaXMtbm8gewoJZGlzcGxheTogbm9uZTsKfQouYm9yZGVyLWJveCB7Cglib3JkZXI6IDFweCBkYXNoZWQgI2FhYTsKCWJvcmRlci1yYWRpdXM6IDVweDsKfQo="},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"upload\">\n\t\t<div v-if=\"limitNum == 1\">\n\t\t\t<div v-if=\"imageUrl && !uploadStatus\" class=\"img-box\"><img :src=\"imageUrl\" /></div>\n\t\t\t<el-upload :ref=\"refName\" action=\"\" v-if=\"uploadStatus\" :show-file-list=\"false\" list-type=\"picture-card\" :auto-upload=\"false\" :limit=\"limitNum\" class=\"avatar-uploader\" :on-change=\"\n                (file) => {\n                    uploadChange(file)\n                }\n            \" :on-exceed=\"\n                (file) => {\n                    uploadChange(file)\n                }\n            \">\n\t\t\t\t<div v-if=\"imageUrl\" class=\"img-box\"><img :src=\"imageUrl\" /></div>\n\t\t\t\t<i slot=\"default\" v-else class=\"el-icon-plus\"></i>\n\t\t\t</el-upload>\n\t\t</div>\n\t\t<div v-else class=\"upload-box\">\n\t\t\t<div v-for=\"item in imageArr\" :key=\"item\" class=\"img-box\" :class=\"uploadStatus?'border-box':''\">\n\t\t\t\t<img :src=\"item\" />\n\t\t\t\t<div class=\"img-remove\" v-if=\"uploadStatus\">\n\t\t\t\t\t<i @click=\"removeImageArr(item)\" class=\"el-icon-delete\"></i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-for=\"(item,index) in images\" :key=\"index\" class=\"img-box\" :class=\"uploadStatus?'border-box':''\">\n\t\t\t\t<img :src=\"item.url\" />\n\t\t\t\t<div class=\"img-remove\" v-if=\"uploadStatus\">\n\t\t\t\t\t<i @click=\"removeImages(item)\" class=\"el-icon-delete\"></i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<el-upload :class=\"canUpload?'':'dis-no'\" :ref=\"refName\" action=\"\" v-if=\"uploadStatus\" :show-file-list=\"false\" list-type=\"picture-card\" :auto-upload=\"false\" :limit=\"limitNum\" class=\"avatar-uploader\" :on-change=\"\n                (file) => {\n                    uploadChange(file)\n                }\n            \">\n\t\t\t\t<i class=\"el-icon-plus avatar-uploader-icon\"></i>\n\t\t\t</el-upload>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tname: 'Upload',\n\t\tdata () {\n\t\t\treturn {\n\t\t\t\timages: [],\n\t\t\t\timageArr: [],\n\t\t\t\timageUrl: '',\n\t\t\t\timageFile: []\n\t\t\t}\n\t\t},\n\t\tprops: {\n\t\t\trefName: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: ''\n\t\t\t},\n\t\t\tlimitNum: {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 1\n\t\t\t},\n\t\t\timageData: {\n\t\t\t\ttype: [String, Object, File],\n\t\t\t\tdefault: ''\n\t\t\t},\n\t\t\tuploadStatus: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tcanUpload () {\n\t\t\t\tlet num = this.imageArr.length + this.images.length\n\t\t\t\tif (num >= this.limitNum) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\t\t},\n    watch:{\n      imageData(old, val){\n        this.initData();\n      }\n    },\n    mounted(){\n      this.initData();\n    },\n\t\tmethods: {\n      initData(){\n        if (this.limitNum == 1 && this.imageData) {\n          this.imageUrl = this.imageData\n        } else if (this.imageData) {\n          this.imageArr = this.imageData.split(',')\n          this.images = []\n        }\n      },\n\t\t\tuploadChange (file) {\n\t\t\t\tvar event = event || window.event\n\t\t\t\tvar files = event.target.files[0]\n\t\t\t\tvar reader = new FileReader()\n\t\t\t\tvar _this = this\n\t\t\t\tif (this.limitNum == 1) {\n\t\t\t\t\tthis.imageFile = file.raw\n\t\t\t\t\treader.onload = function (e) {\n\t\t\t\t\t\t_this.imageUrl = e.target.result\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treader.onload = function (e) {\n\t\t\t\t\t\t_this.images.push({ url: e.target.result, file: file.raw })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treader.readAsDataURL(files)\n\t\t\t\tthis.updateData()\n\t\t\t},\n\t\t\tremoveImages (file) {\n\t\t\t\tlet list = this.images\n\t\t\t\tfor (let i in list) {\n\t\t\t\t\tif (list[i].file.uid == file.file.uid) {\n\t\t\t\t\t\tlist.splice(i, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.images = list\n\t\t\t\tlet uploadFiles = this.$refs[this.refName].uploadFiles\n\t\t\t\tfor (let i in uploadFiles) {\n\t\t\t\t\tif (uploadFiles[i].uid == file.file.uid) {\n\t\t\t\t\t\tuploadFiles.splice(i, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveImageArr (file) {\n\t\t\t\tlet list = this.imageArr\n\t\t\t\tfor (let i in list) {\n\t\t\t\t\tif (list[i] == file) {\n\t\t\t\t\t\tlist.splice(i, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.imageArr = list\n\t\t\t},\n\t\t\tcancel () {\n\t\t\t\tif (this.limitNum == 1) {\n\t\t\t\t\tthis.imageUrl = \"\"\n\t\t\t\t} else {\n\t\t\t\t\tthis.imageArr = []\n\t\t\t\t\tthis.images = []\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync updateData () {\n\t\t\t\tif (this.limitNum == 1) {\n\t\t\t\t\tthis.$emit('updateData', this.imageFile)\n\t\t\t\t} else {\n\t\t\t\t\tlet list = this.images\n\t\t\t\t\tlet result = []\n\t\t\t\t\tfor (let i in list) {\n\t\t\t\t\t\tresult.push(list[i].file)\n\t\t\t\t\t}\n\t\t\t\t\tthis.$emit('updateData', result)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.upload {\n\t\tpadding: 10px 0;\n\t\tmargin: 10px 0;\n\t\t.img-box {\n\t\t\twidth: 150px;\n\t\t\theight: 150px;\n\t\t\tmax-width: 100%;\n\t\t\tmax-height: 100%;\n\t\t\toverflow: hidden;\n\t\t\tdisplay: inline-flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tposition: relative;\n\t\t\tmargin: 0 10px 10px 0;\n\t\t\tfloat: left;\n\t\t\timg {\n\t\t\t\twidth: auto;\n\t\t\t\theight: auto;\n\t\t\t\tmax-width: 100%;\n\t\t\t\tmax-height: 100%;\n\t\t\t}\n\t\t}\n\t\t.upload-box {\n\t\t\t.img-remove {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tcursor: pointer;\n\t\t\t\tfont-size: 24px;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\topacity: 0;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tcolor: #fff;\n\t\t\t}\n\t\t\t.img-remove:hover {\n\t\t\t\tbackground: #333;\n\t\t\t\topacity: 0.8;\n\t\t\t}\n\t\t}\n\t\t.btn-box {\n\t\t\tmargin: 20px 0;\n\t\t\tpadding-left: 20px;\n\t\t}\n\t}\n\t.dis-no {\n\t\tdisplay: none;\n\t}\n\t.border-box {\n\t\tborder: 1px dashed #aaa;\n\t\tborder-radius: 5px;\n\t}\n</style>\n"]}]}