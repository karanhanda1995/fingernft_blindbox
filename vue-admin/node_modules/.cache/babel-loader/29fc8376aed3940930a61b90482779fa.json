{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\views\\blindBoxManagement\\blindBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\src\\views\\blindBoxManagement\\blindBox.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1652081856293},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652081880827},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1652081880134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Pagination","boxSet","Media","data","callback","list","total","listLoading","apiLoading","listQuery","page","limit","sort","order","blindTypeName","sync","syncOptions","value","label","dialogFormVisible","dialogStatus","error","formData","address","describe","owner","times","isRepetition","amount","nftAmount","price","paytokenId","imgId","imgUrl","anim1","anim2","paytokens","rules","required","message","trigger","validator","pickerOptions","disabledDate","time","deleteId","box","fileImage","filelist","anim1Image","anim1List","anim2Image","anim2List","blindBoxId","computed","dialogTitle","connected","web3","config","blindTypes","tableBlindType","tableTime","startDate_date","startDate_time","endDate","endDate_date","endDate_time","activeDate","payType","totalAmount","created","methods","connectWallet","onConfirm","init","paytokenList","getList","then","catch","getNftList","boxList","amountDict","checkForm","addBox","parseInt","startTime","endTime","editBox","id","delBox","prepareSign","_this","res","result","signData","successCallback","title","failCallback","err","msg","callbackCloseDialog","uploadChange","file","reader","resetForm","handlerBtn","btnType","handlerConfirm","handlerCancel","uploadStorage","resolve","reject","handlerFilter"],"sourceRoot":"src/views/blindBoxManagement","sources":["blindBox.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.blindTypeName\" clearable class=\"filter-item w-200 mr-10\" :placeholder=\"$t('blind.placeholder')\" />\n      <el-select v-model=\"listQuery.sync\" class=\"filter-item w-200 mr-10\" :placeholder=\"$t('blind.box.pleaseSelectSync')\" :clearable=\"true\">\n        <el-option v-for=\"item in syncOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n      </el-select>\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handlerFilter\">{{ $t(\"blind.select\") }}</el-button>\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handlerBtn('add')\" v-permission=\"['POST /admin/blind/box/add']\">{{ $t(\"blind.add\") }}</el-button>\n    </div>\n\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('util.loadingText')\" border>\n      <el-table-column type=\"expand\">\n        <template slot-scope=\"props\">\n          <el-form label-position=\"left\" inline class=\"table-expand\" label-width=\"160px\">\n            <el-form-item :label=\"$t('blind.box.blindType')\">\n              <span>{{ tableBlindType(props.row.address) }}</span>\n            </el-form-item>\n            <el-form-item label=\"payToken\">\n              <span>{{ props.row.payToken }}</span>\n            </el-form-item>\n            <el-form-item label=\"payTokenId\">\n              <span>{{ props.row.payTokenId }}</span>\n            </el-form-item>\n            <el-form-item :label=\"$t('blind.box.times')\">\n              <span>{{ tableTime(props.row.startTime, props.row.endTime) }}</span>\n            </el-form-item>\n            <el-form-item :label=\"$t('blind.box.anim1')\" v-if=\"props.row.anim1\">\n              <media :url=\"props.row.anim1\" type=\"image\" :isPreview=\"true\"></media>\n            </el-form-item>\n            <el-form-item :label=\"$t('blind.box.anim2')\" v-if=\"props.row.anim2\">\n              <media :url=\"props.row.anim2\" type=\"image\" :isPreview=\"true\"></media>\n            </el-form-item>\n\n            <el-form-item :label=\"$t('blind.box.salt')\">\n              <span>{{ props.row.salt }}</span>\n            </el-form-item>\n          </el-form>\n        </template>\n      </el-table-column>\n\n      <el-table-column prop=\"id\" label=\"ID\" sortable> </el-table-column>\n      <el-table-column prop=\"name\" :label=\"$t('blind.box.name')\">\n      </el-table-column>\n      <el-table-column prop=\"amount\" :label=\"$t('blind.box.amount')\">\n      </el-table-column>\n      <el-table-column prop=\"nftAmount\" :label=\"$t('blind.box.NFTAmount')\">\n      </el-table-column>\n      <el-table-column :label=\"$t('blind.box.NFTListInfo')\" align=\"center\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <div class=\"bfont\" :class=\"!scope.row.isRepetition ? 'cblue' : 'cgreen' \">\n            {{ !scope.row.isRepetition? $t('blind.box.unRepeat') : $t('blind.box.isRepeat') }}\n          </div>\n\n          <div class=\"bfont\" :class=\"scope.row.amount * scope.row.nftAmount != scope.row.usedAmount ? 'cred' : 'cgreen' \">\n            {{$t('blind.box.totalAmount')}}: {{ scope.row.amount * scope.row.nftAmount }}({{ scope.row.usedAmount }})\n          </div>\n          <div class=\"cgreen bfont\" v-if=\"scope.row.amount * scope.row.nftAmount == scope.row.usedAmount\">\n            {{$t('blind.box.success')}}\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"price\" :label=\"$t('blind.box.price')\">\n      </el-table-column>\n      <el-table-column width=\"150\" prop=\"imgUrl\" :label=\"$t('blind.box.picture')\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <media :url=\"scope.row.imgUrl\" type=\"image\" :isPreview=\"true\"></media>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" :label=\"$t('blind.status')\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag type=\"success\" v-if=\"scope.row.sync\">\n            {{ $t(\"blind.sign\") }}\n          </el-tag>\n          <el-tag type=\"info\" v-else>{{ $t(\"blind.unsign\") }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('blind.operation')\" width=\"300\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"success\" size=\"mini\" @click=\"handlerBtn('set', scope.row)\" v-permission=\"['POST /admin/blind/box/addNfts']\">{{ $t(\"blind.box.config\") }}</el-button>\n          <el-button type=\"primary\" size=\"mini\" @click=\"handlerBtn('edit', scope.row)\" v-permission=\"['POST /admin/blind/box/edit']\">{{ $t(\"blind.edit\") }}</el-button>\n\n          <el-button type=\"primary\" size=\"mini\" @click=\"handlerBtn('sign', scope.row)\" v-permission=\"['POST /admin/blind/box/sign']\">{{ $t(\"blind.box.sign\") }}</el-button>\n\n          <el-button type=\"danger\" size=\"mini\" @click=\"handlerBtn('del', scope.row)\" v-permission=\"['POST /admin/blind/box/deleted']\">{{ $t(\"blind.delete\") }}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total > 0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\" :width=\"dialogStatus === 'del' || dialogStatus === 'sync' ? '30%' : '50%'\" @closed=\"callbackCloseDialog\">\n      <template v-if=\"dialogStatus === 'add' || dialogStatus === 'edit'\">\n        <el-form ref=\"formData\" :model=\"formData\" status-icon label-position=\"left\" label-width=\"120px\" :rules=\"rules\">\n          <el-form-item :label=\"$t('blind.box.blindType')\" prop=\"address\">\n            <el-select v-model=\"formData.address\" :placeholder=\"$t('blind.box.pleaseSelect')\">\n              <el-option v-for=\"(blindType, index) in blindTypes\" :key=\"index\" :label=\"blindType.name\" :value=\"blindType.address\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.name')\" prop=\"name\">\n            <el-input v-model=\"formData.name\"></el-input>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.brief')\" prop=\"describe\">\n            <el-input type=\"textarea\" v-model=\"formData.describe\"></el-input>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('blind.box.times')\" prop=\"times\">\n            <el-date-picker v-model=\"formData.times\" type=\"datetimerange\" :range-separator=\"$t('blind.time.to')\" :start-placeholder=\"$t('blind.time.start')\" :end-placeholder=\"$t('blind.time.end')\" picker-options=\"pickerOptions\">\n            </el-date-picker>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('blind.box.repetition')\" prop=\"isRepetition\">\n            <el-switch v-model=\"formData.isRepetition\"></el-switch>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('blind.box.amount')\" prop=\"amount\">\n            <el-input-number v-model=\"formData.amount\"></el-input-number>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.NFTAmount')\" prop=\"nftAmount\">\n            <el-input-number v-model=\"formData.nftAmount\"></el-input-number>\n          </el-form-item>\n          <div class=\"form-tip\">{{ $t('blind.box.totalAmount') }} :\n            <span class=\"cblue\"> {{ totalAmount }}</span>\n          </div>\n          <el-form-item :label=\"$t('blind.box.price')\" prop=\"price\">\n            <el-input-number v-model=\"formData.price\" :controls=\"false\"></el-input-number>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.address')\" prop=\"paytokenId\">\n            <el-select v-model=\"formData.paytokenId\" :placeholder=\"$t('blind.box.pleaseSelect')\">\n              <el-option v-for=\"(paytoken, index) in paytokens\" :key=\"index\" :label=\"paytoken.symbol\" :value=\"paytoken.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.picture')\" prop=\"imgUrl\">\n            <el-upload ref=\"upload\" action=\"\" :auto-upload=\"false\" :show-file-list=\"false\" :file-list=\"filelist\" :limit=\"1\" class=\"avatar-uploader\" accept=\"image/jpg, image/jpeg, image/png, image/gif\" :on-change=\" (file) => { uploadChange(file, 'cover'); }\">\n              <template v-if=\"formData.imgUrl\">\n                <media :url=\"formData.imgUrl\" type=\"image\"></media>\n              </template>\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.openGif')\" prop=\"anim1\">\n            <el-upload ref=\"upload\" action=\"\" :auto-upload=\"false\" :show-file-list=\"false\" :file-list=\"anim1List\" :limit=\"1\" class=\"avatar-uploader\" accept=\"image/jpg, image/jpeg, image/png, image/gif\" :on-change=\" (file) => { uploadChange(file, 'open');}\">\n              <template v-if=\"formData.anim1\">\n                <media :url=\"formData.anim1\" type=\"image\"></media>\n              </template>\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n          </el-form-item>\n          <el-form-item :label=\"$t('blind.box.openedGif')\" prop=\"anim2\">\n            <el-upload ref=\"upload\" action=\"\" :auto-upload=\"false\" :show-file-list=\"false\" :file-list=\"anim2List\" :limit=\"1\" class=\"avatar-uploader\" accept=\"image/jpg, image/jpeg, image/png, image/gif\" :on-change=\" (file) => { uploadChange(file, 'opened');}\">\n              <template v-if=\"formData.anim2\">\n                <media :url=\"formData.anim2\" type=\"image\"></media>\n              </template>\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n          </el-form-item>\n        </el-form>\n      </template>\n      <!-- 删除 -->\n      <template v-if=\"dialogStatus === 'del'\">\n        <span>{{ $t(\"blind.deleteTip\") }}</span>\n      </template>\n      <template v-if=\"dialogStatus === 'sign'\">\n        <p class=\"mb-20\">\n          <span class=\"bfont\"> {{ $t('blind.box.signTip') }} </span>\n        </p>\n        <div class=\"error-tip text-center mb-10\" v-if=\"error\"> {{ error }} </div>\n        <div class=\"mb-20 text-center\">\n          <el-button type=\"warning\" v-if=\"!connected\" @click=\"connectWallet\"> {{ $t(\"global.connectWallet\") }}</el-button>\n          <el-button :loading=\"apiLoading\" type=\"primary\" v-else @click=\"prepareSign\"> {{ $t('blind.box.sign') }}</el-button>\n        </div>\n      </template>\n      <template v-if=\"dialogStatus === 'set'\">\n        <box-set ref=\"comSet\" :box=\"box\" @confirm=\"onConfirm\"></box-set>\n      </template>\n      <!-- 底部按钮 -->\n      <div slot=\"footer\" class=\"flex align-center\" v-if=\"dialogStatus != 'set' && dialogStatus != 'sign'\">\n        <div class=\"\" v-if=\"error\">\n          <span class=\"cred bfont\">{{ error }}</span>\n        </div>\n        <div class=\"flex1\">\n          <el-button @click=\"handlerCancel\">{{ $t(\"blind.cancel\") }}</el-button>\n          <el-button :loading=\"apiLoading\" type=\"primary\" @click.native.prevent=\"handlerConfirm\">{{ $t(\"blind.confirm\") }}</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import Pagination from \"@/components/Pagination\";\n  import boxSet from \"./blindBoxSet\";\n  import Media from \"@/components/Media\";\n  import web3 from '@/utils/web3/index';\n  export default {\n    name: \"blindBox\",\n    components: { Pagination, boxSet, Media },\n    data () {\n      var validatePrice = (rule, value, callback) => {\n        if (this.payType === 2) {\n          if (parseInt(value) !== parseFloat(value)) {\n            callback(new Error(this.$t(\"blind.box.integer\")));\n          } else {\n            callback();\n          }\n        } else {\n          callback();\n        }\n      };\n      return {\n        list: null,\n        total: 0,\n        listLoading: false,\n        apiLoading: false,\n        listQuery: {\n          page: 1,\n          limit: 10,\n          sort: \"create_time\",\n          order: \"desc\",\n          blindTypeName: undefined,\n          sync: undefined,\n        },\n        syncOptions: [\n          {\n            value: true,\n            label: this.$t(\"blind.sync\"),\n          },\n          {\n            value: false,\n            label: this.$t(\"blind.unsync\"),\n          },\n        ],\n        dialogFormVisible: false,\n        dialogStatus: \"\",\n        error: \"\",\n        formData: {\n          address: \"\",\n          name: \"\",\n          describe: \"\",\n          owner: \"\",\n          times: [],\n          isRepetition: false,\n          amount: \"\",\n          nftAmount: \"\",\n          price: \"\",\n          paytokenId: \"\",\n          imgId: \"\",\n          imgUrl: \"\",\n          anim1: \"\",\n          anim2: \"\",\n        },\n        paytokens: [],\n        rules: {\n          address: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.emptyType\"),\n              trigger: \"blur\",\n            },\n          ],\n          name: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.emptyName\"),\n              trigger: \"blur\",\n            },\n          ],\n          owner: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.emptyOwner\"),\n              trigger: \"blur\",\n            },\n          ],\n          paytokenId: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.emptyPayToken\"),\n              trigger: \"blur\",\n            },\n          ],\n          amount: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.limitAmount\"),\n              trigger: \"blur\",\n            },\n          ],\n          nftAmount: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.emptyOpenAmount\"),\n              trigger: \"blur\",\n            },\n          ],\n          price: [\n            {\n              required: true,\n              message: this.$t(\"blind.box.limitPrice\"),\n              trigger: \"blur\",\n            },\n            {\n              validator: validatePrice,\n              trigger: \"blur\",\n            },\n          ],\n          imgUrl: {\n            required: true,\n            message: this.$t(\"blind.box.emptyPicture\"),\n            trigger: \"change\",\n          },\n          times: {\n            required: true,\n            message: this.$t(\"blind.box.emptyTimes\"),\n            trigger: \"change\",\n          },\n        },\n        pickerOptions: {\n          disabledDate (time) {\n            return time.getTime() < Date.now() - 8.64e7;\n          }\n        },\n        deleteId: \"\",\n        box: null,\n        fileImage: \"\",\n        filelist: [],\n        anim1Image: \"\",\n        anim1List: [],\n        anim2Image: \"\",\n        anim2List: [],\n        // 授权\n        blindBoxId: \"\",\n      };\n    },\n    computed: {\n      dialogTitle () {\n        let dialogTitle = \"\";\n        switch (this.dialogStatus) {\n          case \"add\":\n            dialogTitle = this.$t(\"blind.add\");\n            break;\n          case \"edit\":\n            dialogTitle = this.$t(\"blind.edit\");\n            break;\n          case \"del\":\n            dialogTitle = this.$t(\"blind.delete\");\n            break;\n          default:\n            break;\n        }\n        return dialogTitle;\n      },\n      connected(){\n        return this.$store.state.network.connected;\n      },\n      web3(){\n        return this.$store.state.network.web3;\n      },\n      config () {\n        return this.$store.state.user.config;\n      },\n      blindTypes () {\n        return this.$store.state.user.blindTypes;\n      },\n      tableBlindType () {\n        return function (address) {\n          for (let i = 0, len = this.blindTypes.length;i < len;i++) {\n            if (this.blindTypes[i].address === address)\n              return this.blindTypes[i].name;\n          }\n        };\n      },\n      tableTime () {\n        return function (start, end) {\n          let activeDate = \"\";\n          if (start && end) {\n            let startDate = new Date(start * 1000),\n              startDate_date = startDate.toLocaleDateString(),\n              startDate_time = startDate.toTimeString().slice(0, 8),\n              endDate = new Date(end * 1000),\n              endDate_date = endDate.toLocaleDateString(),\n              endDate_time = endDate.toTimeString().slice(0, 8);\n            activeDate =\n              startDate_date +\n              \" \" +\n              startDate_time +\n              \"一\" +\n              endDate_date +\n              \" \" +\n              endDate_time;\n          }\n          return activeDate;\n        };\n      },\n      payType () {\n        for (let item of this.paytokens) {\n          if (item.id === this.formData.paytokenId) {\n            return item.type;\n          }\n        }\n        return null\n      },\n      totalAmount () {\n        if (!this.formData.nftAmount || !this.formData.amount) return 0;\n        let amount = parseInt(this.formData.nftAmount * this.formData.amount)\n        return !amount ? 0 : amount;\n      },\n    },\n    created () {\n      this.init();\n    },\n    methods: {\n      connectWallet(){\n        this.$store.dispatch(\"connect\");\n      },\n      onConfirm () {\n        this.dialogFormVisible = false;\n        this.getList();\n      },\n      init(){\n        this.paytokenList();\n        this.getList();\n      },\n      paytokenList(){\n        this.$api(\"blind.paytoken.list\").then(res => {\n          if(this.$tool.checkResponse(res)){\n            this.paytokens = res.data.list;\n          }\n        });\n      },\n      getList () {\n        this.listLoading = true;\n        this.$api(\"blind.box.list\", this.listQuery)\n          .then((res) => {\n            this.list = res.data.list;\n            this.getNftList();\n            this.total = res.data.total;\n            this.listLoading = false;\n          })\n          .catch(() => {\n            this.list = [];\n            this.total = 0;\n            this.listLoading = false;\n          });\n      },\n      getNftList(){\n        var boxList = [];\n        for(var i = 0; i < this.list.length; i++){\n          boxList.push(this.list[i].id);\n        }\n        boxList = boxList.join(\",\");\n        this.$api(\"blind.box.nftsbymulti\",  { boxList }).then(res => {\n          if(this.$tool.checkResponse(res)){\n            var nfts = res.data.list;\n            var amountDict = {};\n            for(var i = 0; i < nfts.length; i++){\n              var nft = nfts[i];\n              if(!amountDict[nft.blindBoxId]) amountDict[nft.blindBoxId] = 0;\n              amountDict[nft.blindBoxId] += nft.amount;\n            }\n            for(var i = 0; i < this.list.length; i++){\n              var usedAmount = amountDict[this.list[i].id];\n              this.list[i].usedAmount = usedAmount ? usedAmount : 0;\n            }\n            this.list = [].concat(this.list);\n          }\n        });\n      },\n      checkForm () {\n        let error = false;\n        let amount = parseInt(this.formData.amount);\n        if (!amount || amount < 1) {\n          this.error = this.$t('blind.box.limitAmount')\n          error = true;\n        }\n        let nftAmount = parseInt(this.formData.nftAmount);\n        if (!nftAmount || nftAmount < 1) {\n          this.error = this.$t('blind.box.limitOpenAmount')\n          error = true;\n        }\n        let price = parseFloat(this.formData.price);\n        if (!price || price < 0) {\n          this.error = this.$t('blind.box.limitPrice')\n          error = true;\n        }\n        if (!this.fileImage && !this.formData.imgId) {\n          this.error = this.$t('blind.box.emptyCover')\n          error = true;\n        }\n        return !error;\n      },\n      addBox (data) {\n        let {\n          address,\n          name,\n          describe,\n          owner,\n          times,\n          isRepetition,\n          amount,\n          nftAmount,\n          price,\n          paytokenId,\n          imgId,\n          imgUrl,\n          anim1,\n          anim2,\n        } = this.formData;\n        let startTime = !times[0] ? 0\n          : parseInt(new Date(times[0]).getTime() / 1000);\n        let endTime = !times[1] ? 0\n          : parseInt(new Date(times[1]).getTime() / 1000);\n        if (data.cover) {\n          imgId = data.cover.id;\n          imgUrl = data.cover.url;\n        }\n        if (data.anim1) anim1 = data.anim1.url;\n\n        if (data.anim2) anim2 = data.anim2.url;\n\n        let sendData = {\n          address,\n          name,\n          describe,\n          owner,\n          startTime,\n          endTime,\n          isRepetition,\n          amount,\n          nftAmount,\n          price,\n          paytokenId,\n          imgId,\n          imgUrl,\n          anim1,\n          anim2,\n        };\n        this.apiLoading = true;\n        this.$api(\"blind.box.add\", sendData)\n          .then((res) => {\n            this.apiLoading = false;\n            if (this.$tool.checkResponse(res)) {\n              this.successCallback();\n              this.getList();\n            }\n          })\n          .catch((err) => {\n            this.failCallback(err);\n          });\n      },\n      editBox (data) {\n        let { times, imgId, imgUrl, anim1, anim2 } = this.formData;\n        let startTime = !times[0] ? 0\n          : parseInt(new Date(times[0]).getTime() / 1000);\n        let endTime = !times[1] ? 0\n          : parseInt(new Date(times[1]).getTime() / 1000);\n        if (data.cover) {\n          imgId = data.cover.id;\n          imgUrl = data.cover.url;\n        }\n        if (data.anim1) {\n          anim1 = data.anim1.url;\n        }\n        if (data.anim2) {\n          anim2 = data.anim2.url;\n        }\n\n        let sendData = {\n          id: this.formData.id,\n          address: this.formData.address,\n          name: this.formData.name,\n          describe: this.formData.describe,\n          owner: this.formData.owner,\n          isRepetition: this.formData.isRepetition,\n          amount: this.formData.amount,\n          nftAmount: this.formData.nftAmount,\n          price: this.formData.price,\n          paytokenId: this.formData.paytokenId,\n          startTime,\n          endTime,\n          imgId,\n          imgUrl,\n          anim1,\n          anim2,\n        };\n        this.apiLoading = true;\n        this.$api(\"blind.box.edit\", sendData)\n          .then((res) => {\n            this.apiLoading = false;\n            if (this.$tool.checkResponse(res)) {\n              this.successCallback();\n              this.getList();\n            }\n          })\n          .catch((err) => {\n            this.failCallback(err);\n          });\n      },\n      delBox () {\n        this.apiLoading = true;\n        this.$api(\"blind.box.deleted\", { id: this.deleteId })\n          .then((res) => {\n            this.apiLoading = false;\n            if (this.$tool.checkResponse(res)) {\n              this.successCallback();\n              let { page, limit } = this.listQuery;\n              if (page > 1 && this.total - 1 - (page - 1) * limit <= 0) {\n                this.listQuery.page -= 1;\n              }\n              this.total -= 1;\n              this.getList();\n            }\n          })\n          .catch((err) => {\n            this.failCallback(err);\n          });\n      },\n      prepareSign(){\n        this.apiLoading = true;\n        var _this = this;\n        this.$api(\"blind.box.prepare\", {\n          id: this.blindBoxId,\n          owner: this.web3.coinbase,\n        }).then(async function(res){\n          _this.apiLoading = false;\n          if(_this.$tool.checkResponse(res)){\n            var order = res.data;\n            var message = order.message;\n            message = message.replace(\"0x\", \"\");\n            var result = await web3.sign(message, _this.web3.coinbase);\n            if(result.error){\n              _this.error = result.error;\n            }\n            order.signature = result;\n            _this.signData(order);\n          }\n        });\n      },\n      signData (order) {\n        this.apiLoading = true;\n        this.$api(\"blind.box.sign\", order).then((res) => {\n          this.apiLoading = false;\n          if (this.$tool.checkResponse(res)) {\n            this.successCallback();\n            this.getList();\n          }\n        }).catch((err) => {\n          this.failCallback(err);\n        });\n      },\n      successCallback () {\n        this.$notify.success({\n          title: this.$t(\"blind.success\"),\n          message: this.$t(\"blind.messageSuccess\"),\n        });\n        this.handlerCancel();\n      },\n      failCallback (err, msg) {\n        this.apiLoading = false;\n        this.$notify.error({\n          title: this.$t(\"blind.fail\"),\n          message: err\n            ? (!msg ? this.$t(\"response.\" + err.data ? err.data.errno : \"\") : msg)\n            : this.$t(\"blind.messageFail\"),\n        });\n        if (this.dialogStatus == \"del\" || this.dialogStatus == \"sign\") {\n          this.handlerCancel();\n        }\n      },\n      callbackCloseDialog () {\n        this.resetForm();\n        this.$nextTick(function () {\n          this.$refs[\"formData\"] ? this.$refs[\"formData\"].clearValidate() : \"\";\n        });\n\n        this.dialogStatus = \"\";\n        this.error = \"\";\n      },\n      uploadChange (file, name) {\n        var event = event || window.event;\n        var files = event.target.files[0];\n        var reader = new FileReader();\n        var _this = this;\n        switch (name) {\n          case \"cover\":\n            this.filelist = [];\n            this.fileImage = file.raw;\n            reader.onload = function (e) {\n              _this.formData.imgUrl = e.target.result;\n            };\n            break;\n          case \"open\":\n            this.anim1List = [];\n            this.anim1Image = file.raw;\n            reader.onload = function (e) {\n              _this.formData.anim1 = e.target.result;\n            };\n            break;\n          case \"opened\":\n            this.anim2List = [];\n            this.anim2Image = file.raw;\n            reader.onload = function (e) {\n              _this.formData.anim2 = e.target.result;\n            };\n            break;\n        }\n        reader.readAsDataURL(files);\n      },\n      resetForm () {\n        this.formData = {\n          address: \"\",\n          name: \"\",\n          describe: \"\",\n          times: [],\n          isRepetition: false,\n          amount: \"\",\n          nftAmount: \"\",\n          price: \"\",\n          paytokenId: \"\",\n          imgId: \"\",\n          imgUrl: \"\",\n          anim1: \"\",\n          anim2: \"\",\n        };\n        this.fileImage = \"\";\n        this.anim1Image = \"\";\n        this.anim2Image = \"\";\n        this.error = \"\";\n      },\n      handlerBtn (btnType, row = {}) {\n        switch (btnType) {\n          case \"add\":\n            this.$nextTick(function () {\n              this.$refs[\"formData\"]\n                ? this.$refs[\"formData\"].clearValidate()\n                : \"\";\n            });\n            break;\n          case \"edit\":\n            this.fileImage = \"\";\n            this.anim1Image = \"\";\n            this.anim2Image = \"\";\n            this.formData = Object.assign({}, row);\n            let startTime = !this.formData.startTime\n              ? \"\"\n              : new Date(this.formData.startTime * 1000);\n            let endTime = !this.formData.endTime\n              ? \"\"\n              : new Date(this.formData.endTime * 1000);\n            this.$set(this.formData, \"times\", [startTime, endTime]);\n            this.$nextTick(function () {\n              this.$refs[\"formData\"]\n                ? this.$refs[\"formData\"].clearValidate()\n                : \"\";\n            });\n            break;\n          case \"del\":\n            this.deleteId = row.id;\n            break;\n          case \"sign\":\n            this.blindBoxId = row.id;\n            break;\n          case \"set\":\n            this.box = row;\n            break;\n        }\n        this.dialogFormVisible = true;\n        this.dialogStatus = btnType;\n      },\n      async handlerConfirm () {\n        if (this.apiLoading) return;\n\n        switch (this.dialogStatus) {\n          case \"add\":\n            if (!this.checkForm()) return;\n            var data = {};\n            if (this.fileImage) {\n              var result = await this.uploadStorage(this.fileImage);\n              data.cover = result;\n            }\n            if (this.anim1Image) {\n              var result = await this.uploadStorage(this.anim1Image);\n              data.anim1 = result;\n            }\n            if (this.anim2Image) {\n              var result = await this.uploadStorage(this.anim2Image);\n              data.anim2 = result;\n            }\n            this.addBox(data);\n            break;\n          case \"edit\":\n            if (!this.checkForm()) return;\n            var data = {};\n            if (this.fileImage) {\n              var result = await this.uploadStorage(this.fileImage);\n              data.cover = result;\n            }\n            if (this.anim1Image) {\n              var result = await this.uploadStorage(this.anim1Image);\n              data.anim1 = result;\n            }\n            if (this.anim2Image) {\n              var result = await this.uploadStorage(this.anim2Image);\n              data.anim2 = result;\n            }\n            this.editBox(data);\n            break;\n          case \"del\":\n            this.delBox();\n            break;\n          case \"sign\":\n            this.signData();\n            break;\n          case \"set\":\n            this.$nextTick(() => {\n              if (this.$refs.comSet) {\n                this.$refs.comSet.addBox();\n              }\n            });\n            break;\n        }\n      },\n      handlerCancel () {\n        this.dialogFormVisible = false;\n      },\n      async uploadStorage (file) {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"file\", file);\n          var that = this;\n          this.$api(\"storage.create\", formData)\n            .then((res) => {\n              if (this.$tool.checkResponse(res)) {\n                resolve(res.data);\n              } else {\n                reject(res);\n              }\n            }).catch((err) => {\n              reject(err);\n            });\n        });\n      },\n      handlerFilter () {\n        this.listQuery.page = 1;\n        this.getList();\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #20a0ff;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 120px;\n    height: 120px;\n    line-height: 120px;\n    text-align: center;\n  }\n  .avatar {\n    width: 145px;\n    height: 145px;\n    display: block;\n  }\n\n  .property-group {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 15px;\n    .property {\n      flex: 1;\n    }\n    .left {\n      padding-right: 40px;\n    }\n  }\n  .form-tip {\n    font-weight: bold;\n    padding: 0 0 10px 120px;\n  }\n</style>\n"]}]}