{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\AuctionDetail.vue?vue&type=style&index=0&id=f415bce0&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\AuctionDetail.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652258042074},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1652258044998},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1652258043094},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652258078791},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmlucHV0LWZsZXggewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICB9CiAgLmlucHV0LWZsZXggLnByb2Nlc3MtYnRuIHsKICAgIHBhZGRpbmc6IDA7CiAgfQogIC5hdWN0aW9uUGF5IHsKICAgIHdpZHRoOiAxMDAlOwogICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsKICB9CgogIC5jb3VudC1kb3duIHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgfQoKICAuaGlnaGVzdCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgcGFkZGluZy1ib3R0b206IDIwcHg7CiAgICAudGl0bGUgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgIGNvbG9yOiAjYWFhOwogICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICB9CiAgICAuaW5mbyB7CiAgICAgIGZsZXg6IDE7CiAgICB9CiAgICAub3AgewogICAgICBiYWNrZ3JvdW5kOiAkc2Vjb25kUHJpbWFyeUNvbG9yOwogICAgICBmb250LXdlaWdodDogbm9ybWFsOwogICAgICBmb250LXNpemU6IDEzcHg7CiAgICAgIHBhZGRpbmc6IDJweCA1cHg7CiAgICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXJSYWRpdXM7CiAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgICB9CgogICAgLmluZm8gewogICAgICBmbGV4OiAxOwogICAgfQogICAgLmxhYmVsIHsKICAgICAgbWFyZ2luLWJvdHRvbTogMnB4OwogICAgfQogIH0K"},{"version":3,"sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\AuctionDetail.vue"],"names":[],"mappings":"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","file":"C:/Users/Mohamed Tamim/Desktop/SONGTRADER-V2-FULL/fingernft_blindbox/fingernft_blindbox/vue-web/src/components/dialogs/AuctionDetail.vue","sourceRoot":"","sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" custom-class=\"fg-dialog\" @open=\"onOpen\" @closed=\"closed\">\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span v-if=\"uri\">{{ uri.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \" />\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\">\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{ $t(\"dialog.auctionDetail\") }}</span>\n          </div>\n        </div>\n        <info v-if=\"auction.owner\" :auction=\"auction\" :uri=\"uri\" :nft=\"nft\">\n        </info>\n        <bids v-if=\"timeStatus != 'start'\" :bids=\"bids\" :auction=\"auction\" @cancel=\"getBids\"></bids>\n        <div class=\"process-btn\" :class=\"{ wait: timeStatus == 'start' }\" v-if=\"parseInt(ownerQuantity) > 0 && parseInt(auction.sellValue) <= parseInt(ownerQuantity)\">\n          <div class=\"highest\" v-if=\"highestBid\">\n            <div class=\"info m-right-5\">\n              <div class=\"title\">\n                <div class=\"m-bottom-5\"> {{ $t(\"dialog.highestBidBy\") }} </div>\n                <div class=\"c3 cpointer\">\n                  {{ highestBid.nickname || $filters.ellipsisAddress(highestBid.owner) }}\n                </div>\n              </div>\n              <div class=\"label\">\n                <span class=\"cprimary m-right-5\">\n                  {{ highestBid.singlePrice || \"\" }}\n                  {{ auction.paytokenSymbol }}\n                </span>\n              </div>\n            </div>\n            <div class=\"info-right\" v-if=\"\n                !auction.status &&\n                timeStatus == 'expired' &&\n                connected &&\n                (user.coinbase == auction.owner ||\n                  user.coinbase == highestBid.owner)\n              \">\n              <el-button @click=\"showAcceptDialog = true\" size=\"mini\" plain type=\"primary\" v-if=\"user.coinbase == auction.owner\">\n                {{ $t(\"nftDetail.accept\") }}\n              </el-button>\n              <el-button @click=\"showBuyDialog = true\" size=\"mini\" type=\"primary\" v-else>\n                {{ $t(\"nftDetail.buy\") }}\n              </el-button>\n            </div>\n          </div>\n\n          <el-button type=\"info\" disabled v-if=\"auction.status\">\n            {{ codeDesc }}\n          </el-button>\n          <template v-else>\n            <el-button type=\"primary\" v-if=\"\n                connected &&\n                user.coinbase != auction.owner &&\n                timeStatus == 'end' &&\n                isBid\n              \" @click=\"showBidDialog = true\">\n              {{ $t(\"dialog.bid\") }}\n            </el-button>\n            <el-button type=\"primary\" disabled v-else>\n              {{ $t(\"dialog.bid\") }}\n            </el-button>\n            <div class=\"count-down\">\n              <auction-count-down class=\"cgreen\" @status=\"setTimeStatus\" :startTime=\"parseInt(auction.startTime)\" :endTime=\"parseInt(auction.endTime)\" :expiredTime=\"parseInt(auction.expiredTime)\">\n              </auction-count-down>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n\n    <auction-bid-dialog :show=\"showBidDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :highestBid=\"highestBid\" :auction=\"auction\" :nft=\"nft\" :uri=\"uri\">\n    </auction-bid-dialog>\n    <auction-buy-dialog :show=\"showBuyDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :bid=\"highestBid\" :auction=\"auction\" :nft=\"nft\" :uri=\"uri\">\n    </auction-buy-dialog>\n    <auction-accept-dialog :show=\"showAcceptDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :bid=\"highestBid\" :auction=\"auction\" :nft=\"nft\" :uri=\"uri\" :bidUsers=\"bidUsers\">\n    </auction-accept-dialog>\n  </el-dialog>\n</template>\n\n<script>\n  import Bids from \"./auction/Bids\";\n  import Info from \"./auction/Info\";\n  import BigNumber from \"bignumber.js\";\n  export default {\n    components: {\n      Bids,\n      Info,\n    },\n    data () {\n      return {\n        visible: this.show,\n        bids: [],\n        bidUsers: [],\n        timeStatus: \"\",\n        highestBid: null,\n        showBidDialog: false,\n        showCancelBidDialog: false,\n        showBuyDialog: false,\n        showAcceptDialog: false,\n        ownerQuantity: 0,\n      };\n    },\n    emits: ['confirm'],\n    props: {\n      show: {\n        type: Boolean,\n        default: true,\n      },\n      auction: {\n        type: Object,\n        default: {},\n      },\n      uri: {\n        type: Object,\n        default: null,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      token: {\n        type: Object,\n        default: {},\n      },\n    },\n    computed: {\n      connected () {\n        return this.$store.state.connected;\n      },\n      user () {\n        return this.$store.state.user;\n      },\n      codeDesc () {\n        let codeStr = this.$tools.getAuctionStatusCode(this.auction.statusCode);\n        return this.$t(\"statusCode.\" + codeStr);\n      },\n      codeStr () {\n        return this.$tools.getAuctionStatusCode(this.auction.statusCode);\n      },\n      isBid () {\n        if (this.highestBid) {\n          if (this.highestBid.owner === this.user.coinbase) return false;\n          return true\n        }\n        return true;\n      },\n    },\n    methods: {\n      onOpen () {\n        this.closeDialog();\n        this.initData();\n        this.getBids();\n        this.getOwners();\n      },\n      closeDialog () {\n        this.showBidDialog = false;\n        this.showCancelBidDialog = false;\n        this.showBuyDialog = false;\n        this.showAcceptDialog = false;\n      },\n      dialogConfirm () {\n        this.getBids();\n        this.closeDialog();\n      },\n      initData () {\n        this.bids = [];\n        this.highestBid = null;\n      },\n      setTimeStatus (status) {\n        this.timeStatus = status;\n      },\n      getBids () {\n        let data = {\n          token: this.auction.sellToken,\n          tokenId: this.auction.sellTokenId,\n          owner: this.auction.owner,\n          salt: this.auction.salt,\n        };\n        let that = this;\n        this.$api(\"auction.bids\", data).then((res) => {\n          if (that.$tools.checkResponse(res)) {\n            that.bids = that.formatBids(res.data);\n            that.bidUsers = res.data.users;\n            that.highestBid = that.getHighestBid(that.bids);\n          }\n        });\n      },\n      formatBids (bids) {\n        for (var i = 0;i < bids.length;i++) {\n          bids[i].singlePrice = this.$tools.noDecimalsValue(\n            bids[i].buying,\n            this.auction.sellValue,\n            this.auction.paytokenDecimals\n          );\n        }\n        return bids;\n      },\n      getOwners () {\n        let that = this;\n        let data = {\n          token: this.token.token,\n          tokenId: this.token.tokenId,\n        };\n        this.$api(\"nft.owners\", data).then((res) => {\n          if (that.$tools.checkResponse(res)) {\n            let address = \"\";\n            if (that.auction.owner && that.auction.owner != \"\") {\n              address = that.auction.owner.toLocaleLowerCase();\n            }\n            let owner = res.data.list.find((item) => {\n              return address === item.itemOwner.toLocaleLowerCase();\n            });\n            that.ownerQuantity = owner ? owner.quantity : 0;\n          }\n        });\n      },\n      getHighestBid (bids) {\n        let highestBid;\n        for (var i = 0;i < bids.length;i++) {\n          var bid = bids[i];\n          if (bid.status != 0) continue;\n          bid.singlePrice = this.$tools.noDecimalsValue(\n            bid.buying,\n            this.auction.sellValue,\n            this.auction.paytokenDecimals\n          );\n          if (\n            !highestBid ||\n            parseFloat(highestBid.singlePrice) < parseFloat(bid.singlePrice)\n          ) {\n            highestBid = bid;\n          }\n        }\n        return highestBid;\n      },\n      closed () {\n        this.initData()\n      }\n    },\n    watch: {\n      show () {\n        this.visible = this.show;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .input-flex {\n    display: flex;\n    justify-content: space-between;\n  }\n  .input-flex .process-btn {\n    padding: 0;\n  }\n  .auctionPay {\n    width: 100%;\n    display: block !important;\n  }\n\n  .count-down {\n    text-align: center;\n    margin-top: 10px;\n  }\n\n  .highest {\n    display: flex;\n    padding-bottom: 20px;\n    .title {\n      display: flex;\n      font-size: 14px;\n      color: #aaa;\n      margin-bottom: 5px;\n      flex-direction: column;\n    }\n    .info {\n      flex: 1;\n    }\n    .op {\n      background: $secondPrimaryColor;\n      font-weight: normal;\n      font-size: 13px;\n      padding: 2px 5px;\n      border-radius: $borderRadius;\n      margin-left: 5px;\n    }\n\n    .info {\n      flex: 1;\n    }\n    .label {\n      margin-bottom: 2px;\n    }\n  }\n</style>\n"]}]}