{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\HIndex.vue?vue&type=style&index=0&id=5ef3487e&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\HIndex.vue","mtime":1652355606641},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652272431199},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1652272436651},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1652272432945},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652272472930},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652272398602},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652272436651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}