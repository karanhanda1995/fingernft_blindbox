{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\NFTDetail.vue?vue&type=style&index=1&id=22cf07f4&lang=scss","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\NFTDetail.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652258042074},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1652258044998},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1652258043094},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652258078791},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLnRhYi1zZWN0aW9uIHsKICAgIG1pbi1oZWlnaHQ6IDQwMHB4ICFpbXBvcnRhbnQ7CiAgICAuZWwtdGFic19faGVhZGVyIHsKICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgIH0KICAgIC5lbC10YWJzX19pdGVtIHsKICAgICAgY29sb3I6ICRncmF5Q29sb3I7CiAgICAgIGhlaWdodDogYXV0bzsKICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7CiAgICAgIHBhZGRpbmc6IDAgOHB4OwogICAgICBmb250LXdlaWdodDogNDAwOwogICAgICAmOmhvdmVyLAogICAgICAmOmFjdGl2ZSwKICAgICAgJjpmb2N1cywKICAgICAgJi5pcy1hY3RpdmUsCiAgICAgICZpcy1mb2N1cyB7CiAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OwogICAgICAgIGNvbG9yOiAjMzMzOwogICAgICB9CiAgICB9CiAgICAuZWwtdGFic19fYWN0aXZlLWJhciB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7CiAgICB9CiAgfQoKICAuaW5mby1pdGVtIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsKICAgIC5hdmF0YXIgewogICAgICB3aWR0aDogMzVweDsKICAgICAgaGVpZ2h0OiAzNXB4OwogICAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgIG1hcmdpbi1yaWdodDogNXB4OwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIC5hdmF0YXItaW1nIHsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgIH0KICAgIH0KICAgIC5pbmZvIHsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTsKICAgICAgZmxleDogMTsKICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7CiAgICAgIC5hYi1yaWdodCB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIHJpZ2h0OiAwOwogICAgICAgIHRvcDogLTEwcHg7CiAgICAgIH0KICAgICAgLmxhYmVsIHsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgY29sb3I6ICM5OTk7CiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsKICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7CiAgICAgICAgJi5leHBpcmVkIHsKICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOwogICAgICAgIH0KICAgICAgfQogICAgICAuYzkgewogICAgICAgIGNvbG9yOiAjOTk5ICFpbXBvcnRhbnQ7CiAgICAgIH0KICAgICAgLm5mdC1vcCB7CiAgICAgICAgcGFkZGluZzogNXB4IDhweDsKICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeUNvbG9yOwogICAgICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXJSYWRpdXM7CiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgICAmLmNhbmNlbCB7CiAgICAgICAgICBjb2xvcjogIzQwOWVmZjsKICAgICAgICAgIGJhY2tncm91bmQ6ICNlY2Y1ZmY7CiAgICAgICAgfQogICAgICB9CiAgICAgIC5sYWJlbC1sZWZ0IHsKICAgICAgICBmbGV4OiAxOwogICAgICB9CiAgICAgIC5uYW1lIHsKICAgICAgICBmb250LXNpemU6IDE1cHg7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4OwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIH0KICAgICAgLmJmb250IHsKICAgICAgICBjb2xvcjogIzMzMzsKICAgICAgfQogICAgICAubWw1IHsKICAgICAgICBtYXJnaW4tbGVmdDogNXB4OwogICAgICB9CiAgICAgIC50IHsKICAgICAgICBjb2xvcjogIzk5OTsKICAgICAgfQogICAgICAuYmx1ZWMgewogICAgICAgIGNvbG9yOiAkcHJpbWFyeUNvbG9yOwogICAgICB9CiAgICAgIC50ZXh0IHsKICAgICAgICBmbGV4OiAxOwogICAgICB9CiAgICB9CiAgfQoKICAucHJvcGVydHlzIHsKICAgIHBhZGRpbmctdG9wOiAyMHB4OwogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICAgIGZsZXgtd3JhcDogd3JhcDsKICAgIC5wcm9wZXJ0eS1pdGVtIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1czsKICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgYm9yZGVyOiAkYm9yZGVyOwogICAgICBwYWRkaW5nOiAxMHB4OwogICAgICBtYXJnaW46IDAgMTBweCAxMHB4IDA7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICB9CiAgICAubGFsYmVsIHsKICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICBjb2xvcjogIzk5OTsKICAgIH0KICAgIC5uYW1lIHsKICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICBjb2xvcjogIzMzMzsKICAgIH0KICB9Cg=="},{"version":3,"sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\NFTDetail.vue"],"names":[],"mappings":"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","file":"C:/Users/Mohamed Tamim/Desktop/SONGTRADER-V2-FULL/fingernft_blindbox/fingernft_blindbox/vue-web/src/views/sections/NFTDetail.vue","sourceRoot":"","sourcesContent":["<template>\n  <div v-if=\"isFound\" class=\"nft-wrapper\">\n    <div class=\"preview-section\">\n      <div class=\"preview-section-image\">\n        <nft-preview :image=\"nftURI?.image\" :animation_url=\"nftURI?.animation_url\"></nft-preview>\n      </div>\n      <div class=\"preview-menus\">\n        <div class=\"preview-menu\" @click=\"likeFunction()\" :class=\"info.like ? 'active' : ''\">\n          <span class=\"iconfont\" :class=\"[info.like ? 'icon-collection-fill' : 'icon-collection']\"></span>\n        </div>\n        <div class=\"preview-menu\" @click=\"isFull = true\">\n          <span class=\"iconfont icon-fullscreen\"></span>\n        </div>\n        <el-popover placement=\"left\" trigger=\"click\" width=\"220px\" :show-arrow=\"false\" popper-class=\"share-popover\">\n          <template #reference>\n            <div class=\"preview-menu\">\n              <span class=\"iconfont icon-upload\"></span>\n            </div>\n          </template>\n          <share></share>\n        </el-popover>\n\n        <el-popover placement=\"left\" trigger=\"click\" width=\"180px\" :show-arrow=\"false\" popper-class=\"menu-popover\">\n          <template #reference>\n            <div class=\"preview-menu\">\n              <span class=\"iconfont icon-ellipsis\"></span>\n            </div>\n          </template>\n          <div class=\"menus\">\n            <template v-if=\"myAsset\">\n              <div class=\"menu\" @click=\"showDialog('transfer', myAsset)\">\n                {{ $t(\"nftDetail.transfer\") }}\n              </div>\n              <div class=\"menu\" @click=\"showDialog('burn', myAsset)\">\n                {{ $t(\"nftDetail.burnToken\") }}\n              </div>\n            </template>\n            <div class=\"menu\" @click=\"showDialog('opensea')\" v-if=\"config.network.opensea\">\n              {{ $t(\"nftDetail.viewOpensea\") }}\n            </div>\n          </div>\n        </el-popover>\n      </div>\n    </div>\n    <el-skeleton :loading=\"loading\" animated>\n      <template #template>\n        <div class=\"info-section\">\n          <div class=\"info-section-inner\">\n            <div class=\"info-main\">\n              <div class=\"info-base\">\n                <el-skeleton-item class=\"nft-name el-skeleton-item1\" /><br />\n                <el-skeleton-item class=\"nft-name el-skeleton-item2\" /><br />\n                <el-skeleton-item class=\"nft-name el-skeleton-item3\" /><br />\n              </div>\n              <el-skeleton-item class=\"nft-name el-skeleton-item4\" /><br />\n              <el-skeleton-item class=\"nft-name el-skeleton-item5\" /><br />\n              <el-skeleton-item class=\"nft-name el-skeleton-item4\" /><br />\n              <el-skeleton-item class=\"nft-name el-skeleton-item6 m-top-10\" /><br />\n              <el-skeleton-item class=\"nft-name el-skeleton-item6\" /><br />\n            </div>\n            <div class=\"info-footer-wrap\"></div>\n          </div>\n        </div>\n      </template>\n      <template #default>\n        <div class=\"info-section\">\n          <div class=\"info-section-inner\">\n            <div class=\"info-main\">\n              <div class=\"info-base\">\n                <div class=\"nft-name\">{{ nftURI.name || \"\" }}</div>\n                <div class=\"nft-metas\">\n                  <template v-if=\"!lowestAsset\">\n                    <span class=\"nft-meta\">{{ $t(\"nftDetail.nfs\") }}</span>\n                    <span class=\"nft-meta cblue\">{{ myAsset ? myAsset.quantity:0}} of {{info.quantity}}</span>\n                  </template>\n                  <template v-else>\n                    <span class=\"nft-meta\">\n                      {{ lowestAsset.singlePrice }}\n                      {{ lowestAsset?.payToken?.symbol }}\n                    </span>\n                    <span class=\"nft-meta cblue\">\n                      {{ lowestAsset.sellQuantity || 0 }} of {{ info.quantity }}\n                    </span>\n                  </template>\n                </div>\n                <div class=\"category-group\">\n                  <div class=\"category-item\" v-if=\"info.category\">\n                    {{ info.category.name }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"description\">\n                {{ nftURI.description || $t(\"nftDetail.text2\") }}\n              </div>\n\n              <div class=\"nft-royalties\" v-if=\"royalties\">\n                {{ royalties }}% {{ $t(\"nftDetail.text3\") }}\n              </div>\n              <div class=\"tab-section\">\n                <el-tabs v-model=\"tabIndex\" @tab-click=\"clickTab\">\n                  <el-tab-pane :label=\"$t('nftDetail.info')\" name=\"info\">\n                    <info-tab :info=\"info\" :creator=\"creator\" :attributes=\"nftURI.attributes\">\n                    </info-tab>\n                  </el-tab-pane>\n                  <el-tab-pane :label=\"$t('nftDetail.owners')\" name=\"owners\">\n                    <owners-tab :owners=\"owners\" @cancel=\"(asset) => showDialog('cancel_sale', asset)\" @buy=\"(asset) => showDialog('buy', asset)\"></owners-tab>\n                  </el-tab-pane>\n                  <el-tab-pane :label=\"$t('nftDetail.history')\" name=\"history\" v-if=\"historys.length > 0\">\n                    <history-tab :historys=\"historys\"></history-tab>\n                  </el-tab-pane>\n                  <el-tab-pane :label=\"$t('nftDetail.bid')\" name=\"bid\" v-if=\"bids.length > 0\">\n                    <bid-tab :bids=\"bids\" :myBid=\"myBid\" :myAsset=\"myAsset\" @cancel=\"(bid) => showDialog('cancel_bid', bid)\" @accept=\"(bid) => showDialog('accept', bid)\"></bid-tab>\n                  </el-tab-pane>\n                  <el-tab-pane :label=\"$t('nftDetail.auction')\" name=\"auctions\" v-if=\"validAuctions.length > 0\">\n                    <auctions-tab :auctions=\"validAuctions\" :nft=\"info\" @buy=\"(auction) => showDialog('auction_detail', auction)\" @cancel=\"(auction) => showDialog('auction_cancel', auction)\">\n                    </auctions-tab>\n                  </el-tab-pane>\n\n                </el-tabs>\n              </div>\n            </div>\n\n            <div class=\"info-footer-wrap\">\n              <div class=\"info-footer-header\" v-if=\"highestBid || lowestAuction\">\n                <highest-bid :full=\"!lowestAuction\" v-if=\"highestBid\" :bid=\"highestBid\" :myAsset=\"myAsset\" @accept=\"(bid) => showDialog('accept', bid)\"></highest-bid>\n                <lowest-auction :full=\"!highestBid\" v-if=\"lowestAuction\" :auction=\"lowestAuction\" :myAsset=\"myAsset\" @detail=\"(auction) => showDialog('auction_detail', auction)\">\n                </lowest-auction>\n              </div>\n              <div class=\"info-footer\">\n                <div class=\"info-footer-body\">\n                  <template v-if=\"myAsset\">\n                    <el-button type=\"primary\" v-if=\"!myAsset.onsell\" @click=\"showDialog('sale_type')\">\n                      {{ $t(\"nftDetail.sale\") }}\n                    </el-button>\n                    <el-button type=\"primary\" v-else-if=\"myAsset.onsell && myAsset.onsellType == 1\" @click=\"showDialog('edit_sale', myAsset)\">\n                      {{ $t(\"nftDetail.editSale\") }}\n                    </el-button>\n                    <el-button type=\"primary\" v-else-if=\"myAuction && (myAuction.startTime > (new Date().getTime() / 1000))\" @click=\"showDialog('auction_edit', myAuction)\">\n                      {{ $t(\"nftDetail.editAuction\") }}\n                    </el-button>\n                    <el-button type=\"primary\" v-else-if=\"myAuction\" @click=\"showDialog('auction_detail', myAuction)\">\n                      {{ $t(\"dialog.auctionDetail\") }}\n                    </el-button>\n                  </template>\n\n                  <template v-else-if=\"lowestAsset\">\n                    <el-button @click=\"showDialog('buy', lowestAsset)\" type=\"primary\">\n                      {{ $t(\"nftDetail.buy\") }}\n                    </el-button>\n                  </template>\n\n                  <template v-if=\"!myAsset || owners.length > 1\">\n                    <el-button plain v-if=\"!myBid\" @click=\"showDialog('bid')\" type=\"primary\">\n                      {{ $t(\"nftDetail.pad\") }}</el-button>\n\n                    <el-button plain v-else type=\"primary\" @click=\"showDialog('edit_bid', myBid)\">\n                      {{ $t(\"nftDetail.editBid\") }}</el-button>\n                  </template>\n                </div>\n\n                <div class=\"info-footer-footer\" v-if=\"!myAsset && !highestBid\">\n                  <span class=\"c9\">{{ $t(\"nftDetail.text4\") }}</span>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n    </el-skeleton>\n    <sale-type-dialog :show=\"showSaleTypeDialog\" @close=\"closeDialog\" @saleType=\"dialogSelect\">\n    </sale-type-dialog>\n    <auction-dialog :show=\"showAuctionDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :auction=\"order\" :myAsset=\"myAsset\" :uri=\"nftURI\" :nft=\"info\">\n    </auction-dialog>\n    <auction-detail-dialog :show=\"showAuctionDetailDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :token=\"token\" :auction=\"order\" :uri=\"nftURI\" :nft=\"info\"></auction-detail-dialog>\n    <auction-cancel-dialog :show=\"showAuctionCancelDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :auction=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </auction-cancel-dialog>\n\n    <sale-dialog :show=\"showSaleDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :asset=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </sale-dialog>\n    <cancel-sale-dialog :show=\"showCancelSaleDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :asset=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </cancel-sale-dialog>\n    <buy-dialog :show=\"showBuyDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :asset=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </buy-dialog>\n    <bid-dialog :show=\"showBidDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :bid=\"order\" :myAsset=\"myAsset\" :uri=\"nftURI\" :nft=\"info\">\n    </bid-dialog>\n    <cancel-bid-dialog :show=\"showCancelBidDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :bid=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </cancel-bid-dialog>\n    <accept-dialog :show=\"showAcceptDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :bid=\"order\" :myAsset=\"myAsset\" :uri=\"nftURI\" :nft=\"info\">\n    </accept-dialog>\n    <transfer-dialog :show=\"showTransferDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :asset=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </transfer-dialog>\n    <burn-dialog :show=\"showBurnDialog\" @close=\"closeDialog\" @confirm=\"dialogConfirm\" :asset=\"order\" :uri=\"nftURI\" :nft=\"info\">\n    </burn-dialog>\n    <full-screen :isFull=\"isFull\" :uri=\"nftURI\" @exitClick=\"isFull = false\"></full-screen>\n  </div>\n  <div class=\"no-found\" v-else>\n    <no-found></no-found>\n  </div>\n</template>\n\n<script>\n  import InfoTab from \"@/views/sections/details/Info\";\n  import OwnersTab from \"@/views/sections/details/Owners\";\n  import HistoryTab from \"@/views/sections/details/History\";\n  import AuctionsTab from \"@/views/sections/details/Auctions\";\n  import BidTab from \"@/views/sections/details/Bid\";\n  import HighestBid from '@/views/sections/details/HighestBid';\n  import LowestAuction from '@/views/sections/details/LowestAuction';\n\n  import FullScreen from \"@/components/FullScreen\";\n  import Share from \"@/components/Share\";\n  import NftPreview from \"@/components/NFTPreview\";\n  import MixinsNFTInfo from \"@/mixins/NftInfo\";\n  import NftItem from \"@/mixins/NftItem\";\n  export default {\n    name: \"NFTDetail\",\n    components: {\n      NftPreview,\n      InfoTab,\n      OwnersTab,\n      HistoryTab,\n      BidTab,\n      HighestBid,\n      LowestAuction,\n      AuctionsTab,\n      FullScreen,\n      Share,\n    },\n    mixins: [MixinsNFTInfo, NftItem],\n    data: function () {\n      var ids = this.$route.params.ids;\n      ids = ids.split(\":\");\n      return {\n        loading: true,\n        token: {\n          token: ids[0],\n          tokenId: ids[1],\n        },\n        tabIndex: \"info\",\n        creator: {},\n        info: {},\n        historys: [],\n        bids: [],\n        auctions: [],\n        showSaleDialog: false,\n        showCancelSaleDialog: false,\n        showBuyDialog: false,\n        showBidDialog: false,\n        showCancelBidDialog: false,\n        showAcceptDialog: false,\n        showTransferDialog: false,\n        showBurnDialog: false,\n        showSaleTypeDialog: false,\n        showAuctionDialog: false,\n        showAuctionDetailDialog: false,\n        showAuctionCancelDialog: false,\n        order: {},\n        isFull: false,\n        mediaData: [],\n        isFound: true,\n        royalties: '',\n        validAuctions: [],\n        sales: [],\n        nftList: []\n      };\n    },\n    created () {\n      this.getDetails();\n    },\n    computed: {\n      nft () {\n        return this.nftList[0] || {}\n      },\n      owners () {\n        if (!this.nft.items) return [];\n        return this.setOwners(this.nft.items, this.nft.sales);\n      },\n      lowestAsset () {\n        if (!this.nft.sales || !this.nft.items) return;\n        return this.getLowestNftAsset(this.nft.sales, this.nft.items);\n      },\n      myAsset () {\n        if (!this.connected || !this.nft.items) return;\n        return this.getAddressAsset(this.nft.items, this.nft.sales, this.nft.auctions, this.user.coinbase);\n      },\n      lowestAuction () {\n        if (!this.nft.auctions || !this.nft.items) return;\n        var auctionBid = this.getLowestAuctionBid(this.nft.auctions, this.nft.items);\n        return auctionBid;\n      },\n      myBid () {\n        if (!this.connected || !this.nft.bids) return;\n        if (this.nft.onlyOwner == this.user.coinbase) return;\n        var myBid = this.getActiveAddressBid(this.nft.bids, this.user.coinbase);\n        return myBid;\n      },\n      highestBid () {\n        if (!this.nft.bids) return;\n        return this.getHighestBid(this.nft.bids, this.nft.onlyOwner);\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      user () {\n        return this.$store.state.user;\n      },\n      connected () {\n        return this.$store.state.connected;\n      },\n      payTokens () {\n        return this.$store.state.payTokens;\n      },\n      nftURI () {\n        if (!this.info) return;\n        if (this.info.metadataContent) {\n          return this.$tools.analysis(this.info.metadataContent);\n        }\n        if (this.mediaData) {\n          let nft;\n          nft = this.info.address + \":\" + this.info.tokenId;\n          for (let key in this.mediaData) {\n            if (key == nft) {\n              return this.$tools.analysis(this.mediaData[key]);\n            }\n          }\n        }\n        return {};\n      },\n    },\n    methods: {\n      goAccount (address) {\n        this.$router.push({ path: \"/account/\" + address });\n      },\n      showDialog (type, asset) {\n        if (type == \"opensea\") {\n          if (!this.config.network.opensea) return;\n          let url =\n            this.config.network.opensea + '/' +\n            this.info.address +\n            \"/\" +\n            this.info.tokenId;\n          return window.open(url, \"_blank\");\n        }\n        if (!this.$tools.needLogin(this.$route.path)) return;\n        switch (type) {\n          case \"sale\":\n            this.showSaleDialog = true;\n            this.order = asset;\n            break;\n          case \"edit_sale\":\n            this.showSaleDialog = true;\n            this.order = asset;\n            break;\n          case \"cancel_sale\":\n            this.showCancelSaleDialog = true;\n            this.order = asset;\n            break;\n          case \"buy\":\n            this.showBuyDialog = true;\n            this.order = asset;\n            break;\n          case \"bid\":\n            this.showBidDialog = true;\n            this.order = asset;\n            break;\n          case \"edit_bid\":\n            this.showBidDialog = true;\n            this.order = asset;\n            break;\n          case \"cancel_bid\":\n            this.showCancelBidDialog = true;\n            this.order = asset;\n            break;\n          case \"accept\":\n            this.showAcceptDialog = true;\n            this.order = asset;\n            break;\n          case \"transfer\":\n            this.showTransferDialog = true;\n            this.order = asset;\n            break;\n          case \"burn\":\n            this.showBurnDialog = true;\n            this.order = asset;\n            break;\n          case \"sale_type\":\n            this.showSaleTypeDialog = true;\n            break;\n          case \"auction\":\n            this.showAuctionDialog = true;\n            this.order = asset;\n            break;\n          case \"auction_edit\":\n            this.showAuctionDialog = true;\n            this.order = asset;\n            break;\n          case \"auction_detail\":\n            this.showAuctionDetailDialog = true;\n            this.order = asset;\n            break;\n          case \"auction_cancel\":\n            this.showAuctionCancelDialog = true;\n            this.order = asset;\n            break;\n        }\n      },\n      closeDialog () {\n        this.showSaleDialog = false;\n        this.showCancelSaleDialog = false;\n        this.showBuyDialog = false;\n        this.showBidDialog = false;\n        this.showCancelBidDialog = false;\n        this.showAcceptDialog = false;\n        this.showTransferDialog = false;\n        this.showBuyDialog = false;\n        this.showBurnDialog = false;\n        this.showReportDialog = false;\n        this.showSaleTypeDialog = false;\n        this.showAuctionDialog = false;\n        this.showAuctionDetailDialog = false;\n        this.showAuctionCancelDialog = false;\n        this.order = {};\n      },\n      likeFunction (parameter) {\n        let data = {\n          address: this.info.address,\n          tokenId: this.info.tokenId,\n        };\n        if (!this.info.like) {\n          this.$api(\"like.add\", data).then((res) => {\n            if (this.$tools.checkResponse(res)) {\n              this.info.like = true;\n            }\n          });\n        } else {\n          this.$api(\"like.remove\", data).then((res) => {\n            if (this.$tools.checkResponse(res)) {\n              this.info.like = false;\n            }\n          });\n        }\n      },\n      queryLike (address, tokenId) {\n        if (!this.$store.state.connected) return;\n        let query = {\n          nfts: address + \":\" + tokenId,\n          address: this.$store.state.user.coinbase,\n        };\n        this.$api(\"like.listuserlike\", query).then((res) => {\n          if (this.$tools.checkResponse(res)) {\n            if (res.data.length) {\n              this.info.like = true;\n            }\n          } else {\n            this.$tools.message(res.errmsg);\n          }\n        });\n      },\n      getMedia (nfts) {\n        let _nfts = nfts.address + \":\" + nfts.tokenId;\n        let data = {\n          info: _nfts,\n        };\n        this.$api(\"nft.getmedia\", data).then((res) => {\n          this.mediaData = res.data;\n        });\n      },\n      getRoyalties (nfts) {\n        let _nfts = nfts.address + \":\" + nfts.tokenId;\n        let data = {\n          info: _nfts,\n        };\n        this.$api(\"nft.getroyalties\", data).then((res) => {\n          for (let key in res.data) {\n            if (key == _nfts && res.data[key]) {\n              let getroyalties = JSON.parse(res.data[key])\n              let count = 0;\n              for (let i = 0;i < getroyalties.length;i++) {\n                count = count + getroyalties[i]\n              }\n              that.royalties = that.$tools.decimal(count / 100, 2);\n            }\n          }\n        });\n      },\n      getDetails () {\n        var data = {\n          token: this.token.token,\n          tokenId: this.token.tokenId,\n        };\n        let that = this;\n        this.$api(\"nft.detail\", data).then(async function (res) {\n          if (that.$tools.checkResponse(res)) {\n            if (!res.data) {\n              that.isFound = false;\n              return;\n            }\n            that.loading = false;\n            let list = [res.data]\n            that.nftList = list\n            that.info = list[0];\n            that.queryFunction(list)\n            that.getBids();\n            that.getAuctions();\n            if (!that.info.royalties) {\n              that.getRoyalties(res.data)\n            } else {\n              let data = JSON.parse(that.info.royalties)\n              let count = 0;\n              for (let i = 0;i < data.length;i++) {\n                count = count + data[i]\n              }\n              that.royalties = that.$tools.decimal(count / 100, 2);\n            }\n            // that.creator = res.data.creator;\n            that.info.category = that.$store.getters.category(that.info.categoryId);\n            await that.getCreator();\n            // that.analysisNFT();\n            that.getContract();\n            that.getAuctionUserInfos();\n            that.getHistorys();\n          } else {\n            that.$tools.message(res.errmsg);\n          }\n        });\n      },\n      getCreator () {\n        let data = { address: this.info.creator };\n        this.$api('user.info', data).then(res => {\n          if (this.$tools.checkResponse(res)) {\n            this.creator = res.data;\n          }\n        })\n      },\n      getHistorys () {\n        var data = {\n          token: this.token.token,\n          tokenId: this.token.tokenId,\n        };\n        this.$api(\"nft.history\", data).then((res) => {\n          if (this.$tools.checkResponse(res)) {\n            let historys = [];\n            let history;\n            for (var i = 0;i < res.data.length;i++) {\n              history = res.data[i];\n              history.payToken = {\n                address: history.paytokenAddress,\n                symbol: history.paytokenSymbol,\n                decimals: history.paytokenDecimals,\n                name: history.paytokenName\n              }\n              historys.push(history);\n            }\n            this.historys = historys;\n          }\n        });\n      },\n      getBids () {\n        return new Promise((resolve, reject) => {\n          var data = {\n            token: this.token.token,\n            tokenId: this.token.tokenId,\n          };\n          this.$api(\"nft.bids\", data).then((res) => {\n            if (this.$tools.checkResponse(res)) {\n              let bids = [];\n              for (var i = 0;i < res.data.length;i++) {\n                let bid = res.data[i];\n                bid.payToken = {\n                  address: bid.paytokenAddress,\n                  symbol: bid.paytokenSymbol,\n                  decimals: bid.paytokenDecimals,\n                  name: bid.paytokenName\n                }\n                bids.push(bid);\n              }\n              this.bids = bids;\n            } else {\n              this.$tools.message(res.errmsg);\n            }\n            resolve(res);\n          });\n        });\n      },\n      getAuctions () {\n        return new Promise((resolve, reject) => {\n          var data = {\n            token: this.token.token,\n            tokenId: this.token.tokenId,\n          };\n          this.$api(\"auction.list\", data).then((res) => {\n            if (this.$tools.checkResponse(res)) {\n              var auctions = [];\n              var validAuctions = [];\n              for (var i = 0;i < res.data.list.length;i++) {\n                let auction = res.data.list[i];\n                auction.payToken = {\n                  address: auction.paytokenAddress,\n                  symbol: auction.paytokenSymbol,\n                  decimals: auction.paytokenDecimals,\n                  name: auction.paytokenName\n                }\n                let validAuction = this.getValidAuctions(auction, this.owners)\n                if (validAuction) {\n                  validAuctions.push(validAuction)\n                } else {\n                  continue;\n                }\n                let highestPrice = auction.highestPrice;\n                if (!highestPrice) {\n                  auction.lowestPrice = this.$tools.singlePrice(auction.startValue, auction.sellValue, auction.payToken);\n                  auction.lowestUsdtPrice = this.$tools.decimal(\n                    auction.payToken ? auction.lowestPrice * auction.payToken.rate : \"0\"\n                  );\n                } else {\n                  auction.lowestPrice = this.$tools.singlePrice(highestPrice, auction.sellValue, auction.payToken);\n                  auction.lowestUsdtPrice = this.$tools.decimal(\n                    auction.payToken ? auction.lowestPrice * auction.payToken.rate : \"0\"\n                  );\n                }\n                auctions.push(auction);\n              }\n              this.auctions = auctions;\n              this.validAuctions = validAuctions;\n            }\n            resolve(true);\n          });\n        });\n      },\n      analysisNFT () {\n        // if (this.connected) {\n        //   this.myBid = this.getActiveAddressBid(this.bids, this.user.coinbase);\n        //  this.myAuction = this.hasAuction ? this.getActiveAddressAuction(this.auctions, this.user.coinbase) : null;\n        // }\n        // this.lowestAsset = this.getLowestAsset(this.owners);\n        // this.lowestAuction = this.hasAuction ? this.getLowestAuction(this.auctions, this.owners) : null;\n        // this.highestBid = this.getHighestBid(this.bids);\n      },\n      setOwners (items, sales) {\n        let result = []\n        let num = 0\n        items.forEach(function (value, key) {\n          if (sales) {\n            if (sales.get(key)) {\n              result[num] = { ...sales.get(key), onsell: value.onsell, onsellType: value.onsellType }\n            } else {\n              result[num] = value\n            }\n          } else {\n            result[num] = value\n          }\n          num++;\n        }, items)\n        return result\n      },\n      getContract () {\n        let data = {\n          addresss: this.info.address,\n        };\n        this.$api(\"contract.listbyaddr\", data).then((res) => {\n          if (this.$tools.checkResponse && res.data.length) {\n            this.info.contract = res.data[0];\n            if (!this.info.contract.name || !this.info.contract.symbol) {\n              this.getinfo();\n            }\n          }\n        });\n      },\n      getAuctionUserInfos () {\n        let addrList = [];\n        for (var i = 0;i < this.auctions.length;i++) {\n          addrList.push(this.auctions[i].owner);\n        }\n        addrList = addrList.join(\",\")\n        if (!addrList) return;\n        let params = {\n          addrList: addrList,\n        }\n        let that = this;\n        this.$api(\"user.listbyaddr\", params).then((res) => {\n          if (that.$tools.checkResponse(res)) {\n            let users = {};\n            for (var i = 0;i < res.data.length;i++) {\n              let user = res.data[i];\n              users[user.address.toLocaleLowerCase()] = user;\n            }\n            for (var i = 0;i < that.auctions.length;i++) {\n              let auction = this.auctions[i];\n              let user = users[auction.owner.toLocaleLowerCase()];\n              if (!user) continue;\n              that.auctions[i].nickname = user.nickname;\n              that.auctions[i].avatar = user.avatar;\n            }\n            that.auctions = JSON.parse(JSON.stringify(that.auctions));\n          }\n        });\n      },\n      getinfo () {\n        let data = {\n          address: this.info.address,\n        };\n        this.$api(\"contract.getinfo\", data).then((res) => {\n          if (this.$tools.checkResponse && res.data.length) {\n            this.info.contract.name = res.data.name;\n            this.info.contract.symbol = res.data.symbol;\n          }\n        });\n      },\n      dialogConfirm () {\n        this.closeDialog();\n        this.getDetails();\n      },\n      dialogSelect (selectVal) {\n        this.showSaleTypeDialog = false;\n        this.$nextTick(() => {\n          if (selectVal === 0) {\n            this.showDialog(\"sale\", this.myAsset);\n          } else {\n            this.showDialog(\"auction\", this.myAuction);\n          }\n        });\n      },\n      clickTab (tab) { },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n  .nft-wrapper {\n    width: 100% !important;\n    max-width: none;\n    padding: 0;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n\n  .info-section {\n    position: absolute;\n    left: 360px;\n    right: 0;\n    top: $headerHeight;\n    bottom: 0;\n    overflow: hidden;\n    .info-section-inner {\n      height: 100%;\n      overflow-y: auto;\n    }\n    & .main-wrapper {\n      max-width: 100%;\n      margin: auto;\n      height: 100%;\n      overflow-y: auto;\n    }\n  }\n\n  .preview-section {\n    right: 515px;\n    width: auto;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    top: $headerHeight;\n    padding: 20px 25px;\n    overflow-y: auto;\n  }\n\n  .info-section {\n    width: 474px;\n    right: 24px;\n    top: 88px;\n    bottom: 30px;\n    overflow: hidden;\n    border-radius: 5px;\n    background: #fff;\n    left: auto;\n    .info-section-inner {\n      height: 100%;\n      overflow-y: auto;\n    }\n  }\n\n  .preview-section-image {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    padding: 40px 80px 100px 40px;\n    justify-content: center;\n    .nft-image {\n      max-width: 100%;\n      height: auto;\n      border-radius: $borderRadius;\n    }\n  }\n\n  .preview-menus {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 10px 40px 40px;\n    padding: 15px;\n    background: #fff;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    box-shadow: 0 1px 3px rgb(4 4 5 / 5%);\n    .preview-menu {\n      cursor: pointer;\n      width: 33px;\n      height: 33px;\n      font-size: 16px;\n      border: 1px solid #333;\n      border-radius: 50%;\n      margin-right: 20px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: #333;\n      &.active {\n        color: #ffd200;\n        border: 1px solid #ffd200;\n      }\n    }\n  }\n\n  .menu-popover {\n    .menu {\n      cursor: pointer;\n      padding: 8px 7px;\n      font-size: 13px;\n      font-weight: normal;\n      border-radius: $borderRadius;\n      &:hover,\n      &:active {\n        background: #f0f0f0;\n      }\n    }\n  }\n\n  .info-main {\n    padding: 20px 20px 200px;\n  }\n\n  .info-base {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .category-group {\n    display: flex;\n  }\n  .category-item {\n    padding: 4px 10px;\n    border: 1px solid #e5e5e5;\n    border-radius: $borderRadius;\n    margin-right: 5px;\n    font-size: 8px;\n    font-weight: 400;\n    color: #1b1b1b;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  .description {\n    margin: 14px 0 10px;\n    font-size: 8px;\n    font-weight: 400;\n    color: #333;\n  }\n\n  .nft-name {\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n    padding-bottom: 10px;\n  }\n\n  .nft-metas {\n    display: flex;\n    padding-bottom: 10px;\n    .nft-meta {\n      font-size: 9px;\n      font-weight: bold;\n      margin-right: 10px;\n      &.b {\n        font-weight: bold;\n      }\n      &.c3 {\n        color: #333;\n      }\n      &.c9 {\n        color: #999;\n      }\n      &.cblue {\n        color: $primaryColor;\n      }\n    }\n  }\n\n  .nft-royalties {\n    background: #e6f9ee;\n    padding: 8px 10px;\n    border-radius: 5px;\n    width: 100%;\n    font-size: 14px;\n    color: #666;\n    text-align: center;\n  }\n\n  .info-footer-wrap {\n    display: flex;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: #f0f0f0;\n    z-index: 2;\n    flex-direction: column;\n  }\n  .info-footer {\n    padding: 20px 20px;\n    border-radius: 5px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1;\n  }\n  .info-footer-header {\n    display: flex;\n    flex-direction: row;\n    background: #fff;\n    margin: 10px 10px 0;\n    border-radius: $borderRadius;\n    padding: 10px;\n  }\n  .info-footer-body {\n    display: flex;\n    justify-content: center;\n    .el-button {\n      width: auto;\n    }\n  }\n  .info-footer-footer {\n    text-align: center;\n    padding-top: 20px;\n    font-size: 13px;\n  }\n\n  .no-found {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n  }\n\n  .el-skeleton-item1 {\n    width: 300px !important;\n    height: 22px !important;\n  }\n  .el-skeleton-item2 {\n    width: 180px !important;\n    height: 15px !important;\n  }\n  .el-skeleton-item3 {\n    width: 50px !important;\n    height: 15px !important;\n  }\n  .el-skeleton-item4 {\n    width: 180px !important;\n    height: 15px !important;\n  }\n  .el-skeleton-item5 {\n    width: 300px !important;\n    height: 18px !important;\n  }\n  .el-skeleton-item6 {\n    margin-bottom: 10px !important;\n    width: 434px !important;\n    height: 54px !important;\n  }\n  @media screen and (max-width: $media_l2) {\n    .preview-section {\n      right: 480px;\n    }\n    .info-section {\n      width: 480px;\n    }\n    .info-footer-wrap {\n      width: 480px;\n    }\n  }\n\n  @media screen and (max-width: $media_l5) {\n    .nft-wrapper {\n      position: initial;\n      left: auto;\n      right: auto;\n      top: auto;\n      bottom: auto;\n      .preview-section {\n        position: inherit;\n        left: auto;\n        right: auto;\n        bottom: auto;\n        padding: 20px;\n        .preview-section-image {\n          padding: 0 0 20px;\n        }\n        .preview-menus {\n          position: initial;\n          left: auto;\n          right: auto;\n          bottom: auto;\n          margin: 0;\n          padding: 10px 0;\n          background: transparent;\n          box-shadow: none;\n        }\n      }\n      .info-section {\n        position: inherit;\n        left: auto;\n        right: auto;\n        top: auto;\n        bottom: auto;\n        overflow: auto;\n        width: auto;\n        .info-section-inner {\n          height: auto;\n          overflow: auto;\n        }\n      }\n      .info-footer-wrap {\n        width: auto;\n        position: fixed;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .tab-section {\n    min-height: 400px !important;\n    .el-tabs__header {\n      margin-bottom: 20px;\n    }\n    .el-tabs__item {\n      color: $grayColor;\n      height: auto;\n      line-height: 30px;\n      padding: 0 8px;\n      font-weight: 400;\n      &:hover,\n      &:active,\n      &:focus,\n      &.is-active,\n      &is-focus {\n        box-shadow: none !important;\n        color: #333;\n      }\n    }\n    .el-tabs__active-bar {\n      background-color: #333;\n    }\n  }\n\n  .info-item {\n    display: flex;\n    padding-bottom: 20px;\n    flex-direction: row;\n    align-items: flex-start;\n    .avatar {\n      width: 35px;\n      height: 35px;\n      border-radius: 50%;\n      overflow: hidden;\n      margin-right: 5px;\n      cursor: pointer;\n      .avatar-img {\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .info {\n      position: relative;\n      border-bottom: 1px solid #eee;\n      flex: 1;\n      padding-bottom: 10px;\n      .ab-right {\n        position: absolute;\n        right: 0;\n        top: -10px;\n      }\n      .label {\n        font-size: 14px;\n        color: #999;\n        font-weight: 400;\n        margin-bottom: 5px;\n        line-height: 14px;\n        &.expired {\n          text-decoration: line-through;\n        }\n      }\n      .c9 {\n        color: #999 !important;\n      }\n      .nft-op {\n        padding: 5px 8px;\n        color: #fff;\n        background: $primaryColor;\n        border-radius: $borderRadius;\n        display: inline-block;\n        cursor: pointer;\n        &.cancel {\n          color: #409eff;\n          background: #ecf5ff;\n        }\n      }\n      .label-left {\n        flex: 1;\n      }\n      .name {\n        font-size: 15px;\n        margin-bottom: 5px;\n        display: flex;\n        cursor: pointer;\n        align-items: center;\n      }\n      .bfont {\n        color: #333;\n      }\n      .ml5 {\n        margin-left: 5px;\n      }\n      .t {\n        color: #999;\n      }\n      .bluec {\n        color: $primaryColor;\n      }\n      .text {\n        flex: 1;\n      }\n    }\n  }\n\n  .propertys {\n    padding-top: 20px;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    .property-item {\n      display: flex;\n      border-radius: $borderRadius;\n      flex-direction: column;\n      border: $border;\n      padding: 10px;\n      margin: 0 10px 10px 0;\n      text-align: center;\n      justify-content: center;\n    }\n    .lalbel {\n      font-size: 14px;\n      color: #999;\n    }\n    .name {\n      font-size: 14px;\n      color: #333;\n    }\n  }\n</style>\n\n"]}]}