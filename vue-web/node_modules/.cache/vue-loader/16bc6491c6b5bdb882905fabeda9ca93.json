{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Open.vue?vue&type=style&index=0&id=60d84a44&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Open.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652258042074},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1652258044998},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1652258043094},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1652258078791},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLm9wZW4tYnRuIHsKICAgIHdpZHRoOiA1MCU7CiAgICBoZWlnaHQ6IDI3cHg7CiAgICBiYWNrZ3JvdW5kOiAjNGYwMGZmOwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogIH0KICAuZm9ybS1mb290ZXIgewogICAgbWFyZ2luLXRvcDogMjBweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICB9CgogIC8qCiAgICAgICAgLmVsLWlucHV0LS1zdWZmaXggLmVsLWlucHV0X19pbm5lciB7CiAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDsKICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweCAhaW1wb3J0YW50OwogICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICAgIHBhZGRpbmc6IDBweCA4cHggIWltcG9ydGFudDsKICAgICAgICAgIGhlaWdodDogNDBweCAhaW1wb3J0YW50OwogICAgICAgIH0KICAgICAgICAuZWwtaW5wdXRfX2lubmVyIHsKICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50OwogICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4ICFpbXBvcnRhbnQ7CiAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgICAgcGFkZGluZzogMHB4IDhweCAhaW1wb3J0YW50OwogICAgICAgICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50OwogICAgICAgICAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgICAgICovCiAgLnZpZGVvQ2xhc3MgewogICAgd2lkdGg6IDEwMCU7CiAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogIH0KICAub3Blbi1zdGF0dXN7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQogIC5kZXNjcmliZS1ib3ggewogICAgZm9udC1zaXplOiA5cHg7CiAgICBjb2xvcjogIzAwMDAwMDsKICAgIG1hcmdpbjogOHB4IDBweCAyN3B4OwogIH0KICAub3Blbi1uZnQtaXRlbXMgewogICAgJi5mbGV4LXdyYXAgewogICAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICAgICAgLm9wZW4tbmZ0LWl0ZW0gewogICAgICAgIHdpZHRoOiAyMCU7CiAgICAgICAgZmxleDogbm9uZTsKICAgICAgfQogICAgfQogIH0KICAub3Blbi1uZnQtaXRlbSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleDogMTsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgIC5uZnQtaW1nIHsKICAgICAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1czsKICAgICAgd2lkdGg6IDkwJTsKICAgICAgbWFyZ2luOiAwIDVweDsKICAgIH0KICAgIC5uZnQtbmFtZSB7CiAgICAgIHdpZHRoOiA5MCU7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgbWFyZ2luOiAwIDVweDsKICAgICAgbWFyZ2luLXRvcDogMTBweDsKICAgIH0KICB9CiAgLmZnLWRpYWxvZyB7CiAgICAmLmJnLWZnLWRpYWxvZyB7CiAgICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50OwogICAgICB3aWR0aDogODAwcHggIWltcG9ydGFudDsKICAgIH0KICB9Cg=="},{"version":3,"sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Open.vue"],"names":[],"mappings":"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","file":"C:/Users/Mohamed Tamim/Desktop/SONGTRADER-V2-FULL/fingernft_blindbox/fingernft_blindbox/vue-web/src/components/dialogs/Open.vue","sourceRoot":"","sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" :custom-class=\" blindBoxSigned && isOver && openList.length > 2 ? 'fg-dialog bg-fg-dialog' : 'fg-dialog' \" @close=\"$emit('close')\" @closed=\"closed\" @open=\"onOpen\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span>{{ blindbox.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \">\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"all-error\" v-if=\"formError.all\"> {{ formError.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.open')}}</span>\n          </div>\n        </div>\n\n        <div class=\"input-group\">\n          <div class=\"input-info\">\n            <div class=\"tip\">{{$t('dialog.salePrice')}}</div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" :disabled=\"true\" type=\"number\" v-model=\"form.price\">\n              <template #suffix>\n                <div class=\"paytoken-suffix\">{{ payToken.symbol }}</div>\n              </template>\n            </el-input>\n\n            <div class=\"stip\">\n              <div class=\"stip-item\">{{$t('dialog.yourBalance')}} <span class=\"bfont\">{{ pay.balance }} {{ payToken.symbol }}</span> </div>\n              <div class=\"stip-item\">{{$t('dialog.serviceFee')}} <span class=\"bfont\">{{serviceFee}}%</span> </div>\n              <div class=\"stip-item\"> {{$t('dialog.pay')}}\n                <span class=\"bfont\"> {{pay.pay}} {{ payToken.symbol }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"input-info\">\n            <div class=\"tip\"><span>{{$t('dialog.buyQuantity')}}</span>\n              <span class=\"gray-font\">({{ !blindbox.order.openeds ?  blindbox.amount : blindbox.amount - blindbox.order.openeds}} {{$t('dialog.available')}})</span>\n            </div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-model=\"form.quantity\">\n            </el-input>\n\n            <div class=\"input-error\" v-if=\"formError.quantity\">{{ formError.quantity}}</div>\n          </div>\n        </div>\n\n        <div class=\"process-btn\">\n          <template v-if=\"pay && parseFloat(pay.pay) > parseFloat(pay.balance)\">\n            <el-button @click=\"onSubmit\" disabled type=\"primary\" :loading=\"confirm\"> {{ $t('dialog.open')}}\n            </el-button>\n            <div class=\"input-error center-font\">{{$t('dialog.noBalance')}}</div>\n          </template>\n          <template v-else>\n            <el-button @click=\"onSubmit\" type=\"primary\" :loading=\"confirm\">{{$t('dialog.open')}}</el-button>\n          </template>\n\n        </div>\n        <div class=\"process-btn\">\n          <el-button plain type=\"info\" @click=\"$emit('close')\">{{$t('dialog.cancel')}}\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else-if=\"confirm && !blindBoxSigned\">\n      <div class=\"all-error\" v-if=\"error.all\"> {{ error.all }} </div>\n\n      <div class=\"process\" v-if=\"isContract\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.approve')}} {{ payToken.symbol }}</span>\n          </div>\n          <span v-if=\"step.approve != 1\" :class=\"step.approve== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onApprove\" type=\"primary\" v-if=\"step.approve == 0\">{{$t('dialog.approve')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.approve == 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.approve\">{{ error.approve }}</div>\n      </div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.sto')}}</span>\n          </div>\n          <span v-if=\"step.open != 1\" :class=\"step.open == 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n\n        <div class=\"process-btn\" v-if=\"!isContract\">\n          <el-button @click=\"onBuy\" type=\"primary\" v-if=\"step.open == 0\">{{$t('dialog.open')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.open == 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n\n        <div class=\"process-btn\" v-else>\n          <el-button disabled type=\"info\" v-if=\"step.approve != 2\">{{$t('dialog.open')}}</el-button>\n          <el-button @click=\"onBuy\" type=\"primary\" v-else-if=\"step.open == 0\">{{$t('dialog.open')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.open == 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.open\">{{ error.open }}</div>\n      </div>\n\n    </div>\n    <div v-else-if=\"confirm && blindBoxSigned\">\n      <div class=\"middle-box\">\n        <div v-if=\"!isOver\" class=\"open-status\">\n          <img v-if=\"!isExplosion\" :src=\"openingGif\" class=\"videoClass\" />\n          <img v-else :src=\"openedGif\" class=\"videoClass\" />\n        </div>\n        <div class=\"flex justify-around open-nft-items\" :class=\"openList.length > 5 ? 'flex-wrap' : ''\" v-else>\n          <div class=\"open-nft-item\" v-for=\"(nft, i) in openList\" :key=\"i\">\n            <img class=\"nft-img\" :src=\"$filters.fullImageUrl( $tools.analysis(nft.metadataContent).image)\" />\n            <div class=\"nft-name\">{{ nft.name }}</div>\n          </div>\n        </div>\n        <div v-if=\"!isOver\" class=\"describe-box\">{{ $t('dialog.openTip') }}</div>\n      </div>\n\n      <div class=\"form-footer \">\n        <el-button v-if=\"!isOver\" class=\"open-btn\" :loading=\"loading\" type=\"primary\" disabled>\n          {{$t('dialog.opening')}}</el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from \"bignumber.js\";\n  export default {\n    emits: [\"confirm\", \"close\"],\n    name: \"\",\n    data () {\n      return {\n        visible: this.show,\n        form: {\n          price: \"\",\n          quantity: \"\",\n        },\n        confirm: false,\n        formError: {\n          all: \"\",\n          quantity: \"\",\n        },\n        step: {\n          approve: 0,\n          open: 0,\n        },\n        error: {\n          all: \"\",\n          approve: \"\",\n          open: \"\",\n        },\n        openList: [],\n        isOver: false,\n        isExplosion: false,\n      };\n    },\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      blindbox: {\n        type: Object,\n        default: {},\n      },\n      nfts: {\n        type: [Array, Object],\n        default: [],\n      }\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      blindBoxSigned () {\n        return this.$store.state.blindBoxSigned;\n      },\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      payToken () {\n        let payToken = {\n          address: this.blindbox.paytokenAddress,\n          name: this.blindbox.paytokenName,\n          symbol: this.blindbox.paytokenSymbol,\n          type: this.blindbox.paytokenType,\n          tokenId: this.blindbox.paytokenTokenId,\n          decimals: this.blindbox.paytokenDecimals\n        }\n        return payToken;\n      },\n      pay () {\n        let price;\n        if (!this.form.price) {\n          return { pay: 0, balance: 0 }\n        }\n        price = this.form.price * this.form.quantity;\n\n        let balance = this.$store.getters.getBalanceV2(this.payToken);\n        balance = this.$tools.decimal(balance, 4)\n\n        let pay = this.$tools.decimal(price + (price * this.serviceFee / 100));\n        return { pay, balance }\n      },\n      serviceFee () {\n        let fee = this.$tools.decimal(this.blindbox.order.buyerfee / 100, 2);\n        if (this.$sdk.keyAssetType(this.payToken.type) == \"ERC721\" ||\n          this.$sdk.keyAssetType(this.payToken.type) == \"ERC1155\") {\n          return 0;\n        }\n        return fee;\n      },\n      isContract () {\n        if (this.payToken.address == this.$sdk.NULL_ADDRESS()) return false;\n        return true;\n      },\n      openingGif () {\n        if (!this.blindbox.anim1) return require('@/assets/img/blindbox/opening.gif')\n        return this.blindbox.anim1;\n      },\n      openedGif () {\n        if (!this.blindbox.anim2) return require('@/assets/img/blindbox/opened.gif')\n        return this.blindbox.anim2;\n      },\n    },\n    methods: {\n      onOpen () {\n        this.form.quantity = 1;\n        this.form.price = this.blindbox.price;\n        this.form = Object.assign({}, this.form);\n      },\n      checkForm () {\n        let error = false;\n        let quantity = parseInt(this.form.quantity);\n        if (!quantity) {\n          this.formError.quantity = this.$t(\"form.noQuantity\");\n          error = true;\n        }\n        if (quantity > 10) {\n          this.formError.quantity = this.$t(\"form.maxAmount10Limit\");\n          error = true;\n        }\n\n        let amount = this.blindbox.amount;\n        if (this.blindbox.order.openeds) {\n          amount = amount - this.blindbox.order.openeds;\n        }\n        if (parseFloat(this.form.quantity) > amount) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.exceedValue\");\n        }\n        return !error;\n      },\n      async onSubmit () {\n        if (!this.$tools.needLogin(this.$route.path)) return;\n        if (!this.checkForm()) return;\n        this.confirm = true;\n        let that = this;\n\n        setTimeout(async function () {\n          if (that.isContract) {\n            await that.onApprove();\n          } else {\n            await that.onBuy();\n          }\n        }, 100);\n      },\n      async onApprove () {\n        this.step.approve = 1;\n        let result;\n        if (this.$sdk.keyAssetType(this.payToken.type) == \"ERC20\") {\n          result = await this.approvePayToken();\n        } else {\n          result = await this.setApproveAll();\n        }\n        if (result.error) {\n          this.error.approve = result.error;\n          this.step.approve = 0;\n        } else {\n          this.error.approve = \"\";\n          this.step.approve = 2;\n        }\n      },\n      async approvePayToken () {\n        let asset = {\n          address: this.payToken.address,\n          type: this.payToken.type,\n        }\n        let isAllowance = await this.$sdk.allowancePayToken(asset,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n        if (isAllowance.error) {\n          return isAllowance;\n        }\n        isAllowance = isAllowance.toString();\n        if (isAllowance != '0' && isAllowance) {\n          return true;\n        }\n        return await this.$sdk.approvePayToken(asset,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n      },\n      async setApproveAll () {\n        let order = {\n          address: this.payToken.address,\n          type: this.payToken.type,\n          tokenId: this.payToken.tokenId,\n        }\n        let isApproved = await this.$sdk.isApprovedForAll(\n          order,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n        );\n        if (typeof isApproved == \"object\" && isApproved.error) {\n          return isApproved;\n        }\n        if (isApproved) return true;\n        let result = await this.$sdk.setApprovalForAll(\n          order,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n          true\n        );\n        return result;\n      },\n      async onBuy () {\n        this.isOver = false;\n        this.isExplosion = false;\n        if (this.isContract && this.step.approve != 2) return;\n        this.step.open = 1;\n        let order = this.blindbox.order;\n        let result = await this.buyOrder(order);\n        if (!result.error) {\n          let that = this;\n          that.isExplosion = true;\n          that.error.open = \"\";\n          that.step.open = 2;\n          setTimeout(() => {\n            that.isExplosion = false;\n            that.isOver = true;\n            that.error.open = result.error;\n            that.step.open = 0;\n          }, 1500)\n        } else {\n          this.error.open = result.error;\n          this.step.open = 0;\n          this.$store.commit(\"BLINDBOX_SIGNED\", false);\n        }\n      },\n      async buyOrder (asset) {\n        return new Promise((resolve, reject) => {\n          var that = this;\n          var data = {\n            salt: asset.salt,\n          };\n          this.$api(\"blind.order.buyfee\", data).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              asset.buyerFeeSig = {\n                r: res.data.r,\n                s: res.data.s,\n                v: res.data.v,\n              };\n\n              asset.blindBoxAddress = that.config.contract.blindBoxAddress\n              asset.nfts = that.nfts;\n              if (typeof (asset.sellAssets) == 'string') {\n                asset.sellAssets = JSON.parse(asset.sellAssets)\n              }\n              if (typeof (asset.uris) == \"string\") {\n                asset.uris = JSON.parse(asset.uris);\n              }\n              let sellings = asset.sellings;\n              if (typeof (asset.sellings) == 'string') {\n                sellings = JSON.parse(asset.sellings);\n              }\n              asset.sellings = [];\n              for (var i = 0;i < sellings.length;i++) {\n                asset.sellings.push(sellings[i].toString());\n              }\n              asset.buying = res.data.buying\n              asset.sellerFee = res.data.sellerFee;\n              asset.buyerFee = res.data.buyerFee;\n              asset.amount = that.form.quantity;\n              asset.buyer = that.user.coinbase;\n              asset.value = '0';\n              if (that.$sdk.keyAssetType(asset.buyerType) == \"ETH\") {\n                let price = new BigNumber(that.form.price).multipliedBy(new BigNumber(that.form.quantity));\n                let fee = price.multipliedBy(new BigNumber(asset.buyerFee));\n                fee = fee.dividedBy(new BigNumber(10000));\n                asset.value = price.plus(fee).toFixed();\n              }\n              let result = await that.$sdk.openBlindBox(that.user.coinbase, asset);\n              if (result.error) {\n                return resolve(result);\n              }\n              that.$store.dispatch(\"updatePayToken\", that.payToken);\n              that.getOpenList(result.logs);\n              resolve(result);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      async getOpenList (logs) {\n        let openList = [];\n        for (var i = 0;i < logs.length;i++) {\n          let log = logs[i];\n          if (log.event != \"OpenIndex\") continue;\n          let index = log.args.index.toString();\n          openList.push(this.nfts[index]);\n        }\n        this.openList = openList;\n      },\n      closed () {\n        this.step = {\n          approve: 0,\n          open: 0,\n        };\n        this.form = {\n          price: \"\",\n          quantity: \"\",\n        }\n        this.formError = {\n          all: \"\",\n          quantity: \"\",\n        };\n        this.error = {\n          all: \"\",\n          approve: \"\",\n          open: \"\",\n        }\n        this.confirm = false;\n        this.isOver = false;\n        this.isExplosion = false;\n        this.$store.commit(\"BLINDBOX_SIGNED\", false);\n      },\n\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .open-btn {\n    width: 50%;\n    height: 27px;\n    background: #4f00ff;\n    border-radius: 4px;\n  }\n  .form-footer {\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  /*\n        .el-input--suffix .el-input__inner {\n          padding-right: 0px !important;\n          border-radius: 4px !important;\n          width: 100% !important;\n          padding: 0px 8px !important;\n          height: 40px !important;\n        }\n        .el-input__inner {\n          padding-right: 0px !important;\n          border-radius: 4px !important;\n          width: 100% !important;\n          padding: 0px 8px !important;\n          padding-right: 30px !important;\n          height: 40px !important;\n        }\n        */\n  .videoClass {\n    width: 100%;\n    border-radius: 10px;\n  }\n  .open-status{\n    text-align: center;\n  }\n  .describe-box {\n    font-size: 9px;\n    color: #000000;\n    margin: 8px 0px 27px;\n  }\n  .open-nft-items {\n    &.flex-wrap {\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      .open-nft-item {\n        width: 20%;\n        flex: none;\n      }\n    }\n  }\n  .open-nft-item {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 10px;\n    .nft-img {\n      border-radius: $borderRadius;\n      width: 90%;\n      margin: 0 5px;\n    }\n    .nft-name {\n      width: 90%;\n      text-align: center;\n      margin: 0 5px;\n      margin-top: 10px;\n    }\n  }\n  .fg-dialog {\n    &.bg-fg-dialog {\n      height: auto !important;\n      width: 800px !important;\n    }\n  }\n</style>\n\n\n"]}]}