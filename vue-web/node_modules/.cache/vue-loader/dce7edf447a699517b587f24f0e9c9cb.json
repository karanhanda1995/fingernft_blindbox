{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Bid.vue?vue&type=template&id=6bed6299","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Bid.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1652258044998},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGVsLWRpYWxvZyA6bW9kZWwtdmFsdWU9InZpc2libGUiIDpzaG93LWNsb3NlPSJmYWxzZSIgOmNsb3NlLW9uLWNsaWNrLW1vZGFsPSJmYWxzZSIgQGNsb3NlPSIkZW1pdCgnY2xvc2UnKSIgQG9wZW49Im9uT3BlbiIgQGNsb3NlZD0iY2xvc2VkIiBjdXN0b20tY2xhc3M9ImZnLWRpYWxvZyIgZGVzdHJveS1vbi1jbG9zZT4KICAgIDx0ZW1wbGF0ZSAjdGl0bGU+CiAgICAgIDxkaXYgY2xhc3M9ImZnLWRpYWxvZy10aXRsZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGVmdCI+CiAgICAgICAgICA8c3BhbiB2LWlmPSJ1cmkiPnt7IHVyaS5uYW1lIH19PC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0IiBAY2xpY2s9IiRlbWl0KCdjbG9zZScpIj4KICAgICAgICAgIDxpbWcgY2xhc3M9ImNsb3NlLWltZyIgc3JjPSJAL2Fzc2V0cy9jcmVhdGUtaW1nL3BvcF9zaHV0LnBuZyAiPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvdGVtcGxhdGU+CiAgICA8ZGl2IGNsYXNzPSJmZy1kaWFsb2ctYm9keSIgdi1pZj0iIWNvbmZpcm0iPgogICAgICA8ZGl2IGNsYXNzPSJhbGwtZXJyb3IiIHYtaWY9ImZvcm1FcnJvci5hbGwiPiB7eyBmb3JtRXJyb3IuYWxsIH19IDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJwcm9jZXNzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwLWluZm8iPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dCI+CiAgICAgICAgICAgIDxzcGFuPnt7JHQoJ2RpYWxvZy5wYWInKX19PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtaW5mbyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpcCI+PHNwYW4gY2xhc3M9InRleHQiPnt7JHQoJ2RpYWxvZy5iaWRQcmljZScpfX08L3NwYW4+PC9kaXY+CiAgICAgICAgICAgIDxlbC1pbnB1dCBjbGFzcz0iZmctZGlhbG9nLWlucHV0IiBwbGFjZWhvbGRlcj0iMC4wIiB2LWlmPSIhYmlkIiB0eXBlPSJudW1iZXIiIHYtbW9kZWw9ImZvcm0ucHJpY2UiPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjc3VmZml4PgogICAgICAgICAgICAgICAgPGVsLXNlbGVjdCBjbGFzcz0icGF5dG9rZW4tc2VsZWN0cyIgdi1tb2RlbD0iZm9ybS5wYXlBZGRyZXNzIj4KICAgICAgICAgICAgICAgICAgPGVsLW9wdGlvbiB2LWZvcj0iKHRva2VuLCBpKSBpbiBwYXlUb2tlbnMiIDprZXk9ImkiIDpsYWJlbD0idG9rZW4uc3ltYm9sIiA6dmFsdWU9InRva2VuLmFkZHJlc3MiPgogICAgICAgICAgICAgICAgICA8L2VsLW9wdGlvbj4KICAgICAgICAgICAgICAgIDwvZWwtc2VsZWN0PgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgIDxlbC1pbnB1dCBjbGFzcz0iZmctZGlhbG9nLWlucHV0IiBwbGFjZWhvbGRlcj0iMC4wIiB0eXBlPSJudW1iZXIiIHYtZWxzZSB2LW1vZGVsPSJmb3JtLnByaWNlIj4KICAgICAgICAgICAgICA8dGVtcGxhdGUgI3N1ZmZpeCB2LWlmPSJiaWQucGF5VG9rZW4iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGF5dG9rZW4tc3VmZml4Ij57eyBiaWQucGF5dG9rZW5TeW1ib2wgfX08L2Rpdj4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1lcnJvciIgdi1pZj0iZm9ybUVycm9yLnByaWNlIj57e2Zvcm1FcnJvci5wcmljZX19PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0aXAiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0aXAtaXRlbSI+IHt7ICR0KCdkaWFsb2cueW91ckJhbGFuY2UnKX19IDxzcGFuIGNsYXNzPSJiZm9udCI+e3sgcGF5LmJhbGFuY2UgfX17eyBwYXlUb2tlbj8uc3ltYm9sIH19PC9zcGFuPiA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGlwLWl0ZW0iPiB7eyAkdCgnZGlhbG9nLnNlcnZpY2VGZWUnKX19IDxzcGFuIGNsYXNzPSJiZm9udCI+e3tzZXJ2aWNlRmVlfX0lPC9zcGFuPiA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGlwLWl0ZW0iPnt7ICR0KCdkaWFsb2cucGF5Jyl9fSA8c3BhbiBjbGFzcz0iYmZvbnQiPiB7e3BheS5wYXl9fXt7IHBheVRva2VuPy5zeW1ib2x9fTwvc3Bhbj48L2Rpdj4KCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWluZm8iIHYtaWY9IiRzZGsua2V5QXNzZXRUeXBlKG5mdC50eXBlKSAhPSAnRVJDNzIxJyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpcCI+PHNwYW4+e3skdCgnZGlhbG9nLmVudGVyUXVhbnRpdHknKX19PC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJncmF5LWZvbnQiPih7eyBteUFzc2V0ICYmIG15QXNzZXQucXVhbnRpdHkgPyBuZnQucXVhbnRpdHkgLSBteUFzc2V0LnF1YW50aXR5IDogbmZ0LnF1YW50aXR5IH19CiAgICAgICAgICAgICAgICB7eyR0KCdkaWFsb2cuYXZhaWxhYmxlJyl9fSk8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZWwtaW5wdXQgY2xhc3M9ImZnLWRpYWxvZy1pbnB1dCIgcGxhY2Vob2xkZXI9IjAuMCIgdHlwZT0ibnVtYmVyIiB2LW1vZGVsPSJmb3JtLnF1YW50aXR5Ij4KCiAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWVycm9yIiB2LWlmPSJmb3JtRXJyb3IucXVhbnRpdHkiPnt7Zm9ybUVycm9yLnF1YW50aXR5fX08L2Rpdj4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0icHJvY2Vzcy1idG4iPgogICAgICAgICAgPHRlbXBsYXRlIHYtaWY9InBheSAmJiBwYXJzZUZsb2F0KHBheS5wYXkpID4gcGFyc2VGbG9hdChwYXkuYmFsYW5jZSkiPgogICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljaz0ib25TdWJtaXQiIGRpc2FibGVkIHYtaWY9IiFiaWQiIHR5cGU9InByaW1hcnkiIDpsb2FkaW5nPSJjb25maXJtIj4KICAgICAgICAgICAgICB7eyR0KCdkaWFsb2cuY29uZmlybScpfX08L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9Im9uU3VibWl0IiBkaXNhYmxlZCB2LWVsc2UgdHlwZT0icHJpbWFyeSIgOmxvYWRpbmc9ImNvbmZpcm0iPgogICAgICAgICAgICAgIHt7JHQoJ2RpYWxvZy5jaGFuZ2UnKX19PC9lbC1idXR0b24+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1lcnJvciB0ZXh0LWNlbnRlciI+e3skdCgnZGlhbG9nLm5vQmFsYW5jZScpfX08L2Rpdj4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPgogICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljaz0ib25TdWJtaXQiIHYtaWY9IiFiaWQiIHR5cGU9InByaW1hcnkiIDpsb2FkaW5nPSJjb25maXJtIj4KICAgICAgICAgICAgICB7eyR0KCdkaWFsb2cuY29uZmlybScpfX08L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9Im9uU3VibWl0IiB2LWVsc2UgdHlwZT0icHJpbWFyeSIgOmxvYWRpbmc9ImNvbmZpcm0iPgogICAgICAgICAgICAgIHt7JHQoJ2RpYWxvZy5jaGFuZ2UnKX19PC9lbC1idXR0b24+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDwvZGl2PgoKICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJmZy1kaWFsb2ctYm9keSIgdi1lbHNlPgogICAgICA8ZGl2IGNsYXNzPSJhbGwtZXJyb3IiIHYtaWY9ImVycm9yLmFsbCI+IHt7IGVycm9yLmFsbCB9fSA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0icHJvY2VzcyI+CiAgICAgICAgPGRpdiBjbGFzcz0ic3RlcC1pbmZvIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQiPgogICAgICAgICAgICA8c3Bhbj57eyR0KCdkaWFsb2cuYXBwcm92ZScpfX0ge3sgcGF5VG9rZW4/LnN5bWJvbCB9fTwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPHNwYW4gdi1pZj0ic3RlcC5hcHByb3ZlICE9IDEiIDpjbGFzcz0ic3RlcC5hcHByb3ZlPT0gMiA/ICdmaW5pc2gnOiAnJyIgY2xhc3M9InN0ZXAgaWNvbmZvbnQgaWNvbi1zZWxldGVkIj48L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwIGxvYWRpbmciIHYtZWxzZT4KICAgICAgICAgICAgPGltZyBjbGFzcz0ibG9hZGluZy1hbmltYXRpb24iIHNyYz0iQC9hc3NldHMvaW1nL2xvYWRpbmcucG5nIiAvPgogICAgICAgICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InByb2Nlc3MtYnRuIj4KICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJvbkFwcHJvdmUiIHR5cGU9InByaW1hcnkiIHYtaWY9InN0ZXAuYXBwcm92ZSA9PSAwIj4KICAgICAgICAgICAge3skdCgnZGlhbG9nLmFwcHJvdmUnKX19PC9lbC1idXR0b24+CiAgICAgICAgICA8ZWwtYnV0dG9uIGRpc2FibGVkIHR5cGU9ImluZm8iIHYtZWxzZS1pZj0ic3RlcC5hcHByb3ZlID09IDEiPgogICAgICAgICAgICB7eyR0KCdkaWFsb2cuaW5Qcm9ncmVzcycpfX0uLi48L2VsLWJ1dHRvbj4KICAgICAgICAgIDxlbC1idXR0b24gZGlzYWJsZWQgdHlwZT0iaW5mbyIgdi1lbHNlPnt7JHQoJ2RpYWxvZy5kb25lJyl9fTwvZWwtYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InByb2Nlc3MtZXJyb3IiIHYtaWY9ImVycm9yLmFwcHJvdmUiPnt7IGVycm9yLmFwcHJvdmUgfX08L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJwcm9jZXNzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwLWluZm8iPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dCI+CiAgICAgICAgICAgIDxzcGFuPnt7JHQoJ2RpYWxvZy5zaWduc0JpZCcpfX08L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxzcGFuIHYtaWY9InN0ZXAuYmlkICE9IDEiIDpjbGFzcz0ic3RlcC5iaWQgPT0gMiA/ICdmaW5pc2gnOiAnJyIgY2xhc3M9InN0ZXAgaWNvbmZvbnQgaWNvbi1zZWxldGVkIj48L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwIGxvYWRpbmciIHYtZWxzZT4KICAgICAgICAgICAgPGltZyBjbGFzcz0ibG9hZGluZy1hbmltYXRpb24iIHNyYz0iQC9hc3NldHMvaW1nL2xvYWRpbmcucG5nIiAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icHJvY2Vzcy1idG4iPgogICAgICAgICAgPGVsLWJ1dHRvbiBkaXNhYmxlZCB0eXBlPSJpbmZvIiB2LWlmPSJzdGVwLmFwcHJvdmUgIT0gMiI+e3skdCgnZGlhbG9nLmJpZCcpfX0KICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9Im9uQmlkIiB0eXBlPSJwcmltYXJ5IiB2LWVsc2UtaWY9InN0ZXAuYmlkPT0wIj57eyR0KCdkaWFsb2cuYmlkJyl9fQogICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICA8ZWwtYnV0dG9uIGRpc2FibGVkIHR5cGU9ImluZm8iIHYtZWxzZS1pZj0ic3RlcC5iaWQgPT0gMSI+e3skdCgnZGlhbG9nLmluUHJvZ3Jlc3MnKX19Li4uCiAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgIDxlbC1idXR0b24gZGlzYWJsZWQgdHlwZT0iaW5mbyIgdi1lbHNlPnt7JHQoJ2RpYWxvZy5kb25lJyl9fTwvZWwtYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InByb2Nlc3MtZXJyb3IiIHYtaWY9ImVycm9yLmJpZCI+e3sgZXJyb3IuYmlkfX08L2Rpdj4KICAgICAgPC9kaXY+CgogICAgPC9kaXY+CgogIDwvZWwtZGlhbG9nPgo="},{"version":3,"sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Bid.vue"],"names":[],"mappingsnL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACtE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACbcAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACfcAC9H,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cACrG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEhH,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEP,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChF,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEP,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEpC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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tB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1E,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvC,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1G,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACjE,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjE,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEP,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Mohamed Tamim/Desktop/SONGTRADER-V2-FULL/fingernft_blindbox/fingernft_blindbox/vue-web/src/components/dialogs/Bid.vue","sourceRoot":"","sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" @close=\"$emit('close')\" @open=\"onOpen\" @closed=\"closed\" custom-class=\"fg-dialog\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span v-if=\"uri\">{{ uri.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \">\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"all-error\" v-if=\"formError.all\"> {{ formError.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.pab')}}</span>\n          </div>\n        </div>\n        <div class=\"input-group\">\n          <div class=\"input-info\">\n            <div class=\"tip\"><span class=\"text\">{{$t('dialog.bidPrice')}}</span></div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" v-if=\"!bid\" type=\"number\" v-model=\"form.price\">\n              <template #suffix>\n                <el-select class=\"paytoken-selects\" v-model=\"form.payAddress\">\n                  <el-option v-for=\"(token, i) in payTokens\" :key=\"i\" :label=\"token.symbol\" :value=\"token.address\">\n                  </el-option>\n                </el-select>\n              </template>\n            </el-input>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-else v-model=\"form.price\">\n              <template #suffix v-if=\"bid.payToken\">\n                <div class=\"paytoken-suffix\">{{ bid.paytokenSymbol }}</div>\n              </template>\n            </el-input>\n            <div class=\"input-error\" v-if=\"formError.price\">{{formError.price}}</div>\n            <div class=\"stip\">\n              <div class=\"stip-item\"> {{ $t('dialog.yourBalance')}} <span class=\"bfont\">{{ pay.balance }}{{ payToken?.symbol }}</span> </div>\n              <div class=\"stip-item\"> {{ $t('dialog.serviceFee')}} <span class=\"bfont\">{{serviceFee}}%</span> </div>\n              <div class=\"stip-item\">{{ $t('dialog.pay')}} <span class=\"bfont\"> {{pay.pay}}{{ payToken?.symbol}}</span></div>\n\n            </div>\n\n          </div>\n\n          <div class=\"input-info\" v-if=\"$sdk.keyAssetType(nft.type) != 'ERC721'\">\n            <div class=\"tip\"><span>{{$t('dialog.enterQuantity')}}</span>\n              <span class=\"gray-font\">({{ myAsset && myAsset.quantity ? nft.quantity - myAsset.quantity : nft.quantity }}\n                {{$t('dialog.available')}})</span>\n            </div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-model=\"form.quantity\">\n\n            </el-input>\n            <div class=\"input-error\" v-if=\"formError.quantity\">{{formError.quantity}}</div>\n          </div>\n\n        </div>\n\n        <div class=\"process-btn\">\n          <template v-if=\"pay && parseFloat(pay.pay) > parseFloat(pay.balance)\">\n            <el-button @click=\"onSubmit\" disabled v-if=\"!bid\" type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.confirm')}}</el-button>\n            <el-button @click=\"onSubmit\" disabled v-else type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.change')}}</el-button>\n\n            <div class=\"input-error text-center\">{{$t('dialog.noBalance')}}</div>\n          </template>\n          <template v-else>\n            <el-button @click=\"onSubmit\" v-if=\"!bid\" type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.confirm')}}</el-button>\n            <el-button @click=\"onSubmit\" v-else type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.change')}}</el-button>\n          </template>\n        </div>\n\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else>\n      <div class=\"all-error\" v-if=\"error.all\"> {{ error.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.approve')}} {{ payToken?.symbol }}</span>\n          </div>\n          <span v-if=\"step.approve != 1\" :class=\"step.approve== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onApprove\" type=\"primary\" v-if=\"step.approve == 0\">\n            {{$t('dialog.approve')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.approve == 1\">\n            {{$t('dialog.inProgress')}}...</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.approve\">{{ error.approve }}</div>\n      </div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.signsBid')}}</span>\n          </div>\n          <span v-if=\"step.bid != 1\" :class=\"step.bid == 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button disabled type=\"info\" v-if=\"step.approve != 2\">{{$t('dialog.bid')}}\n          </el-button>\n          <el-button @click=\"onBid\" type=\"primary\" v-else-if=\"step.bid==0\">{{$t('dialog.bid')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.bid == 1\">{{$t('dialog.inProgress')}}...\n          </el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.bid\">{{ error.bid}}</div>\n      </div>\n\n    </div>\n\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from 'bignumber.js'\n  export default {\n    name: \"Bid\",\n    data: function () {\n      let paytoken = this.$store.getters.defaultBidPayToken();\n      return {\n        visible: this.show,\n        confirm: false,\n        form: {\n          price: \"\",\n          payAddress: paytoken ? paytoken.address : \"\",\n          quantity: \"\",\n        },\n        formError: {\n          all: \"\",\n          price: \"\",\n          quantity: \"\",\n        },\n        step: {\n          approve: 0,\n          bid: 0,\n        },\n        error: {\n          all: \"\",\n          approve: \"\",\n          bid: \"\",\n        },\n        order: {},\n      };\n    },\n    emits: ['confirm', 'close'],\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      bid: {\n        type: Object,\n        default: null,\n      },\n      myAsset: {\n        type: Object,\n        default: null,\n      },\n      uri: {\n        type: Object,\n        default: null,\n      },\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      payTokens () {\n        var payTokens = this.$store.state.payTokens;\n        let tokens = [];\n        for (var i = 0;i < payTokens.length;i++) {\n          let payToken = payTokens[i];\n          if (payToken.address.toLocaleLowerCase() == this.$sdk.NULL_ADDRESS().toLocaleLowerCase()) continue;\n          tokens.push(payToken);\n        }\n        return tokens;\n      },\n      serviceFee () {\n        let fee = this.$tools.decimal(this.$store.state.config.buyerFee / 100, 2);\n        return fee;\n      },\n      payToken () {\n        let payToken = this.$store.getters.payToken(\n          this.form.payAddress\n        );\n        return payToken;\n      },\n      pay () {\n        let balance = this.$store.getters.getBalance(this.form.payAddress)\n        let price = this.$tools.str2num(this.form.price)\n        if (!price) return { balance: balance || 0, pay: 0 }\n        price = price * this.form.quantity;\n        let pay = this.$tools.decimal(price + (price * this.serviceFee / 100), 6)\n        return { pay, balance }\n      }\n    },\n    methods: {\n      onOpen () {\n        if (!this.bid) {\n          if (this.$sdk.keyAssetType(this.nft.type) == \"ERC721\") {\n            this.form.quantity = \"1\";\n          } else {\n            this.form.quantity = \"\";\n          }\n        } else {\n          let paytoken = this.$store.getters.payToken(this.bid.sellToken)\n          this.form.payAddress = paytoken?.address.toLocaleLowerCase();\n          this.form.quantity = this.bid.buyerValue;\n          this.form.price = this.$tools.singlePrice(this.bid.sellValue, this.bid.buyerValue, this.bid.payToken);\n        }\n      },\n      checkForm () {\n        let error = false;\n        if (!parseFloat(this.form.price)) {\n          error = true;\n          this.formError.price = this.$t(\"form.noPrice\");\n        }\n        if (this.bid && (parseFloat(this.form.price) <= parseFloat(\n          this.$tools.singlePrice(this.bid.sellValue, this.bid.buyerValue, this.bid.payToken)\n        ))) {\n          error = true\n          this.formError.price = this.$t(\"form.lessPrice\")\n        }\n\n        if (!this.form.quantity) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.noQuantity\")\n        }\n        let quantity = this.nft.quantity;\n        if (this.myAsset) quantity = quantity - this.myAsset.quantity;\n\n        if (parseFloat(this.form.quantity) > parseFloat(quantity)) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.exceedValue\");\n        }\n        return !error;\n      },\n      onSubmit () {\n        if (!this.checkForm()) return;\n        this.confirm = true;\n        let that = this;\n        setTimeout(async function () {\n          await that.onApprove();\n        }, 100);\n      },\n      async onApprove () {\n        this.step.approve = 1;\n        if (!this.bid) {\n          let payToken = this.$store.getters.payToken(this.form.payAddress);\n          this.order = {\n            address: this.nft.address,\n            tokenId: this.nft.tokenId,\n            type: this.nft.type,\n            payToken: payToken,\n            salt: \"0\",\n          };\n        } else {\n          let result = await this.getOrder();\n          if (result.error) {\n            this.error.all = result.error;\n            this.step.approve = 0;\n            return;\n          }\n        }\n        let result = await this.approvePayToken();\n        if (result.error) {\n          this.error.approve = result.error;\n          this.step.approve = 0;\n        } else {\n          this.error.approve = \"\";\n          this.step.approve = 2;\n        }\n      },\n      async approvePayToken () {\n        let order = {\n          address: this.order.payToken.address,\n          type: this.order.payToken.type,\n        };\n        let isAllowance = await this.$sdk.allowancePayToken(\n          order,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n        if (isAllowance.error) {\n          return isAllowance;\n        }\n        isAllowance = isAllowance.toString();\n        if (isAllowance != \"0\" && isAllowance) {\n          return true;\n        }\n        return await this.$sdk.approvePayToken(\n          order,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n      },\n      async getOrder () {\n        return new Promise((resolve, reject) => {\n          var data = {\n            caddress: this.nft.address,\n            tokenId: this.nft.tokenId,\n            owner: this.bid.address,\n            type: this.$sdk.valueOrderType(\"BID\"),\n          };\n          let that = this;\n          this.$api(\"order.get\", data).then((res) => {\n            if (that.$tools.checkResponse(res)) {\n              that.order = {\n                address: res.data.buyerToken,\n                tokenId: res.data.buyerTokenId,\n                type: res.data.buyerType,\n                payToken: {\n                  address: res.data.sellToken,\n                  name: res.data.paytokenName,\n                  symbol: res.data.paytokenSymbol,\n                  decimals: res.data.paytokenDecimals,\n                  type: res.data.sellType,\n                },\n                salt: res.data.salt,\n              };\n              resolve(res.data);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      async onBid () {\n        if (this.step.approve != 2) return;\n        this.step.bid = 1;\n        let order = {\n          ...this.order,\n          price: this.form.price,\n          sellerFee: this.config.sellerFee,\n        };\n        let result = await this.bidToken(order);\n        if (result.error) {\n          this.error.bid = result.error;\n          this.step.bid = 0;\n        } else {\n          this.error.bid = \"\";\n          this.step.bid = 2;\n          this.$emit(\"confirm\");\n        }\n      },\n      async bidToken (order) {\n        return new Promise((resolve, reject) => {\n          let sellValue = new BigNumber(this.form.price);\n          sellValue = sellValue.multipliedBy(new BigNumber(this.form.quantity)).multipliedBy(\n            new BigNumber(10).exponentiatedBy(order.payToken.decimals)).toFixed();\n          var data = {\n            owner: this.user.coinbase,\n            sellToken: order.payToken.address,\n            sellTokenId: \"0\",\n            sellValue: sellValue,\n            sellType: order.payToken.type,\n            buyToken: order.address,\n            buyTokenId: order.tokenId,\n            buyValue: this.form.quantity,\n            buyType: order.type,\n            salt: order.salt,\n            type: this.$sdk.valueCommonType(\"BID\")\n          };\n          let that = this;\n          this.$api(\"order.prepare\", data).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              let message = res.data.message;\n              if (message.startsWith(\"0x\")) {\n                message = message.slice(2, message.length);\n              }\n              let salt = res.data.salt;\n              let signature = \"\";\n              try {\n                signature = await that.$web3.sign(message, that.user.coinbase);\n                if (signature.error) {\n                  return resolve(signature);\n                }\n              } catch (e) {\n                return resolve({ error: e.message });\n              }\n              var _data = {\n                type: !that.bid\n                  ? that.$sdk.valueCommonType(\"BID\")\n                  : that.$sdk.valueCommonType(\"EDIT_BID\"),\n                owner: data.owner,\n                sellToken: data.sellToken,\n                sellTokenId: data.sellTokenId,\n                sellValue: data.sellValue,\n                sellType: data.sellType,\n                buyToken: data.buyToken,\n                buyTokenId: data.buyTokenId,\n                buyValue: data.buyValue,\n                buyType: data.buyType,\n                salt: salt,\n                message: message,\n                signature: signature,\n              };\n              that.$api(\"order.add\", _data).then(function (res) {\n                if (that.$tools.checkResponse(res)) {\n                  that.$tools.message(that.$t('request.bidSuccess'), \"success\");\n                  resolve(res);\n                } else {\n                  resolve({ error: res.errmsg });\n                }\n              });\n            } else {\n              that.$tools.message(res.errmsg);\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      closed () {\n        let paytoken = this.$store.getters.defaultBidPayToken();\n        this.confirm = false;\n        this.form = {\n          price: \"\",\n          payAddress: paytoken ? paytoken.address : \"\",\n          quantity: \"\",\n        };\n        this.formError = {\n          all: \"\",\n          price: \"\",\n          quantity: \"\",\n        };\n        this.step = {\n          approve: 0,\n          bid: 0,\n        };\n        this.error = {\n          all: \"\",\n          approve: \"\",\n          bid: \"\",\n        };\n        this.order = {};\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}