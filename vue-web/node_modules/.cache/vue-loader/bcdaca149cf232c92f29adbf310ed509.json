{"remainingRequest":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\ERC721.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\ERC721.vue","mtime":1650964597000},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652272398602},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652272398685},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652272398602},{"path":"C:\\Users\\97154\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652272436651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IE1pbnREaWFsb2cgZnJvbSAiQC9jb21wb25lbnRzL2RpYWxvZ3MvTWludCI7CiAgaW1wb3J0IENvbGxlY3Rpb25EaWFsb2cgZnJvbSAiQC9jb21wb25lbnRzL2RpYWxvZ3MvQ29sbGVjdGlvbiI7CiAgaW1wb3J0IEJpZ051bWJlciBmcm9tICJiaWdudW1iZXIuanMiOwogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJFUkM3MjEiLAogICAgY29tcG9uZW50czogewogICAgICBNaW50RGlhbG9nLAogICAgICBDb2xsZWN0aW9uRGlhbG9nLAogICAgfSwKICAgIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgbGV0IHBheXRva2VuID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5kZWZhdWx0U2FsZVBheVRva2VuKCk7CiAgICAgIHJldHVybiB7CiAgICAgICAgc2hvd0NvbGxlY3Rpb246IGZhbHNlLAogICAgICAgIHByZXZpZXdJbWFnZTogewogICAgICAgICAgd2lkdGg6IDAsCiAgICAgICAgICBoZWlnaHQ6IDAsCiAgICAgICAgfSwKICAgICAgICBjcmVhdGVGb3JtOiB7CiAgICAgICAgICBwcmljZTogIiIsCiAgICAgICAgICBwYXlBZGRyZXNzOiBwYXl0b2tlbiA/IHBheXRva2VuLmFkZHJlc3MgOiAiIiwKICAgICAgICAgIG9uU2FsZTogdHJ1ZSwKICAgICAgICAgIGNvbnRyYWN0OiAwLAogICAgICAgICAgcm95YWx0aWVzOiAyLAogICAgICAgICAgbmFtZTogIiIsCiAgICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgICBjYXRlZ29yeTogIiIsCiAgICAgICAgICBwcm9wZXJ0aWVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBrZXk6ICIiLAogICAgICAgICAgICAgIHZhbHVlOiAiIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgfSwKICAgICAgICBlcnJvckZvcm06IHsKICAgICAgICAgIGFsbDogIiIsCiAgICAgICAgICBmaWxlOiAiIiwKICAgICAgICAgIHByaWNlOiAiIiwKICAgICAgICAgIGNhdGVnb3J5OiAiIiwKICAgICAgICAgIHJveWFsdGllczogIiIsCiAgICAgICAgICBuYW1lOiAiIiwKICAgICAgICB9LAogICAgICAgIHRlbUFuaW06IG51bGwsCiAgICAgICAgdGVtcEltZzogbnVsbCwKICAgICAgICBmaWxlOiBudWxsLAogICAgICAgIGNvbnRyYWN0czogW10sCiAgICAgICAgbmZ0OiB7fSwKICAgICAgICBzaG93TWludDogZmFsc2UsCiAgICAgICAgYW5pbUZpbGU6IG51bGwsCiAgICAgIH07CiAgICB9LAogICAgY3JlYXRlZCAoKSB7CiAgICAgIHRoaXMuaW5pdCgpOwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgIHVzZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlcjsKICAgICAgfSwKICAgICAgc2VydmVyRmVlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGZlZSA9IHRoaXMuY29uZmlnLnNlbGxlckZlZTsKICAgICAgICBpZiAoIWZlZSkgcmV0dXJuIDA7CiAgICAgICAgcmV0dXJuIGZlZSAvIDEwMDsKICAgICAgfSwKICAgICAgcGF5VG9rZW5zICgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucGF5VG9rZW5zOwogICAgICB9LAogICAgICBwYXlUb2tlbiAoKSB7CiAgICAgICAgbGV0IHBheVRva2VuID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5wYXlUb2tlbih0aGlzLmNyZWF0ZUZvcm0ucGF5QWRkcmVzcyk7CiAgICAgICAgaWYgKCFwYXlUb2tlbikgcmV0dXJuIHt9OwogICAgICAgIHJldHVybiBwYXlUb2tlbjsKICAgICAgfSwKICAgICAgY2F0ZWdvcnlzICgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY2F0ZWdvcnlzOwogICAgICB9LAogICAgICBwcm9maXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcHJpY2UgPSB0aGlzLmNyZWF0ZUZvcm0ucHJpY2U7CiAgICAgICAgcHJpY2UgPSB0aGlzLiR0b29scy5zdHIybnVtKHByaWNlKTsKICAgICAgICBpZiAoIXByaWNlKSByZXR1cm4gMDsKICAgICAgICBwcmljZSA9IG5ldyBCaWdOdW1iZXIodGhpcy5jcmVhdGVGb3JtLnByaWNlKTsKICAgICAgICBsZXQgZmVlID0gbmV3IEJpZ051bWJlcih0aGlzLnNlcnZlckZlZSk7CiAgICAgICAgZmVlID0gZmVlLm11bHRpcGxpZWRCeShwcmljZSk7CiAgICAgICAgZmVlID0gZmVlLmRpdmlkZWRCeShuZXcgQmlnTnVtYmVyKDEwMCkpOwogICAgICAgIGxldCBwcm9maXQgPSBwcmljZS5taW51cyhmZWUpLnRvRml4ZWQoKTsKICAgICAgICByZXR1cm4gcHJvZml0OwogICAgICB9LAogICAgICBjb25maWc6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnOwogICAgICB9LAogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgIGNhdGVnb3J5ICh2KSB7CiAgICAgICAgdGhpcy5pbml0Q2F0ZWdvcnkoKTsKICAgICAgfSwKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGNsb3NlRGlhbG9nICgpIHsKICAgICAgICB0aGlzLnNob3dDb2xsZWN0aW9uID0gZmFsc2U7CiAgICAgIH0sCiAgICAgIGNvbGxlY3Rpb25Db25maXJtICgpIHsKICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKCk7CiAgICAgICAgdGhpcy5pbml0KCk7CiAgICAgIH0sCiAgICAgIGRlbGV0ZUFWICgpIHsKICAgICAgICB0aGlzLnRlbUFuaW0gPSBudWxsOwogICAgICAgIHRoaXMudGVtcEltZyA9IG51bGw7CiAgICAgICAgdGhpcy5maWxlID0gbnVsbDsKICAgICAgfSwKICAgICAgb25Mb2FkUHJldmlldyAoZSwgZTEpIHsKICAgICAgICB2YXIgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInByZXZpZXctaW1hZ2UiKTsKICAgICAgICB0aGlzLnByZXZpZXdJbWFnZSA9IHsKICAgICAgICAgIGhlaWdodDogaW1nLm5hdHVyYWxIZWlnaHQsCiAgICAgICAgICB3aWR0aDogaW1nLm5hdHVyYWxXaWR0aCwKICAgICAgICB9OwogICAgICB9LAogICAgICBnb0JhY2sgKCkgewogICAgICAgIHRoaXMuJHJvdXRlci5nbygtMSk7CiAgICAgIH0sCiAgICAgIGluaXQgKCkgewogICAgICAgIGxldCBkYXRhID0gewogICAgICAgICAgYWRkcmVzczogdGhpcy51c2VyLmNvaW5iYXNlLAogICAgICAgIH07CiAgICAgICAgdGhpcy4kYXBpKCJ1c2VyLmxpc3Rjb250cmFjdCIsIGRhdGEpLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgaWYgKHRoaXMuJHRvb2xzLmNoZWNrUmVzcG9uc2UocmVzKSkgewogICAgICAgICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgICAgICAgIGxldCBub3cgPSBwYXJzZUludChuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApCiAgICAgICAgICAgIGxldCBleHBpcmUgPSA2MCAqIDYwOwogICAgICAgICAgICB0aGlzLmNvbnRyYWN0cyA9IHJlcy5kYXRhLmZpbHRlcihmdW5jdGlvbiAoY29udHJhY3QpIHsKICAgICAgICAgICAgICBpZiAodGhhdC4kc2RrLmtleUFzc2V0VHlwZShjb250cmFjdC50eXBlKSAhPSAiRVJDNzIxIikgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgIGlmICghY29udHJhY3QuaXNTeW5jICYmIG5vdyAtIGNvbnRyYWN0LmNyZWF0ZVRpbWUgPiBleHBpcmUpIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInBheVRva2VucyIpOwogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJjYXRlZ29yeXMiKTsKICAgICAgICB0aGlzLmluaXRDYXRlZ29yeSgpOwogICAgICB9LAogICAgICBpbml0Q2F0ZWdvcnkgKCkgewogICAgICAgIGlmICh0aGlzLmNhdGVnb3J5cy5sZW5ndGgpIHsKICAgICAgICAgIHRoaXMuY3JlYXRlRm9ybS5jYXRlZ29yeSA9IHRoaXMuY2F0ZWdvcnlzWzBdLmlkOwogICAgICAgIH0KICAgICAgfSwKICAgICAgc2VsZWN0Q29sbGVjdGlvbiAoaSkgewogICAgICAgIGlmICghdGhpcy5jb250cmFjdHNbaV0uaXNTeW5jKSByZXR1cm47CiAgICAgICAgdGhpcy5jcmVhdGVGb3JtLmNvbnRyYWN0ID0gaTsKICAgICAgfSwKICAgICAgcHJvcGVydHlJbnB1dCAoZSkgewogICAgICAgIGxldCBlbXB0eUMgPSAwOwogICAgICAgIGZvciAodmFyIGkgPSAwO2kgPCB0aGlzLmNyZWF0ZUZvcm0ucHJvcGVydGllcy5sZW5ndGg7aSsrKSB7CiAgICAgICAgICB2YXIgcHJvcGVydHkgPSB0aGlzLmNyZWF0ZUZvcm0ucHJvcGVydGllc1tpXTsKICAgICAgICAgIGlmICghcHJvcGVydHkua2V5IHx8ICFwcm9wZXJ0eS52YWx1ZSkgZW1wdHlDICs9IDE7CiAgICAgICAgfQogICAgICAgIGlmIChlbXB0eUMgIT0gMSkgewogICAgICAgICAgdGhpcy5jcmVhdGVGb3JtLnByb3BlcnRpZXMgPSB0aGlzLmNyZWF0ZUZvcm0ucHJvcGVydGllcy5maWx0ZXIoCiAgICAgICAgICAgIGZ1bmN0aW9uIChwcm9wZXJ0eSkgewogICAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eS5rZXkgfHwgcHJvcGVydHkudmFsdWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgICB0aGlzLmNyZWF0ZUZvcm0ucHJvcGVydGllcy5wdXNoKHsga2V5OiAiIiwgdmFsdWU6ICIiIH0pOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZnVsbFByb3BlcnRpZXMgKHByb3BlcnRpZXMpIHsKICAgICAgICB2YXIgX3Byb3BlcnRpZXMgPSBbXTsKICAgICAgICBmb3IgKHZhciBpID0gMDtpIDwgcHJvcGVydGllcy5sZW5ndGg7aSsrKSB7CiAgICAgICAgICB2YXIga2V5ID0gcHJvcGVydGllc1tpXS5rZXkudHJpbSgpOwogICAgICAgICAgdmFyIHZhbHVlID0gcHJvcGVydGllc1tpXS52YWx1ZS50cmltKCk7CiAgICAgICAgICB2YXIgdHJhaXRfdHlwZSA9IGtleTsKICAgICAgICAgIGlmICgha2V5IHx8ICF2YWx1ZSkgY29udGludWU7CiAgICAgICAgICBfcHJvcGVydGllcy5wdXNoKHsga2V5LCB0cmFpdF90eXBlLCB2YWx1ZSB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIF9wcm9wZXJ0aWVzOwogICAgICB9LAogICAgICB1cGxvYWRDaGFuZ2UgKGZpbGUsIGZpbGVMaXN0LCBuYW1lKSB7CiAgICAgICAgbGV0IHNpemUgPSBmaWxlLnJhdy5zaXplOwogICAgICAgIGlmIChzaXplID4gMzAgKiAxMDI0ICogMTAyNCkgewogICAgICAgICAgdGhpcy5lcnJvckZvcm0uZmlsZSA9IHRoaXMuJHQoImZvcm0ubGltaXRGaWxlIik7CiAgICAgICAgICBpZiAobmFtZSA9PSAidXBsb2FkRmlsZSIpIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy51cGxvYWRGaWxlLmNsZWFyRmlsZXMoKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMuY292ZXJGaWxlLmNsZWFyRmlsZXMoKTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgaWYgKAogICAgICAgICAgZmlsZS5yYXcudHlwZS5pbmRleE9mKCJ2aWRlbyIpICE9IC0xIHx8CiAgICAgICAgICBmaWxlLnJhdy50eXBlLmluZGV4T2YoImF1ZGlvIikgIT0gLTEKICAgICAgICApIHsKICAgICAgICAgIHRoaXMuYW5pbUZpbGUgPSBmaWxlLnJhdzsKICAgICAgICAgIHZhciBldmVudCA9IGV2ZW50IHx8IHdpbmRvdy5ldmVudDsKICAgICAgICAgIHZhciBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIF90aGlzLnRlbUFuaW0gPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICB9OwogICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgICAgfSBlbHNlIGlmIChmaWxlLnJhdy50eXBlLmluZGV4T2YoImltYWdlIikgIT0gLTEpIHsKICAgICAgICAgIHRoaXMuZmlsZSA9IGZpbGUucmF3OwogICAgICAgICAgdmFyIGV2ZW50ID0gZXZlbnQgfHwgd2luZG93LmV2ZW50OwogICAgICAgICAgdmFyIGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgX3RoaXMudGVtcEltZyA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgIH07CiAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRlbGV0ZVBpYyAoKSB7CiAgICAgICAgdGhpcy50ZW1wSW1nID0gbnVsbDsKICAgICAgICB0aGlzLmZpbGUgPSBudWxsOwogICAgICB9LAogICAgICBjaGVja0Zvcm0gKCkgewogICAgICAgIHRoaXMuZXJyb3JGb3JtID0gewogICAgICAgICAgYWxsOiAiIiwKICAgICAgICAgIGZpbGU6ICIiLAogICAgICAgICAgcHJpY2U6ICIiLAogICAgICAgICAgY2F0ZWdvcnk6ICIiLAogICAgICAgICAgcm95YWx0aWVzOiAiIiwKICAgICAgICAgIG5hbWU6ICIiLAogICAgICAgIH07CiAgICAgICAgbGV0IHJlc3VsdCA9IHRydWU7CiAgICAgICAgaWYgKCF0aGlzLnRlbXBJbWcpIHsKICAgICAgICAgIHRoaXMuZXJyb3JGb3JtLmZpbGUgPSB0aGlzLiR0KCJmb3JtLm5vRmlsZSIpOwogICAgICAgICAgcmVzdWx0ID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmICh0aGlzLmNyZWF0ZUZvcm0ub25TYWxlKSB7CiAgICAgICAgICBpZiAoIXRoaXMuJHRvb2xzLnN0cjJudW0odGhpcy5jcmVhdGVGb3JtLnByaWNlKSkgewogICAgICAgICAgICB0aGlzLmVycm9yRm9ybS5wcmljZSA9IHRoaXMuJHQoImZvcm0ubm9QcmljZSIpOwogICAgICAgICAgICByZXN1bHQgPSBmYWxzZTsKICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgICF0aGlzLiR0b29scy5taW5QcmljZUxpbWl0KHRoaXMuY3JlYXRlRm9ybS5wcmljZSwgdGhpcy5wYXlUb2tlbikKICAgICAgICAgICkgewogICAgICAgICAgICB0aGlzLmVycm9yRm9ybS5wcmljZSA9IHRoaXMuJHQoImZvcm0ubWluUHJpY2VMaW1pdCIpOwogICAgICAgICAgICByZXN1bHQgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICghdGhpcy5jcmVhdGVGb3JtLm5hbWUpIHsKICAgICAgICAgIHRoaXMuZXJyb3JGb3JtLm5hbWUgPSB0aGlzLiR0KCJmb3JtLm5vTmFtZSIpOwogICAgICAgICAgcmVzdWx0ID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmICghdGhpcy5jcmVhdGVGb3JtLmNhdGVnb3J5KSB7CiAgICAgICAgICB0aGlzLmVycm9yRm9ybS5jYXRlZ29yeSA9IHRoaXMuJHQoImZvcm0ubm9DYXRlZ29yeSIpOwogICAgICAgICAgcmVzdWx0ID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmICghcmVzdWx0KSB7CiAgICAgICAgICB0aGlzLmVycm9yRm9ybS5hbGwgPSB0aGlzLiR0KCJmb3JtLnZhbGlkYXRlRm9ybSIpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICB9LAogICAgICBvblN1Ym1pdCAoKSB7CiAgICAgICAgaWYgKCF0aGlzLnBheVRva2VuKSB7CiAgICAgICAgICB0aGlzLmVycm9yRm9ybS5hbGwgPSB0aGlzLiR0KCJmb3JtLm5vUGF5VG9rZW4iKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgaWYgKCF0aGlzLmNoZWNrRm9ybSgpKSByZXR1cm47CiAgICAgICAgbGV0IGNvbnRyYWN0ID0gdGhpcy5jb250cmFjdHNbdGhpcy5jcmVhdGVGb3JtLmNvbnRyYWN0XTsKICAgICAgICBpZiAoIWNvbnRyYWN0KSB7CiAgICAgICAgICB0aGlzLmVycm9yRm9ybS5hbGwgPSB0aGlzLiR0KCJmb3JtLm5vQ29udHJhY3QiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdmFyIHJveWFsdGllcyA9IHRoaXMuY3JlYXRlRm9ybS5yb3lhbHRpZXM7CiAgICAgICAgcm95YWx0aWVzID0gdGhpcy4kdG9vbHMuc3RyMm51bShyb3lhbHRpZXMpOwogICAgICAgIHJveWFsdGllcyA9ICFyb3lhbHRpZXMgPyAwIDogcm95YWx0aWVzOwogICAgICAgIGlmIChyb3lhbHRpZXMgPiAxMCkgewogICAgICAgICAgdGhpcy5lcnJvckZvcm0ucm95YWx0aWVzID0gInJveWFsdGllcyBjYW5ub3QgZ3JlYXRlciB0aGFuIDEwJSI7CiAgICAgICAgICB0aGlzLmVycm9yRm9ybS5hbGwgPSAicm95YWx0aWVzIGNhbm5vdCBncmVhdGVyIHRoYW4gMTAlIjsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMubmZ0ID0gewogICAgICAgICAgcGF5VG9rZW46IHRoaXMucGF5VG9rZW4sCiAgICAgICAgICBjb250cmFjdDogY29udHJhY3QsCiAgICAgICAgICB0eXBlOiAzLAogICAgICAgICAgZm9ybTogewogICAgICAgICAgICAuLi50aGlzLmNyZWF0ZUZvcm0sCiAgICAgICAgICAgIHJveWFsdGllczogdGhpcy4kdG9vbHMuZGVjaW1hbChyb3lhbHRpZXMgKiAxMDAsIDApLAogICAgICAgICAgICBwcm9wZXJ0aWVzOiB0aGlzLmZ1bGxQcm9wZXJ0aWVzKHRoaXMuY3JlYXRlRm9ybS5wcm9wZXJ0aWVzKSwKICAgICAgICAgIH0sCiAgICAgICAgICBmaWxlOiB0aGlzLmZpbGUsCiAgICAgICAgfTsKICAgICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgICAgdGhpcy5zaG93TWludCA9IHRydWU7CiAgICAgICAgc2V0VGltZW91dChhc3luYyBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBhd2FpdCB0aGF0LiRyZWZzLm1pbnREaWFsb2cuc3RhcnQoKTsKICAgICAgICB9LCAxMDApOwogICAgICB9LAogICAgICBjb25maXJtICgpIHsKICAgICAgICBpZiAoIXRoaXMuY3JlYXRlRm9ybS5vblNhbGUpIHsKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogIi9pdGVtcyIsIHF1ZXJ5OiB7IHRhYjogImNvbGxlY3RpYmxlcyIgfSB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAiL2l0ZW1zIiwgcXVlcnk6IHsgdGFiOiAic2FsZSIgfSB9KTsKICAgICAgICB9CiAgICAgIH0sCiAgICB9LAogIH07Cg=="},null]}