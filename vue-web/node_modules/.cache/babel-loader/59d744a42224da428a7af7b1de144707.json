{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Mint.vue?vue&type=template&id=c593e614","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Mint.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1652258044998},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";OAQiCA,gBAAuC;OAa7BC,gBAA8B;;EAlB9DC,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;8BAITC,oBAA+D,KAA/D,EAA+D;EAA1DD,KAAK,EAAC,WAAoD;EAAxCE,GAAuC,EAAvCJ;AAAwC,CAA/D;;AAAA;;kBAAAK;;EAIDH,KAAK,EAAC;;;;EACJA,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;+BACTC,oBAAgE,KAAhE,EAAgE;EAA3DD,KAAK,EAAC,mBAAqD;EAAjCE,GAA8B,EAA9BH;AAAiC,CAAhE;;AAAA;;mBAAAK;;EAGCJ,KAAK,EAAC;;;;EAONA,KAAK,EAAC;;;EAERA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;+BACTC,oBAAgE,KAAhE,EAAgE;EAA3DD,KAAK,EAAC,mBAAqD;EAAjCE,GAA8B,EAnB9BH;AAmBiC,CAAhE;;AAAA;;mBAAAM;;EAGCL,KAAK,EAAC;;;;EASNA,KAAK,EAAC;;;EAERA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;+BACTC,oBAAgE,KAAhE,EAAgE;EAA3DD,KAAK,EAAC,mBAAqD;EAAjCE,GAA8B,EAxC9BH;AAwCiC,CAAhE;;AAAA;;mBAAAO;;EAGCN,KAAK,EAAC;;;;EASNA,KAAK,EAAC;;;;EAERA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;+BACTC,oBAAgE,KAAhE,EAAgE;EAA3DD,KAAK,EAAC,mBAAqD;EAAjCE,GAA8B,EA7D9BH;AA6DiC,CAAhE;;AAAA;;mBAAAQ;;EAGCP,KAAK,EAAC;;;;EAQNA,KAAK,EAAC;;;;;;;;;uBA5FjBQ,aA+FYC,oBA/FZ,EA+FY;IA/FA,eAAaC,YA+Fb;IA/FuB,cAAY,KA+FnC;IA/F2C,wBAAsB,KA+FjE;IA/FyEC,KAAK,EAAE,KA+FhF;IA/FwFC,OAAK;MAAA,OAAEF,WAAK,OAAL,CAAF;IAAA,EA+F7F;IA/FgHG,QAAM,EAAEC,eA+FxH;IA/FgI,gBAAa,WA+F7I;IA/FyJ;EA+FzJ,CA/FZ;IACaC,KAAK,WACd;MAAA,OAOM,CAPNd,oBAOM,KAPN,cAOM,CANJA,oBAEM,KAFN,cAEM,CADJA,oBAAyC,MAAzC,EAAyC,IAAzC,EAAyCe,iBAAjCN,QAAE,oBAAF,CAAiC,CAAzC,EAAU;MAAA;MAAV,CACI,CAFN,CAMI,EAHJT,oBAEM,KAFN,EAEM;QAFDD,KAAK,EAAC,OAEL;QAFciB,OAAK;UAAA,OAAEP,WAAK,OAAL,CAAF;QAAA;MAEnB,CAFN,aAGI,CAPN,CAOM,CAPN;IAAA,CADc;sBAUhB;MAAA,OAmFM,CAnFNT,oBAmFM,KAnFN,cAmFM,CAlFyBS,WAAMQ,qBAAnCC,oBAA+D,KAA/D,cAA+DH,iBAAnBN,WAAMQ,GAAa,CAA/D,EAAqD;MAAA;MAArD,sCAkFI,EAjFuBE,WAAIC,IAAJ,IAAYD,WAAIC,IAAJ,CAASC,wBAAhDH,oBAkBM,KAlBN,cAkBM,CAjBJlB,oBAQM,KARN,cAQM,CAPJA,oBAEM,KAFN,cAEM,CADJA,oBAA+C,MAA/C,EAA+C,IAA/C,EAA+Ce,iBAAvCN,QAAE,0BAAF,CAAuC,CAA/C,EAAU;MAAA;MAAV,CACI,CAFN,CAOI,EAJQA,UAAKa,OAAL,IAAY,mBAAxBJ,oBAAkH,MAAlH,EAAkH;cAAA;QAAlFnB,KAAK,mBAAEU,UAAKa,OAAL,IAAY,CAAZ,GAAY,QAAZ,GAAY,EAAd,EAAyC,4BAAzC;MAA6E,CAAlH;;MAAA,oBACAJ,oBAEM,KAFN,eAEMK,WAFN,EAGI,CARN,CAiBI,EARJvB,oBAMM,KANN,eAMM,CAL+CS,UAAKa,OAAL,IAAY,mBAA/Df,aACsCiB,oBADtC,EACsC;cAAA;QAD1BR,OAAK,EAAEH,kBACmB;QADRY,IAAI,EAAC;MACG,CADtC;0BACE;UAAA,OAAwB,mCAAtBhB,QAAE,gBAAF,IAAE;UAAA;WAAoB,CAAxB;QAAA;;;;OADF;;MAAA,kBAE2CA,UAAKa,OAAL,IAAY,mBAAvDf,aACyCiB,oBADzC,EACyC;cAAA;QAD9BE,QAAQ,EAAR,EAC8B;QADrBD,IAAI,EAAC;MACgB,CADzC;0BACE;UAAA,OAA2B,mCAAzBhB,QAAE,mBAAF,IAAE;UAAA;WAAuB,CAA3B;QAAA;;;;OADF,oBAEAF,aAAwEiB,oBAAxE,EAAwE;cAAA;QAA7DE,QAAQ,EAAR,EAA6D;QAApDD,IAAI,EAAC;MAA+C,CAAxE;0BAAuC;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAAvC,EACI,CANN,CAQI,EAD6BA,WAAMa,yBAAvCJ,oBAAyE,KAAzE,eAAyEH,iBAAtBN,WAAMa,OAAgB,CAAzE,EAAgE;MAAA;MAAhE,sCACI,CAlBN,sCAiFI,EA9DJtB,oBAoBM,KApBN,eAoBM,CAnBJA,oBAQM,KARN,eAQM,CAPJA,oBAEM,KAFN,eAEM,CADJA,oBAAwC,MAAxC,EAAwC,IAAxC,EAAwCe,iBAAhCN,QAAE,mBAAF,CAAgC,CAAxC,EAAU;MAAA;MAAV,CACI,CAFN,CAOI,EAJQA,UAAKkB,MAAL,IAAW,mBAAvBT,oBAAgH,MAAhH,EAAgH;cAAA;QAAjFnB,KAAK,mBAAEU,UAAKkB,MAAL,IAAW,CAAX,GAAW,QAAX,GAAW,EAAb,EAAwC,4BAAxC;MAA4E,CAAhH;;MAAA,oBACAT,oBAEM,KAFN,eAEMU,WAFN,EAGI,CARN,CAmBI,EAVJ5B,oBAQM,KARN,eAQM,OAPuC6B,IAAIT,KAAKC,UAAUZ,UAAKa,OAAL,IAAY,mBAA1Ef,aACYiB,oBADZ,EACY;cAAA;QADDE,QAAQ,EAAR,EACC;QADQD,IAAI,EAAC;MACb,CADZ;0BAAiF;UAAA,OAAuB,mCAArBhB,QAAE,eAAF,IAAE;UAAA;WAAmB,CAAvB;QAAA;;;;OAAjF,KAEqDA,UAAKkB,MAAL,IAAW,mBAAhEpB,aACYiB,oBADZ,EACY;cAAA;QADAR,OAAK,EAAEH,eACP;QADeY,IAAI,EAAC;MACpB,CADZ;0BAAsE;UAAA,OAAuB,mCAArBhB,QAAE,eAAF,IAAE;UAAA;WAAmB,CAAvB;QAAA;;;;OAAtE;;MAAA,kBAE2CA,UAAKkB,MAAL,IAAW,mBAAtDpB,aACYiB,oBADZ,EACY;cAAA;QADDE,QAAQ,EAAR,EACC;QADQD,IAAI,EAAC;MACb,CADZ;0BAA6D;UAAA,OAA2B,mCAAzBhB,QAAE,mBAAF,IAAE;UAAA;WAAuB,CAA3B;QAAA;;;;OAA7D,oBAEAF,aAAwEiB,oBAAxE,EAAwE;cAAA;QAA7DE,QAAQ,EAAR,EAA6D;QAApDD,IAAI,EAAC;MAA+C,CAAxE;0BAAuC;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAAvC,EACI,CARN,CAUI,EAD6BA,WAAMkB,wBAAvCT,oBAAuE,KAAvE,eAAuEH,iBAArBN,WAAMkB,MAAe,CAAvE,EAA8D;MAAA;MAA9D,sCACI,CApBN,CA8DI,EAzCJ3B,oBAoBM,KApBN,eAoBM,CAnBJA,oBAQM,KARN,eAQM,CAPJA,oBAEM,KAFN,eAEM,CADJA,oBAAiC,MAAjC,EAAiC,IAAjC,EAAiCe,iBAAzBN,QAAE,YAAF,CAAyB,CAAjC,EAAU;MAAA;MAAV,CACI,CAFN,CAOI,EAJQA,UAAKqB,IAAL,IAAS,mBAArBZ,oBAA4G,MAA5G,EAA4G;cAAA;QAA/EnB,KAAK,mBAAEU,UAAKqB,IAAL,IAAS,CAAT,GAAS,QAAT,GAAS,EAAX,EAAsC,4BAAtC;MAA0E,CAA5G;;MAAA,oBACAZ,oBAEM,KAFN,eAEMa,WAFN,EAGI,CARN,CAmBI,EAVJ/B,oBAQM,KARN,eAQM,CAPkCS,UAAKkB,MAAL,IAAW,mBAAjDpB,aACYiB,oBADZ,EACY;cAAA;QADDE,QAAQ,EAAR,EACC;QADQD,IAAI,EAAC;MACb,CADZ;0BAAwD;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAAxD,KAEqDA,UAAKqB,IAAL,IAAS,mBAA9DvB,aACYiB,oBADZ,EACY;cAAA;QADAR,OAAK,EAAEH,eACP;QADeY,IAAI,EAAC;MACpB,CADZ;0BAAoE;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAApE;;MAAA,kBAE2CA,UAAKqB,IAAL,IAAS,mBAApDvB,aACYiB,oBADZ,EACY;cAAA;QADDE,QAAQ,EAAR,EACC;QADQD,IAAI,EAAC;MACb,CADZ;0BAA2D;UAAA,OAA2B,mCAAzBhB,QAAE,mBAAF,IAAE;UAAA;WAAuB,CAA3B;QAAA;;;;OAA3D,oBAEAF,aAAwEiB,oBAAxE,EAAwE;cAAA;QAA7DE,QAAQ,EAAR,EAA6D;QAApDD,IAAI,EAAC;MAA+C,CAAxE;0BAAuC;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAAvC,EACI,CARN,CAUI,EAD6BA,WAAMqB,sBAAvCZ,oBAAmE,KAAnE,eAAmEH,iBAAnBN,WAAMqB,IAAa,CAAnE,EAA0D;MAAA;MAA1D,sCACI,CApBN,CAyCI,EApBuBX,WAAIC,IAAJ,CAASC,wBAApCH,oBAmBM,KAnBN,eAmBM,CAlBJlB,oBAQM,KARN,eAQM,CAPJA,oBAEM,KAFN,eAEM,CADJA,oBAAuC,MAAvC,EAAuC,IAAvC,EAAuCe,iBAA/BN,QAAE,kBAAF,CAA+B,CAAvC,EAAU;MAAA;MAAV,CACI,CAFN,CAOI,EAJQA,UAAKuB,IAAL,IAAS,mBAArBd,oBAA6G,MAA7G,EAA6G;cAAA;QAAhFnB,KAAK,mBAAEU,UAAKuB,IAAL,IAAS,CAAT,GAAS,QAAT,GAAS,EAAX,EAAuC,4BAAvC;MAA2E,CAA7G;;MAAA,oBACAd,oBAEM,KAFN,eAEMe,WAFN,EAGI,CARN,CAkBI,EATJjC,oBAOM,KAPN,eAOM,CANkCS,UAAKqB,IAAL,IAAS,mBAA/CvB,aAAuFiB,oBAAvF,EAAuF;cAAA;QAA5EE,QAAQ,EAAR,EAA4E;QAAnED,IAAI,EAAC;MAA8D,CAAvF;0BAAsD;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAAtD,KACqDA,UAAKuB,IAAL,IAAS,mBAA9DzB,aACYiB,oBADZ,EACY;cAAA;QADAR,OAAK,EAAEH,eACP;QADeY,IAAI,EAAC;MACpB,CADZ;0BAAoE;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAApE;;MAAA,kBAE2CA,UAAKuB,IAAL,IAAS,mBAApDzB,aACYiB,oBADZ,EACY;cAAA;QADDE,QAAQ,EAAR,EACC;QADQD,IAAI,EAAC;MACb,CADZ;0BAA2D;UAAA,OAA2B,mCAAzBhB,QAAE,mBAAF,IAAE;UAAA;WAAuB,CAA3B;QAAA;;;;OAA3D,oBAEAF,aAAwEiB,oBAAxE,EAAwE;cAAA;QAA7DE,QAAQ,EAAR,EAA6D;QAApDD,IAAI,EAAC;MAA+C,CAAxE;0BAAuC;UAAA,OAAqB,mCAAnBhB,QAAE,aAAF,IAAE;UAAA;WAAiB,CAArB;QAAA;;;;OAAvC,EACI,CAPN,CASI,EAD6BA,WAAMuB,sBAAvCd,oBAAmE,KAAnE,eAAmEH,iBAAnBN,WAAMuB,IAAa,CAAnE,EAA0D;MAAA;MAA1D,sCACI,CAnBN,sCAoBI,CAnFN,CAmFM,CAnFN;IAAA;;;;GAXF;;EAAA","names":["_imports_0","_imports_1","class","_createElementVNode","src","_hoisted_3","_hoisted_11","_hoisted_19","_hoisted_27","_hoisted_35","_createBlock","_component_el_dialog","_ctx","modal","onClose","onClosed","$options","title","_toDisplayString","onClick","all","_createElementBlock","$props","form","onSale","approve","_hoisted_12","_component_el_button","type","disabled","fileUp","_hoisted_20","nft","mint","_hoisted_28","sale","_hoisted_36"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Mint.vue"],"sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" :modal=\"false\" @close=\"$emit('close')\" @closed=\"closed\" custom-class=\"fg-dialog\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span>{{$t('dialog.followSteps')}}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \">\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\">\n      <div class=\"all-error\" v-if=\"error.all\"> {{ error.all }} </div>\n      <div class=\"process\" v-if=\"nft.form && nft.form.onSale\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.approveCollection')}}</span>\n          </div>\n          <span v-if=\"step.approve != 1\" :class=\"step.approve== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onApprove\" type=\"primary\" v-if=\"step.approve == 0\">\n            {{$t('dialog.approve')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.approve == 1\">\n            {{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.approve\">{{ error.approve }}</div>\n      </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.fileUpload')}}</span>\n          </div>\n          <span v-if=\"step.fileUp != 1\" :class=\"step.fileUp== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button disabled type=\"info\" v-if=\"this.nft.form.onSale && step.approve != 2\">{{$t('dialog.upload')}}\n          </el-button>\n          <el-button @click=\"fileUp\" type=\"primary\" v-else-if=\"step.fileUp ==0\">{{$t('dialog.upload')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.fileUp == 1\">{{$t('dialog.inProgress')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.fileUp\">{{ error.fileUp }}</div>\n      </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.cyn')}}</span>\n          </div>\n          <span v-if=\"step.mint != 1\" :class=\"step.mint== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button disabled type=\"info\" v-if=\"step.fileUp != 2\">{{$t('dialog.mint')}}\n          </el-button>\n          <el-button @click=\"onMint\" type=\"primary\" v-else-if=\"step.mint ==0\">{{$t('dialog.mint')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.mint == 1\">{{$t('dialog.inProgress')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.mint\">{{ error.mint }}</div>\n      </div>\n      <div class=\"process\" v-if=\"nft.form.onSale\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.signsSale')}}</span>\n          </div>\n          <span v-if=\"step.sale != 1\" :class=\"step.sale == 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button disabled type=\"info\" v-if=\"step.mint != 2\">{{$t('dialog.sale')}}</el-button>\n          <el-button @click=\"onSale\" type=\"primary\" v-else-if=\"step.sale ==0\">{{$t('dialog.sale')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.sale == 1\">{{$t('dialog.inProgress')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.sale\">{{ error.sale }}</div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n<script>\n  import BigNumber from 'bignumber.js'\n\n  export default {\n    data: function () {\n      return {\n        visible: this.show,\n        step: {\n          approve: 0,\n          mint: 0,\n          sale: 0,\n          fileUp: 0,\n        },\n        error: {\n          all: \"\",\n          approve: \"\",\n          mint: \"\",\n          sale: \"\",\n          fileUp: \"\",\n        },\n        asset: {},\n        storeAsset: {},\n      };\n    },\n    emits: ['confirm', 'close'],\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      file: {\n        type: String,\n        default: \"\",\n      },\n      animFile: {\n        type: String,\n        default: ''\n      }\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n    },\n    methods: {\n      async fileUp () {\n        if (this.nft.form.onSale && this.step.approve != 2) return;\n        this.step.fileUp = 1;\n        let asset = this.asset;\n        let result = null\n        if (!this.animFile) {\n          result = await this.uploadStorage(this.file);\n          if (result.error) {\n            this.error.fileUp = result.error;\n            this.step.mint = 0;\n            this.step.fileUp = 0;\n            return;\n          }\n          this.step.fileUp = 2;\n          asset.storageId = result.id;\n          asset.url = result.url;\n          this.storeAsset = asset;\n        } else {\n          let files = [this.animFile, this.file];\n          result = await this.multiUploadStorage(files);\n          if (result.error) {\n            this.error.fileUp = result.error;\n            this.step.mint = 0;\n            this.step.fileUp = 0;\n            return;\n          }\n          this.error.fileUp = \"\";\n          this.step.fileUp = 2;\n\n          let animResult = result[0];\n          let fileResult = result[1];\n\n          asset.animStorageId = animResult.id;\n          asset.animUrl = animResult.url;\n          asset.storageId = fileResult.id;\n          asset.url = fileResult.url;\n          this.storeAsset = asset;\n        }\n      },\n      async start () {\n        this.asset = this.nft.contract;\n        if (this.nft.form.onSale) {\n          await this.onApprove();\n        } else {\n          await this.fileUp();\n        }\n      },\n      async onApprove () {\n        if (!this.nft.form.onSale) return;\n        this.step.approve = 1;\n        let asset = this.asset;\n        let approved = await this.setApproveAll(asset);\n        if (approved.error) {\n          this.error.approve = approved.error;\n          this.step.approve = 0;\n          return;\n        }\n        this.asset = asset;\n        this.error.approve = \"\";\n        this.step.approve = 2;\n      },\n      async onMint () {\n        let asset = this.storeAsset;\n        this.step.mint = 1;\n        let result = await this.mintToken(asset);\n        if (result.error) {\n          this.error.mint = result.error;\n          this.step.mint = 0;\n          return;\n        }\n        this.asset = Object.assign(this.asset);\n        this.error.mint = \"\";\n        this.step.mint = 2;\n        if (!this.nft.form.onSale) {\n          this.confirm({});\n        }\n      },\n      async onSale () {\n        if (!this.nft.form.onSale) return;\n        this.step.sale = 1;\n        let asset = {\n          ...this.asset,\n          price: this.nft.form.price,\n          sellerFee: this.config.sellerFee,\n        };\n        let result = await this.saleToken(asset);\n        if (result.error) {\n          this.error.sale = result.error;\n          this.step.sale = 0;\n          return;\n        }\n        this.step.sale = 2;\n        this.confirm({});\n      },\n      confirm (data) {\n        this.$emit(\"confirm\", data);\n      },\n      close () {\n        this.$emit(\"close\");\n      },\n      closed () {\n        this.step = {\n          approve: 0,\n          mint: 0,\n          sale: 0,\n          fileUp: 0,\n        };\n        this.error = {\n          all: \"\",\n          approve: \"\",\n          mint: \"\",\n          sale: \"\",\n          fileUp: \"\",\n        };\n      },\n      async setApproveAll (asset) {\n        let isApproved = await this.$sdk.isApprovedForAll(\n          asset,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n        );\n        if (typeof isApproved == \"object\" && isApproved.error) {\n          return isApproved;\n        }\n        if (isApproved) return true;\n        let result = await this.$sdk.setApprovalForAll(\n          asset,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n          true\n        );\n        return result;\n      },\n      async uploadStorage (file) {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"file\", file)\n          var that = this;\n          this.$api(\"storage.upload\", formData).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              resolve(res.data);\n            } else {\n              resolve({\n                error: res.errmsg,\n              });\n            }\n          });\n        });\n      },\n      async multiUploadStorage (files) {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          for (var i = 0;i < files.length;i++) {\n            formData.append(\"files\", files[i]);\n          }\n          var that = this;\n          this.$api(\"storage.multiupload\", formData).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              resolve(res.data);\n            } else {\n              resolve({\n                error: res.errmsg,\n              });\n            }\n          });\n        });\n      },\n      async mintToken (asset) {\n        return new Promise((resolve, reject) => {\n          let data = { address: asset.address };\n          var that = this;\n          this.$api(\"dapp.sign\", data).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              let signature = res.data;\n              asset.signature = {\n                v: signature.v.toLocaleLowerCase(),\n                r: signature.r.toLocaleLowerCase(),\n                s: signature.s.toLocaleLowerCase(),\n              };\n              asset.tokenId = signature.tokenId;\n              asset.fees = [];\n              if (that.nft.form.royalties) {\n                asset.fees.push({\n                  recipient: that.user.coinbase,\n                  value: that.nft.form.royalties,\n                  tokenId: asset.tokenId,\n                })\n              }\n              that.asset = asset;\n              var properties = \"\";\n              if (that.nft.form.properties.length) {\n                properties = JSON.stringify(that.nft.form.properties);\n              }\n              let quantity;\n              if (asset.type == 3) {\n                quantity = 1\n              } else if (asset.type == 2) {\n                quantity = that.nft.form.quantity\n              }\n              var _data = {\n                address: asset.address,\n                storageId: asset.storageId,\n                imgUrl: asset.url,\n                quantity: quantity,\n                tokenId: asset.tokenId,\n                description: that.nft.form.description,\n                royalties: JSON.stringify([that.nft.form.royalties]),\n                categoryId: that.nft.form.category,\n                properties: properties,\n                type: asset.type,\n                name: that.nft.form.name,\n                animUrl: asset.animUrl,\n                animStorageId: asset.animStorageId\n              };\n              that.$api(\"nft.add\", _data).then(async function (res) {\n                if (that.$tools.checkResponse(res)) {\n                  asset.tokenURI = res.data.metadataUrl;\n                  asset.tokenURI = asset.tokenURI.replace('ipfs:/', '')\n\n                  let result;\n                  if (asset.type == 3) {\n                    result = await that.$sdk.mintToken(\n                      that.user.coinbase,\n                      asset\n                    );\n\n                  } else if (asset.type == 2) {\n                    asset.quantity = that.nft.form.quantity;\n                    result = await that.$sdk.mintErc1155Token(\n                      that.user.coinbase,\n                      asset\n                    );\n                  }\n                  resolve(result);\n                } else {\n                  resolve({ error: res.errmsg });\n                }\n              });\n            } else {\n              that.$tools.message(res.errmsg);\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      async saleToken (asset) {\n        return new Promise((resolve, reject) => {\n          var paytoken = this.nft.payToken;\n          let quantity;\n          let sellType;\n          if (asset.type == 3) {\n            quantity = 1\n            sellType = this.$sdk.valueAssetType(\"ERC721\")\n          } else if (asset.type == 2) {\n            quantity = this.nft.form.quantity\n            sellType = this.$sdk.valueAssetType(\"ERC1155\")\n          }\n\n          let buyValue = new BigNumber(this.nft.form.price);\n          buyValue = buyValue.multipliedBy(new BigNumber(quantity)).multipliedBy(\n            new BigNumber(10).exponentiatedBy(paytoken.decimals)).toFixed();\n \n          var data = {\n            owner: this.user.coinbase,\n            sellToken: asset.address,\n            sellTokenId: asset.tokenId,\n            sellValue: quantity,\n            sellType: sellType,\n            buyToken: paytoken.address,\n            buyTokenId: \"0\",\n            buyValue: buyValue,\n            buyType: paytoken.type,\n            salt: \"0\",\n            type: this.$sdk.valueCommonType(\"SALE\")\n          };\n          let that = this;\n          this.$api(\"order.prepare\", data).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              let message = res.data.message;\n              if (message.startsWith(\"0x\")) {\n                message = message.slice(2, message.length);\n              }\n              let salt = res.data.salt;\n              let signature = \"\";\n              try {\n                signature = await that.$web3.sign(message, that.user.coinbase);\n                if (signature.error) {\n                  return resolve(signature);\n                }\n              } catch (e) {\n                return resolve({ error: e.message });\n              }\n              var _data = {\n                type: that.$sdk.valueCommonType(\"SALE\"),\n                owner: data.owner,\n                sellToken: data.sellToken,\n                sellTokenId: data.sellTokenId,\n                sellValue: data.sellValue,\n                sellType: data.sellType,\n                buyToken: data.buyToken,\n                buyTokenId: data.tokenId ? data.tokenId : 0,\n                buyValue: data.buyValue,\n                buyType: data.buyType,\n                salt: salt,\n                message: message,\n                signature: signature,\n              };\n              that.$api(\"order.add\", _data).then(function (res) {\n                if (that.$tools.checkResponse(res)) {\n                  that.$tools.message(that.$t('request.mintSuccess'), \"success\");\n                  resolve(true);\n                } else {\n                  that.$tools.message(res.errmsg);\n                  resolve({ error: res.errmsg });\n                }\n              });\n            } else {\n              that.$tools.message(res.errmsg);\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}