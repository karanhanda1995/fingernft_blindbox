{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Open.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Open.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["BigNumber","emits","name","data","visible","show","form","price","quantity","confirm","formError","all","step","approve","open","error","openList","isOver","isExplosion","props","type","Boolean","default","blindbox","Object","nfts","Array","watch","val","computed","blindBoxSigned","$store","state","user","config","payToken","address","paytokenAddress","paytokenName","symbol","paytokenSymbol","paytokenType","tokenId","paytokenTokenId","decimals","paytokenDecimals","pay","balance","getters","getBalanceV2","$tools","decimal","serviceFee","fee","order","buyerfee","$sdk","keyAssetType","isContract","NULL_ADDRESS","openingGif","anim1","require","openedGif","anim2","methods","onOpen","assign","checkForm","parseInt","$t","amount","openeds","parseFloat","onSubmit","needLogin","$route","path","that","setTimeout","onApprove","onBuy","approvePayToken","result","setApproveAll","asset","allowancePayToken","coinbase","contract","erc20TransferProxyAddress","isAllowance","toString","isApprovedForAll","transferProxyAddress","isApproved","setApprovalForAll","buyOrder","commit","Promise","resolve","reject","salt","$api","then","res","checkResponse","buyerFeeSig","r","s","v","blindBoxAddress","sellAssets","JSON","parse","uris","sellings","i","length","push","buying","sellerFee","buyerFee","buyer","value","buyerType","multipliedBy","dividedBy","plus","toFixed","openBlindBox","dispatch","getOpenList","logs","errmsg","log","event","index","args","closed"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Open.vue"],"sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" :custom-class=\" blindBoxSigned && isOver && openList.length > 2 ? 'fg-dialog bg-fg-dialog' : 'fg-dialog' \" @close=\"$emit('close')\" @closed=\"closed\" @open=\"onOpen\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span>{{ blindbox.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \">\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"all-error\" v-if=\"formError.all\"> {{ formError.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.open')}}</span>\n          </div>\n        </div>\n\n        <div class=\"input-group\">\n          <div class=\"input-info\">\n            <div class=\"tip\">{{$t('dialog.salePrice')}}</div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" :disabled=\"true\" type=\"number\" v-model=\"form.price\">\n              <template #suffix>\n                <div class=\"paytoken-suffix\">{{ payToken.symbol }}</div>\n              </template>\n            </el-input>\n\n            <div class=\"stip\">\n              <div class=\"stip-item\">{{$t('dialog.yourBalance')}} <span class=\"bfont\">{{ pay.balance }} {{ payToken.symbol }}</span> </div>\n              <div class=\"stip-item\">{{$t('dialog.serviceFee')}} <span class=\"bfont\">{{serviceFee}}%</span> </div>\n              <div class=\"stip-item\"> {{$t('dialog.pay')}}\n                <span class=\"bfont\"> {{pay.pay}} {{ payToken.symbol }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"input-info\">\n            <div class=\"tip\"><span>{{$t('dialog.buyQuantity')}}</span>\n              <span class=\"gray-font\">({{ !blindbox.order.openeds ?  blindbox.amount : blindbox.amount - blindbox.order.openeds}} {{$t('dialog.available')}})</span>\n            </div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-model=\"form.quantity\">\n            </el-input>\n\n            <div class=\"input-error\" v-if=\"formError.quantity\">{{ formError.quantity}}</div>\n          </div>\n        </div>\n\n        <div class=\"process-btn\">\n          <template v-if=\"pay && parseFloat(pay.pay) > parseFloat(pay.balance)\">\n            <el-button @click=\"onSubmit\" disabled type=\"primary\" :loading=\"confirm\"> {{ $t('dialog.open')}}\n            </el-button>\n            <div class=\"input-error center-font\">{{$t('dialog.noBalance')}}</div>\n          </template>\n          <template v-else>\n            <el-button @click=\"onSubmit\" type=\"primary\" :loading=\"confirm\">{{$t('dialog.open')}}</el-button>\n          </template>\n\n        </div>\n        <div class=\"process-btn\">\n          <el-button plain type=\"info\" @click=\"$emit('close')\">{{$t('dialog.cancel')}}\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else-if=\"confirm && !blindBoxSigned\">\n      <div class=\"all-error\" v-if=\"error.all\"> {{ error.all }} </div>\n\n      <div class=\"process\" v-if=\"isContract\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.approve')}} {{ payToken.symbol }}</span>\n          </div>\n          <span v-if=\"step.approve != 1\" :class=\"step.approve== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onApprove\" type=\"primary\" v-if=\"step.approve == 0\">{{$t('dialog.approve')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.approve == 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.approve\">{{ error.approve }}</div>\n      </div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.sto')}}</span>\n          </div>\n          <span v-if=\"step.open != 1\" :class=\"step.open == 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n\n        <div class=\"process-btn\" v-if=\"!isContract\">\n          <el-button @click=\"onBuy\" type=\"primary\" v-if=\"step.open == 0\">{{$t('dialog.open')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.open == 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n\n        <div class=\"process-btn\" v-else>\n          <el-button disabled type=\"info\" v-if=\"step.approve != 2\">{{$t('dialog.open')}}</el-button>\n          <el-button @click=\"onBuy\" type=\"primary\" v-else-if=\"step.open == 0\">{{$t('dialog.open')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.open == 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.open\">{{ error.open }}</div>\n      </div>\n\n    </div>\n    <div v-else-if=\"confirm && blindBoxSigned\">\n      <div class=\"middle-box\">\n        <div v-if=\"!isOver\" class=\"open-status\">\n          <img v-if=\"!isExplosion\" :src=\"openingGif\" class=\"videoClass\" />\n          <img v-else :src=\"openedGif\" class=\"videoClass\" />\n        </div>\n        <div class=\"flex justify-around open-nft-items\" :class=\"openList.length > 5 ? 'flex-wrap' : ''\" v-else>\n          <div class=\"open-nft-item\" v-for=\"(nft, i) in openList\" :key=\"i\">\n            <img class=\"nft-img\" :src=\"$filters.fullImageUrl( $tools.analysis(nft.metadataContent).image)\" />\n            <div class=\"nft-name\">{{ nft.name }}</div>\n          </div>\n        </div>\n        <div v-if=\"!isOver\" class=\"describe-box\">{{ $t('dialog.openTip') }}</div>\n      </div>\n\n      <div class=\"form-footer \">\n        <el-button v-if=\"!isOver\" class=\"open-btn\" :loading=\"loading\" type=\"primary\" disabled>\n          {{$t('dialog.opening')}}</el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from \"bignumber.js\";\n  export default {\n    emits: [\"confirm\", \"close\"],\n    name: \"\",\n    data () {\n      return {\n        visible: this.show,\n        form: {\n          price: \"\",\n          quantity: \"\",\n        },\n        confirm: false,\n        formError: {\n          all: \"\",\n          quantity: \"\",\n        },\n        step: {\n          approve: 0,\n          open: 0,\n        },\n        error: {\n          all: \"\",\n          approve: \"\",\n          open: \"\",\n        },\n        openList: [],\n        isOver: false,\n        isExplosion: false,\n      };\n    },\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      blindbox: {\n        type: Object,\n        default: {},\n      },\n      nfts: {\n        type: [Array, Object],\n        default: [],\n      }\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      blindBoxSigned () {\n        return this.$store.state.blindBoxSigned;\n      },\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      payToken () {\n        let payToken = {\n          address: this.blindbox.paytokenAddress,\n          name: this.blindbox.paytokenName,\n          symbol: this.blindbox.paytokenSymbol,\n          type: this.blindbox.paytokenType,\n          tokenId: this.blindbox.paytokenTokenId,\n          decimals: this.blindbox.paytokenDecimals\n        }\n        return payToken;\n      },\n      pay () {\n        let price;\n        if (!this.form.price) {\n          return { pay: 0, balance: 0 }\n        }\n        price = this.form.price * this.form.quantity;\n\n        let balance = this.$store.getters.getBalanceV2(this.payToken);\n        balance = this.$tools.decimal(balance, 4)\n\n        let pay = this.$tools.decimal(price + (price * this.serviceFee / 100));\n        return { pay, balance }\n      },\n      serviceFee () {\n        let fee = this.$tools.decimal(this.blindbox.order.buyerfee / 100, 2);\n        if (this.$sdk.keyAssetType(this.payToken.type) == \"ERC721\" ||\n          this.$sdk.keyAssetType(this.payToken.type) == \"ERC1155\") {\n          return 0;\n        }\n        return fee;\n      },\n      isContract () {\n        if (this.payToken.address == this.$sdk.NULL_ADDRESS()) return false;\n        return true;\n      },\n      openingGif () {\n        if (!this.blindbox.anim1) return require('@/assets/img/blindbox/opening.gif')\n        return this.blindbox.anim1;\n      },\n      openedGif () {\n        if (!this.blindbox.anim2) return require('@/assets/img/blindbox/opened.gif')\n        return this.blindbox.anim2;\n      },\n    },\n    methods: {\n      onOpen () {\n        this.form.quantity = 1;\n        this.form.price = this.blindbox.price;\n        this.form = Object.assign({}, this.form);\n      },\n      checkForm () {\n        let error = false;\n        let quantity = parseInt(this.form.quantity);\n        if (!quantity) {\n          this.formError.quantity = this.$t(\"form.noQuantity\");\n          error = true;\n        }\n        if (quantity > 10) {\n          this.formError.quantity = this.$t(\"form.maxAmount10Limit\");\n          error = true;\n        }\n\n        let amount = this.blindbox.amount;\n        if (this.blindbox.order.openeds) {\n          amount = amount - this.blindbox.order.openeds;\n        }\n        if (parseFloat(this.form.quantity) > amount) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.exceedValue\");\n        }\n        return !error;\n      },\n      async onSubmit () {\n        if (!this.$tools.needLogin(this.$route.path)) return;\n        if (!this.checkForm()) return;\n        this.confirm = true;\n        let that = this;\n\n        setTimeout(async function () {\n          if (that.isContract) {\n            await that.onApprove();\n          } else {\n            await that.onBuy();\n          }\n        }, 100);\n      },\n      async onApprove () {\n        this.step.approve = 1;\n        let result;\n        if (this.$sdk.keyAssetType(this.payToken.type) == \"ERC20\") {\n          result = await this.approvePayToken();\n        } else {\n          result = await this.setApproveAll();\n        }\n        if (result.error) {\n          this.error.approve = result.error;\n          this.step.approve = 0;\n        } else {\n          this.error.approve = \"\";\n          this.step.approve = 2;\n        }\n      },\n      async approvePayToken () {\n        let asset = {\n          address: this.payToken.address,\n          type: this.payToken.type,\n        }\n        let isAllowance = await this.$sdk.allowancePayToken(asset,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n        if (isAllowance.error) {\n          return isAllowance;\n        }\n        isAllowance = isAllowance.toString();\n        if (isAllowance != '0' && isAllowance) {\n          return true;\n        }\n        return await this.$sdk.approvePayToken(asset,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n      },\n      async setApproveAll () {\n        let order = {\n          address: this.payToken.address,\n          type: this.payToken.type,\n          tokenId: this.payToken.tokenId,\n        }\n        let isApproved = await this.$sdk.isApprovedForAll(\n          order,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n        );\n        if (typeof isApproved == \"object\" && isApproved.error) {\n          return isApproved;\n        }\n        if (isApproved) return true;\n        let result = await this.$sdk.setApprovalForAll(\n          order,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n          true\n        );\n        return result;\n      },\n      async onBuy () {\n        this.isOver = false;\n        this.isExplosion = false;\n        if (this.isContract && this.step.approve != 2) return;\n        this.step.open = 1;\n        let order = this.blindbox.order;\n        let result = await this.buyOrder(order);\n        if (!result.error) {\n          let that = this;\n          that.isExplosion = true;\n          that.error.open = \"\";\n          that.step.open = 2;\n          setTimeout(() => {\n            that.isExplosion = false;\n            that.isOver = true;\n            that.error.open = result.error;\n            that.step.open = 0;\n          }, 1500)\n        } else {\n          this.error.open = result.error;\n          this.step.open = 0;\n          this.$store.commit(\"BLINDBOX_SIGNED\", false);\n        }\n      },\n      async buyOrder (asset) {\n        return new Promise((resolve, reject) => {\n          var that = this;\n          var data = {\n            salt: asset.salt,\n          };\n          this.$api(\"blind.order.buyfee\", data).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              asset.buyerFeeSig = {\n                r: res.data.r,\n                s: res.data.s,\n                v: res.data.v,\n              };\n\n              asset.blindBoxAddress = that.config.contract.blindBoxAddress\n              asset.nfts = that.nfts;\n              if (typeof (asset.sellAssets) == 'string') {\n                asset.sellAssets = JSON.parse(asset.sellAssets)\n              }\n              if (typeof (asset.uris) == \"string\") {\n                asset.uris = JSON.parse(asset.uris);\n              }\n              let sellings = asset.sellings;\n              if (typeof (asset.sellings) == 'string') {\n                sellings = JSON.parse(asset.sellings);\n              }\n              asset.sellings = [];\n              for (var i = 0;i < sellings.length;i++) {\n                asset.sellings.push(sellings[i].toString());\n              }\n              asset.buying = res.data.buying\n              asset.sellerFee = res.data.sellerFee;\n              asset.buyerFee = res.data.buyerFee;\n              asset.amount = that.form.quantity;\n              asset.buyer = that.user.coinbase;\n              asset.value = '0';\n              if (that.$sdk.keyAssetType(asset.buyerType) == \"ETH\") {\n                let price = new BigNumber(that.form.price).multipliedBy(new BigNumber(that.form.quantity));\n                let fee = price.multipliedBy(new BigNumber(asset.buyerFee));\n                fee = fee.dividedBy(new BigNumber(10000));\n                asset.value = price.plus(fee).toFixed();\n              }\n              let result = await that.$sdk.openBlindBox(that.user.coinbase, asset);\n              if (result.error) {\n                return resolve(result);\n              }\n              that.$store.dispatch(\"updatePayToken\", that.payToken);\n              that.getOpenList(result.logs);\n              resolve(result);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      async getOpenList (logs) {\n        let openList = [];\n        for (var i = 0;i < logs.length;i++) {\n          let log = logs[i];\n          if (log.event != \"OpenIndex\") continue;\n          let index = log.args.index.toString();\n          openList.push(this.nfts[index]);\n        }\n        this.openList = openList;\n      },\n      closed () {\n        this.step = {\n          approve: 0,\n          open: 0,\n        };\n        this.form = {\n          price: \"\",\n          quantity: \"\",\n        }\n        this.formError = {\n          all: \"\",\n          quantity: \"\",\n        };\n        this.error = {\n          all: \"\",\n          approve: \"\",\n          open: \"\",\n        }\n        this.confirm = false;\n        this.isOver = false;\n        this.isExplosion = false;\n        this.$store.commit(\"BLINDBOX_SIGNED\", false);\n      },\n\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .open-btn {\n    width: 50%;\n    height: 27px;\n    background: #4f00ff;\n    border-radius: 4px;\n  }\n  .form-footer {\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  /*\n        .el-input--suffix .el-input__inner {\n          padding-right: 0px !important;\n          border-radius: 4px !important;\n          width: 100% !important;\n          padding: 0px 8px !important;\n          height: 40px !important;\n        }\n        .el-input__inner {\n          padding-right: 0px !important;\n          border-radius: 4px !important;\n          width: 100% !important;\n          padding: 0px 8px !important;\n          padding-right: 30px !important;\n          height: 40px !important;\n        }\n        */\n  .videoClass {\n    width: 100%;\n    border-radius: 10px;\n  }\n  .open-status{\n    text-align: center;\n  }\n  .describe-box {\n    font-size: 9px;\n    color: #000000;\n    margin: 8px 0px 27px;\n  }\n  .open-nft-items {\n    &.flex-wrap {\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      .open-nft-item {\n        width: 20%;\n        flex: none;\n      }\n    }\n  }\n  .open-nft-item {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 10px;\n    .nft-img {\n      border-radius: $borderRadius;\n      width: 90%;\n      margin: 0 5px;\n    }\n    .nft-name {\n      width: 90%;\n      text-align: center;\n      margin: 0 5px;\n      margin-top: 10px;\n    }\n  }\n  .fg-dialog {\n    &.bg-fg-dialog {\n      height: auto !important;\n      width: 800px !important;\n    }\n  }\n</style>\n\n\n"]}]}