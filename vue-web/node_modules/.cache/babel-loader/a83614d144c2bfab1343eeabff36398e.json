{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\AuctionAccept.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\AuctionAccept.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["BigNumber","data","visible","show","royalties","confirm","step","accept","error","all","emits","props","type","Boolean","default","nft","Object","auction","bid","uri","bidUsers","Array","watch","val","computed","user","$store","state","isERC20","paytokenAddress","$sdk","NULL_ADDRESS","config","serviceFee","fee","$tools","decimal","sellerFee","bidPrice","singlePrice","receive","payToken","address","buyerToken","buyerType","decimals","paytokenDecimals","b","getBalance","owner","price","str2num","buying","dividedBy","multipliedBy","toFixed","encourage","minus","mounted","getRoyalties","methods","nfts","_nfts","tokenId","info","that","$api","then","res","key","getroyalties","JSON","parse","count","i","length","onSubmit","setTimeout","onBuy","buyOrder","result","$emit","value","keyAssetType","realValue","exponentiatedBy","plus","buyerValue","order","salt","sellToken","sellTokenId","sellType","sellValue","buyToken","buyTokenId","buyerTokenId","buyType","buyValue","bidBuying","endTime","expiredTime","buyerFee","signature","bidSignature","caddress","exchangeToken","Promise","resolve","reject","token","checkResponse","buyerFeeSig","r","s","v","auctionAddress","contract","auctionExchangeAddress","recipients","exchangeAuction","coinbase","dispatch","errmsg","closed"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\AuctionAccept.vue"],"sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" @close=\"$emit('close')\" @closed=\"closed\" custom-class=\"fg-dialog\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span v-if=\"uri\">{{ uri.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \">\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.auctionBuy')}}</span>\n          </div>\n        </div>\n\n        <div class=\"input-group\">\n          <div class=\"input-info\">\n            <div class=\"tip\">{{$t('dialog.bidPrice')}}</div>\n            <el-input class=\"fg-dialog-input\" :disabled=\"true\" type=\"number\" v-model=\"bidPrice\">\n              <template #suffix>\n                <div class=\"paytoken-suffix\">{{auction.paytokenSymbol}}</div>\n              </template>\n            </el-input>\n            <div class=\"tip\">{{$t('dialog.buyQuantity')}}</div>\n            <el-input class=\"fg-dialog-input\" type=\"number\" :disabled=\"true\" v-model=\"auction.sellValue\">\n              <template #suffix>\n              </template>\n            </el-input>\n            <div class=\"stip\">\n              <div class=\"stip-item\"> {{$t('dialog.serviceFee')}} <span class=\"bfont\">{{serviceFee}}%</span> </div>\n              <div class=\"stip-item\"> {{$t('dialog.royalty')}} <span class=\"bfont\">{{royalties}}%</span> </div>\n              <div class=\"stip-item\">{{$t('dialog.receive')}}\n                <span class=\"bfont\"> {{receive.receive}} {{auction.paytokenSymbol}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"process-btn\">\n          <el-button @click=\"onSubmit\" type=\"primary\" :loading=\"confirm\">{{$t('dialog.accept')}}\n          </el-button>\n        </div>\n        <div class=\"process-btn\">\n          <el-button plain type=\"info\" @click=\"$emit('close')\">{{$t('dialog.cancel')}}\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else>\n      <div class=\"all-error\" v-if=\"error.all\"> {{ error.all }} </div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.stb')}}</span>\n          </div>\n          <span v-if=\"step.accept != 1\" :class=\"step.accept == 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n\n        <div class=\"process-btn\" v-if=\"!isERC20\">\n          <el-button @click=\"onBuy\" type=\"primary\" v-if=\"step.accept==0\">{{$t('dialog.accept')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.accept== 1\">{{$t('dialog.inProgress')}}</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.accept\">{{ error.accept}}</div>\n      </div>\n\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from \"bignumber.js\";\n  export default {\n    data: function () {\n      return {\n        visible: this.show,\n        royalties: 0,\n        confirm: false,\n        step: {\n          accept: 0,\n        },\n        error: {\n          all: \"\",\n          accept: \"\",\n        },\n      };\n    },\n    emits: ['confirm'],\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      auction: {\n        type: Object,\n        default: {},\n      },\n      bid: {\n        type: Object,\n        default: {},\n      },\n      uri: {\n        type: Object,\n        default: {},\n      },\n      bidUsers: {\n        type: Array,\n        default: [],\n      }\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      user () {\n        return this.$store.state.user;\n      },\n      isERC20 () {\n        if (this.auction.paytokenAddress == this.$sdk.NULL_ADDRESS()) return false;\n        return true;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      serviceFee () {\n        let fee = this.$tools.decimal(this.$store.state.config.sellerFee / 100, 2);\n        return fee;\n      },\n      bidPrice () {\n        if (this.bid && this.auction) {\n          return this.bid.singlePrice\n        }\n        return \"\"\n      },\n      receive () {\n        var payToken = {\n          address: this.auction.buyerToken,\n          type: this.auction.buyerType,\n          decimals: this.auction.paytokenDecimals,\n        }\n        let b = this.$sdk.getBalance(payToken, this.bid.owner);\n        let price = this.$tools.str2num(this.bid.buying);\n        price = this.$tools.singlePrice(price, 1, payToken)\n        if (!price) {\n          return { receive: 0 }\n        }\n        let serviceFee = new BigNumber(this.serviceFee).dividedBy(100).multipliedBy(price).toFixed();\n        let royalties = new BigNumber(this.royalties).dividedBy(100).multipliedBy(price).toFixed();\n        let encourage = this.bidUsers == 1 ? 0 : new BigNumber(this.auction.encourage).dividedBy(10000).multipliedBy(price).toFixed();\n        let receive = new BigNumber(price).minus(new BigNumber(serviceFee)).minus(new BigNumber(royalties)).minus(new BigNumber(encourage)).toFixed();\n        return { receive }\n      },\n    },\n    mounted () {\n      if (this.nft) {\n        this.getRoyalties(this.nft)\n      }\n    },\n    methods: {\n      getRoyalties (nfts) {\n        let _nfts = nfts.address + \":\" + nfts.tokenId;\n        let data = {\n          info: _nfts,\n        };\n        let that = this;\n        this.$api(\"nft.getroyalties\", data).then((res) => {\n          for (let key in res.data) {\n            if (key == _nfts && res.data[key]) {\n              let getroyalties = JSON.parse(res.data[key])\n              let count = 0;\n              for (let i = 0;i < getroyalties.length;i++) {\n                count = count + getroyalties[i]\n              }\n              that.royalties = that.$tools.decimal(count / 100, 2);\n            }\n          }\n        });\n      },\n      async onSubmit () {\n        this.confirm = true;\n        let that = this;\n        setTimeout(async function () {\n          await that.onBuy();\n        }, 100);\n      },\n      async onBuy () {\n        this.step.accept = 1;\n        let result = await this.buyOrder();\n        if (result.error) {\n          this.error.accept = result.error;\n          this.step.accept = 0;\n        } else {\n          this.error.accept = \"\";\n          this.step.accept = 2;\n          this.$emit(\"confirm\");\n        }\n      },\n      async buyOrder () {\n        let value = \"0\";\n        if (this.$sdk.keyAssetType(this.auction.buyerType) == \"ETH\") {\n          let realValue = new BigNumber(this.bid.buying).dividedBy(new BigNumber(10).exponentiatedBy(this.auction.paytokenDecimals));\n\n          let fee = realValue.multipliedBy(new BigNumber(this.config.sellerFee));\n          fee = fee.dividedBy(new BigNumber(10000));\n          value = realValue.plus(fee).toFixed();\n        }\n        let buyerValue = new BigNumber(this.auction.buying);\n\n        var order = {\n          owner: this.auction.owner,\n          salt: this.auction.salt,\n          sellToken: this.auction.sellToken,\n          sellTokenId: this.auction.sellTokenId,\n          sellType: this.auction.sellType,\n          sellValue: this.auction.sellValue,\n\n          buyToken: this.auction.buyerToken,\n          buyTokenId: this.auction.buyerTokenId,\n          buyType: this.auction.buyerType,\n          buyValue: buyerValue.toFixed(),\n          bidBuying: this.bid.buying,\n          endTime: this.auction.endTime,\n          expiredTime: this.auction.expiredTime,\n          encourage: this.auction.encourage,\n          buyerFee: this.config.buyerFee,\n          sellerFee: this.sellerFee,\n\n          signature: this.auction.signature,\n          bidSignature: this.bid.signature,\n          caddress: this.nft.address,\n          tokenId: this.nft.tokenId,\n          buyerFee: this.config.buyerFee,\n          sellerFee: this.config.sellerFee,\n          buyer: this.bid.owner,\n          value: value,\n        };\n        return await this.exchangeToken(order);\n      },\n      async exchangeToken (data) {\n        return new Promise((resolve, reject) => {\n          var that = this;\n          this.$api(\"auction.buyerFee\", {\n            owner: data.owner,\n            salt: data.salt,\n            token: data.caddress,\n            tokenId: data.tokenId,\n            type: 1,\n          }).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              data.buyerFeeSig = {\n                r: res.data.r,\n                s: res.data.s,\n                v: res.data.v,\n              };\n              data.auctionAddress = that.config.contract.auctionExchangeAddress;\n              data.recipients = res.data.recipients;\n              let result = await that.$sdk.exchangeAuction(\n                that.user.coinbase,\n                data\n              );\n              if (result.error) {\n                return resolve(result);\n              }\n              var payToken = {\n                address: that.auction.buyerToken,\n                type: that.auction.buyerType,\n                decimals: that.auction.paytokenDecimals,\n              }\n              that.$store.dispatch(\"updatePayToken\", payToken);\n              resolve(result);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      closed () {\n        this.confirm = false;\n        this.step = {\n          accept: 0,\n        };\n        this.error = {\n          all: '',\n          accept: ''\n        }\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}