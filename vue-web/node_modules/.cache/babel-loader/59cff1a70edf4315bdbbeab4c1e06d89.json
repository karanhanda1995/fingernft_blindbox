{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Accept.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Accept.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["BigNumber","data","visible","show","confirm","form","quantity","formError","step","approve","accept","error","all","order","emits","props","type","Boolean","default","nft","Object","myAsset","bid","uri","watch","val","computed","price","$tools","singlePrice","sellValue","buyerValue","payToken","availableQuantity","BigNumberDivide","bidQuantity","sells","BigNumberMinu","BigNumberLte","user","$store","state","config","serviceFee","fee","decimal","sellerFee","sellToken","receive","str2num","usdt","methods","checkForm","parseFloat","$t","onSubmit","that","setTimeout","onApprove","getOrder","setApproveAll","approved","buyerType","address","buyerToken","tokenId","buyerTokenId","$sdk","isApprovedForAll","coinbase","contract","transferProxyAddress","isApproved","setApprovalForAll","result","onAccept","acceptOrder","$emit","Promise","resolve","reject","caddress","owner","valueOrderType","$api","then","res","checkResponse","errmsg","amount","multipliedBy","dividedBy","toFixed","sellTokenId","sellType","buyToken","buyTokenId","buyType","buyValue","salt","signature","buyerFee","buyer","value","exchangeToken","buyerFeeSig","r","s","v","exchangeAddress","nftExchangeAddress","exchangeOrder","close","closed"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Accept.vue"],"sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" @close=\"$emit('close')\" @closed=\"closed\" custom-class=\"fg-dialog\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span v-if=\"uri\">{{ uri.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \" />\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"all-error\" v-if=\"formError.all\"> {{ formError.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{ $t(\"dialog.accept\") }}</span>\n          </div>\n        </div>\n        <div class=\"input-group\">\n          <div class=\"input-info\">\n            <div class=\"tip\">\n              <span class=\"text\">{{ $t(\"dialog.bidPrice\") }}</span>\n            </div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" :disabled=\"true\" type=\"number\" v-model=\"price\">\n              <template #suffix v-if=\"payToken\">\n                <div class=\"paytoken-suffix\">{{ payToken.symbol }}</div>\n              </template>\n            </el-input>\n          </div>\n          <div class=\"stip\" v-if=\"payToken\">\n            <div class=\"stip-item\">\n              {{ $t(\"dialog.serviceFee\") }}\n              <span class=\"bfont\">{{ serviceFee }}%</span>\n            </div>\n            <div class=\"stip-item\">\n              {{ $t(\"dialog.receive\") }}\n              <span class=\"bfont\"> {{ receive.receive }} {{ payToken.symbol }}</span>\n            </div>\n          </div>\n\n          <div class=\"input-info\" v-if=\"$sdk.keyAssetType(nft.type) != 'ERC721'\">\n            <div class=\"tip\"><span>{{$t('dialog.acceptQuantity')}}</span>\n              <span class=\"gray-font\">({{ availableQuantity }} {{$t('dialog.available')}})</span>\n            </div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-model=\"form.quantity\">\n            </el-input>\n            <div class=\"input-error\" v-if=\"formError.quantity\">{{ formError.quantity}}</div>\n          </div>\n\n        </div>\n\n        <div class=\"button-group\">\n          <div class=\"process-btn\">\n            <el-button @click=\"$emit('close')\">{{\n              $t(\"dialog.cancel\")\n            }}</el-button>\n          </div>\n          <div class=\"process-btn\">\n            <el-button @click=\"onSubmit\" type=\"primary\" :loading=\"confirm\">{{\n              $t(\"dialog.accept\")\n            }}</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else>\n      <div class=\"all-error\" v-if=\"error.all\">{{ error.all }}</div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{ $t(\"dialog.approveCollection\") }}</span>\n          </div>\n          <span v-if=\"step.approve != 1\" :class=\"step.approve == 2 ? 'finish' : ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onApprove\" type=\"primary\" v-if=\"step.approve == 0\">{{ $t(\"dialog.approve\") }}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.approve == 1\">{{\n            $t(\"dialog.inProgress\")\n          }}</el-button>\n          <el-button disabled type=\"info\" v-else>{{\n            $t(\"dialog.done\")\n          }}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.approve\">\n          {{ error.approve }}\n        </div>\n      </div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{ $t(\"dialog.signAccept\") }}</span>\n          </div>\n          <span v-if=\"step.accept != 1\" :class=\"step.accept == 2 ? 'finish' : ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button disabled type=\"info\" v-if=\"step.approve != 2\">{{\n            $t(\"dialog.accept\")\n          }}</el-button>\n          <el-button @click=\"onAccept\" type=\"primary\" v-else-if=\"step.accept == 0\">{{ $t(\"dialog.accept\") }}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.accept == 1\">{{\n            $t(\"dialog.inProgress\")\n          }}</el-button>\n          <el-button disabled type=\"info\" v-else>{{\n            $t(\"dialog.done\")\n          }}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.accept\">{{ error.accept }}</div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from \"bignumber.js\";\n  export default {\n    data: function () {\n      return {\n        visible: this.show,\n        confirm: false,\n        form: {\n          quantity: 1,\n        },\n        formError: {\n          quantity: '',\n        },\n        step: {\n          approve: 0,\n          accept: 0,\n        },\n        error: {\n          all: \"\",\n          approve: 0,\n          accept: \"\",\n        },\n        order: {},\n      };\n    },\n    emits: ['confirm'],\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      myAsset: {\n        type: Object,\n        default: {},\n      },\n      bid: {\n        type: Object,\n        default: {},\n      },\n      uri: {\n        type: Object,\n        default: null,\n      },\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      price () {\n        return this.$tools.singlePrice(this.bid.sellValue, this.bid.buyerValue, this.bid.payToken);\n      },\n      availableQuantity () {\n        if (!this.myAsset.quantity) return 0;\n        var sellValue = this.$tools.BigNumberDivide(this.bid.sellValue, this.bid.buyerValue);\n        var bidQuantity = this.$tools.BigNumberDivide(this.bid.sells, sellValue);\n        bidQuantity = this.$tools.BigNumberMinu(this.bid.buyerValue, bidQuantity);\n        return this.$tools.BigNumberLte(this.myAsset.quantity, bidQuantity) ? this.myAsset.quantity : bidQuantity;\n      },\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      serviceFee () {\n        let fee = this.$tools.decimal(this.$store.state.config.sellerFee / 100, 2);\n        return fee;\n      },\n      payToken () {\n        if (!this.bid.sellToken) return \"\";\n        return this.bid.payToken;\n      },\n      receive () {\n        let price = this.$tools.str2num(this.price);\n        if (!price || !this.payToken) {\n          return { receive: 0, usdt: 0 };\n        }\n\n        price = price * this.form.quantity;\n        let receive = this.$tools.decimal(price - (price * this.serviceFee) / 100, 6);\n        return { receive };\n      },\n    },\n    methods: {\n      checkForm () {\n        let error = false;\n        if (!this.form.quantity) {\n          this.formError.quantity = \"no quantity\"\n          error = true;\n        }\n        if (parseFloat(this.form.quantity) > parseFloat(this.availableQuantity)) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.exceedValue\");\n        }\n        return !error;\n      },\n      onSubmit () {\n        if (!this.checkForm()) return;\n        this.confirm = true;\n        let that = this;\n        setTimeout(async function () {\n          await that.onApprove();\n        }, 100);\n      },\n      async onApprove () {\n        this.step.approve = 1;\n        let order = await this.getOrder();\n        if (order.error) {\n          this.error.all = order.error;\n          this.step.approve = 0;\n          return;\n        }\n        let approved = await this.setApproveAll();\n        if (approved.error) {\n          this.error.approve = approved.error;\n          this.step.approve = 0;\n        } else {\n          this.error.approve = \"\";\n          this.step.approve = 2;\n        }\n      },\n      async setApproveAll () {\n        let order = {\n          type: this.order.buyerType,\n          address: this.order.buyerToken,\n          tokenId: this.order.buyerTokenId,\n        };\n        let isApproved = await this.$sdk.isApprovedForAll(\n          order,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n        );\n        if (typeof isApproved == \"object\" && isApproved.error) {\n          return isApproved;\n        }\n        if (isApproved) return true;\n        let result = await this.$sdk.setApprovalForAll(\n          order,\n          this.user.coinbase,\n          this.config.contract.transferProxyAddress,\n          true\n        );\n        return result;\n      },\n      async onAccept () {\n        this.step.accept = 1;\n        let result = await this.acceptOrder();\n        if (result.error) {\n          this.error.accept = result.error;\n          this.step.accept = 0;\n        } else {\n          this.error.accept = \"\";\n          this.step.accept = 2;\n          this.$emit(\"confirm\");\n        }\n      },\n      async getOrder () {\n        return new Promise((resolve, reject) => {\n          var data = {\n            caddress: this.nft.address,\n            tokenId: this.nft.tokenId,\n            owner: this.bid.owner,\n            type: this.$sdk.valueOrderType(\"BID\"),\n          };\n          var that = this;\n          this.$api(\"order.get\", data).then((res) => {\n            if (that.$tools.checkResponse(res)) {\n              that.order = res.data;\n              resolve(res.data);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      async acceptOrder () {\n        let sellValue = new BigNumber(this.order.sellValue);\n        let amount = new BigNumber(this.form.quantity)\n        amount = amount.multipliedBy(sellValue);\n        amount = amount.dividedBy(new BigNumber(this.order.buyerValue)).toFixed();\n        var order = {\n          owner: this.order.owner,\n          sellToken: this.order.sellToken,\n          sellTokenId: this.order.sellTokenId,\n          sellType: this.order.sellType,\n          sellValue: sellValue.toFixed(),\n          buyToken: this.order.buyerToken,\n          buyTokenId: this.order.buyerTokenId,\n          buyType: this.order.buyerType,\n          buyValue: this.order.buyerValue,\n          salt: this.order.salt,\n          signature: this.order.signature,\n          caddress: this.nft.address,\n          tokenId: this.nft.tokenId,\n          type: this.$sdk.valueOrderType(\"BID\"),\n          amount: amount,\n          buyerFee: this.config.buyerFee,\n          sellerFee: this.config.sellerFee,\n          buyer: \"0x0000000000000000000000000000000000000000\",\n          value: \"0\",\n        };\n        return await this.exchangeToken(order);\n      },\n      async exchangeToken (data) {\n        return new Promise((resolve, reject) => {\n          var that = this;\n          this.$api(\"order.buyerFee\", {\n            buyToken: data.caddress,\n            buyTokenId: data.tokenId,\n            owner: data.owner,\n            type: data.type,\n            salt: data.salt,\n          }).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              data.buyerFeeSig = {\n                r: res.data.r,\n                s: res.data.s,\n                v: res.data.v,\n              };\n              data.exchangeAddress = that.config.contract.nftExchangeAddress;\n              let result = await that.$sdk.exchangeOrder(that.user.coinbase, data);\n              if (result.error) {\n                return resolve(result);\n              }\n              resolve(result);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      close () {\n        this.$emit(\"close\");\n      },\n      closed () {\n        this.confirm = false;\n        this.form = {\n          quantity: 1,\n        }\n        this.formError = {\n          quantity: '',\n          all: \"\",\n        }\n        this.step = {\n          approve: 0,\n          accept: 0,\n        };\n        this.error = {\n          all: \"\",\n          approve: \"\",\n          accept: \"\",\n        };\n        this.order = {};\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}