{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\details\\Owners.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\details\\Owners.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICd2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk93bmVycyIsCiAgcHJvcHM6IHsKICAgIG93bmVyczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogW10KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBjb21wdXRlZDogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXI7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbChvd25lcikgewogICAgICB0aGlzLiRlbWl0KCdjYW5jZWwnLCBvd25lcik7CiAgICB9LAogICAgZ2V0U3RvY2tWYWx1ZTogZnVuY3Rpb24gZ2V0U3RvY2tWYWx1ZShvd25lcikgewogICAgICB2YXIgc3RvY2tWYWx1ZSA9IHRoaXMuJHRvb2xzLkJpZ051bWJlclBsdXMob3duZXIuc2VsbFZhbHVlLCBvd25lci5jb21wbGV0ZWQpOwogICAgICBpZiAodGhpcy4kdG9vbHMuQmlnTnVtYmVyR3Qoc3RvY2tWYWx1ZSwgb3duZXIucXVhbnRpdHkpKSBzdG9ja1ZhbHVlID0gb3duZXIucXVhbnRpdHk7CiAgICAgIHJldHVybiBzdG9ja1ZhbHVlOwogICAgfSwKICAgIGJ1eTogZnVuY3Rpb24gYnV5KG93bmVyKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2J1eScsIG93bmVyKTsKICAgIH0sCiAgICBnb0FjY291bnQ6IGZ1bmN0aW9uIGdvQWNjb3VudChhZGRyZXNzKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAiL2FjY291bnQvIiArIGFkZHJlc3MKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":"AAmCE,SAASA,QAAT,QAAyB,KAAzB;AAEA,eAAe;EACbC,IAAI,EAAE,QADO;EAEbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,KADA;MAENC,OAAO,EAAE;IAFH;EADH,CAFM;EAQbC,IARa,kBAQL;IACN,OAAO,EAAP;EACD,CAVY;EAWbP,QAAQ,EAAE;IACRQ,IADQ,kBACA;MACN,OAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBF,IAAzB;IACF;EAHQ,CAXG;EAgBbG,OAAO,EAAE;IACPC,MADO,kBACCC,KADD,EACQ;MACb,KAAKC,KAAL,CAAW,QAAX,EAAqBD,KAArB;IACD,CAHM;IAIPE,aAJO,yBAIQF,KAJR,EAIe;MACpB,IAAIG,UAAS,GAAI,KAAKC,MAAL,CAAYC,aAAZ,CAA0BL,KAAK,CAACM,SAAhC,EAA2CN,KAAK,CAACO,SAAjD,CAAjB;MACA,IAAG,KAAKH,MAAL,CAAYI,WAAZ,CAAwBL,UAAxB,EAAoCH,KAAK,CAACS,QAA1C,CAAH,EAAwDN,UAAS,GAAIH,KAAK,CAACS,QAAnB;MACxD,OAAON,UAAP;IACD,CARM;IASPO,GATO,eASFV,KATE,EASK;MACV,KAAKC,KAAL,CAAW,KAAX,EAAkBD,KAAlB;IACD,CAXM;IAYPW,SAZO,qBAYIC,OAZJ,EAYa;MAClB,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAAEC,IAAI,EAAE,cAAcH;MAAtB,CAAlB;IACF;EAdO;AAhBI,CAAf","names":["computed","name","props","owners","type","Array","default","data","user","$store","state","methods","cancel","owner","$emit","getStockValue","stockValue","$tools","BigNumberPlus","sellValue","completed","BigNumberGt","quantity","buy","goAccount","address","$router","push","path"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\views\\sections\\details\\Owners.vue"],"sourcesContent":["<template>\n  <div class=\"tab-content-list\">\n    <div v-for=\"(owner, index) in owners\" :key=\"index\" class=\"info-item\">\n      <div class=\"avatar\">\n        <avatar @click=\"goAccount(owner.user.address)\" shape=\"circular\" :imageUrl=\"$filters.fullImageUrl(owner.user.avatar)\" :address=\"owner.user.address\" :imgWidth=\"35\" :imgHeight=\"35\"></avatar>\n      </div>\n      <div v-if=\"!owner.onsell || owner.onsellType != 1\" class=\"info\">\n        <div class=\"label\">{{owner.quantity}} {{$t('details.text1')}}</div>\n        <div @click=\"goAccount(owner.user.address)\" class=\"name\">\n          <span class=\"text\">\n            {{owner.user.nickname || $filters.ellipsisAddress(owner.user.address) }}\n          </span>\n          <span class=\"t\">{{owner.time}}</span>\n        </div>\n      </div>\n      <div v-else class=\"info\">\n        <div class=\"label flex\">\n          <div class=\"label-left\">{{ owner.sellQuantity }} {{$t('details.text2')}} <span class=\"bfont\"> {{owner.singlePrice}}{{owner.paytokenSymbol}} </span>\n          </div>\n          <span v-if=\"!user || user.coinbase == owner.user.address\" class=\"nft-op cancel\" @click=\"cancel(owner)\">{{$t('details.cancel')}}</span>\n          <span v-else class=\"nft-op\" @click=\"buy(owner)\">{{$t('details.buy')}}</span>\n        </div>\n\n        <div @click=\"goAccount(owner.user.address)\" class=\"name\">\n          <span class=\"text\">\n            {{ owner.user.nickname || $filters.ellipsisAddress( owner.user.address ) }}\n          </span>\n          <span class=\"t\">{{ $filters.timeFormat(owner.createTime) }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n<script>\n  import { computed } from 'vue'\n\n  export default {\n    name: \"Owners\",\n    props: {\n      owners: {\n        type: Array,\n        default: [],\n      }\n    },\n    data () {\n      return {}\n    },\n    computed: {\n      user () {\n        return this.$store.state.user;\n      }\n    },\n    methods: {\n      cancel (owner) {\n        this.$emit('cancel', owner);\n      },\n      getStockValue (owner) {\n        let stockValue = this.$tools.BigNumberPlus(owner.sellValue, owner.completed);\n        if(this.$tools.BigNumberGt(stockValue, owner.quantity)) stockValue = owner.quantity;\n        return stockValue;\n      },\n      buy (owner) {\n        this.$emit('buy', owner);\n      },\n      goAccount (address) {\n        this.$router.push({ path: \"/account/\" + address });\n      }\n    }\n  }\n</script>\n"]}]}