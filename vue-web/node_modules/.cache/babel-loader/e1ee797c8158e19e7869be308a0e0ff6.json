{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Bid.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Bid.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["BigNumber","name","data","paytoken","$store","getters","defaultBidPayToken","visible","show","confirm","form","price","payAddress","address","quantity","formError","all","step","approve","bid","error","order","emits","props","type","Boolean","default","nft","Object","myAsset","uri","watch","val","computed","user","state","config","payTokens","tokens","i","length","payToken","toLocaleLowerCase","$sdk","NULL_ADDRESS","push","serviceFee","fee","$tools","decimal","buyerFee","pay","balance","getBalance","str2num","methods","onOpen","keyAssetType","sellToken","buyerValue","singlePrice","sellValue","checkForm","parseFloat","$t","onSubmit","that","setTimeout","onApprove","tokenId","salt","getOrder","result","approvePayToken","allowancePayToken","coinbase","contract","erc20TransferProxyAddress","isAllowance","toString","Promise","resolve","reject","caddress","owner","valueOrderType","$api","then","res","checkResponse","buyerToken","buyerTokenId","buyerType","paytokenName","symbol","paytokenSymbol","decimals","paytokenDecimals","sellType","errmsg","onBid","sellerFee","bidToken","$emit","multipliedBy","exponentiatedBy","toFixed","sellTokenId","buyToken","buyTokenId","buyValue","buyType","valueCommonType","message","startsWith","slice","signature","$web3","sign","_data","closed"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\Bid.vue"],"sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" @close=\"$emit('close')\" @open=\"onOpen\" @closed=\"closed\" custom-class=\"fg-dialog\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span v-if=\"uri\">{{ uri.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \">\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"all-error\" v-if=\"formError.all\"> {{ formError.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.pab')}}</span>\n          </div>\n        </div>\n        <div class=\"input-group\">\n          <div class=\"input-info\">\n            <div class=\"tip\"><span class=\"text\">{{$t('dialog.bidPrice')}}</span></div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" v-if=\"!bid\" type=\"number\" v-model=\"form.price\">\n              <template #suffix>\n                <el-select class=\"paytoken-selects\" v-model=\"form.payAddress\">\n                  <el-option v-for=\"(token, i) in payTokens\" :key=\"i\" :label=\"token.symbol\" :value=\"token.address\">\n                  </el-option>\n                </el-select>\n              </template>\n            </el-input>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-else v-model=\"form.price\">\n              <template #suffix v-if=\"bid.payToken\">\n                <div class=\"paytoken-suffix\">{{ bid.paytokenSymbol }}</div>\n              </template>\n            </el-input>\n            <div class=\"input-error\" v-if=\"formError.price\">{{formError.price}}</div>\n            <div class=\"stip\">\n              <div class=\"stip-item\"> {{ $t('dialog.yourBalance')}} <span class=\"bfont\">{{ pay.balance }}{{ payToken?.symbol }}</span> </div>\n              <div class=\"stip-item\"> {{ $t('dialog.serviceFee')}} <span class=\"bfont\">{{serviceFee}}%</span> </div>\n              <div class=\"stip-item\">{{ $t('dialog.pay')}} <span class=\"bfont\"> {{pay.pay}}{{ payToken?.symbol}}</span></div>\n\n            </div>\n\n          </div>\n\n          <div class=\"input-info\" v-if=\"$sdk.keyAssetType(nft.type) != 'ERC721'\">\n            <div class=\"tip\"><span>{{$t('dialog.enterQuantity')}}</span>\n              <span class=\"gray-font\">({{ myAsset && myAsset.quantity ? nft.quantity - myAsset.quantity : nft.quantity }}\n                {{$t('dialog.available')}})</span>\n            </div>\n            <el-input class=\"fg-dialog-input\" placeholder=\"0.0\" type=\"number\" v-model=\"form.quantity\">\n\n            </el-input>\n            <div class=\"input-error\" v-if=\"formError.quantity\">{{formError.quantity}}</div>\n          </div>\n\n        </div>\n\n        <div class=\"process-btn\">\n          <template v-if=\"pay && parseFloat(pay.pay) > parseFloat(pay.balance)\">\n            <el-button @click=\"onSubmit\" disabled v-if=\"!bid\" type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.confirm')}}</el-button>\n            <el-button @click=\"onSubmit\" disabled v-else type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.change')}}</el-button>\n\n            <div class=\"input-error text-center\">{{$t('dialog.noBalance')}}</div>\n          </template>\n          <template v-else>\n            <el-button @click=\"onSubmit\" v-if=\"!bid\" type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.confirm')}}</el-button>\n            <el-button @click=\"onSubmit\" v-else type=\"primary\" :loading=\"confirm\">\n              {{$t('dialog.change')}}</el-button>\n          </template>\n        </div>\n\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else>\n      <div class=\"all-error\" v-if=\"error.all\"> {{ error.all }} </div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.approve')}} {{ payToken?.symbol }}</span>\n          </div>\n          <span v-if=\"step.approve != 1\" :class=\"step.approve== 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onApprove\" type=\"primary\" v-if=\"step.approve == 0\">\n            {{$t('dialog.approve')}}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.approve == 1\">\n            {{$t('dialog.inProgress')}}...</el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.approve\">{{ error.approve }}</div>\n      </div>\n\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{$t('dialog.signsBid')}}</span>\n          </div>\n          <span v-if=\"step.bid != 1\" :class=\"step.bid == 2 ? 'finish': ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button disabled type=\"info\" v-if=\"step.approve != 2\">{{$t('dialog.bid')}}\n          </el-button>\n          <el-button @click=\"onBid\" type=\"primary\" v-else-if=\"step.bid==0\">{{$t('dialog.bid')}}\n          </el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.bid == 1\">{{$t('dialog.inProgress')}}...\n          </el-button>\n          <el-button disabled type=\"info\" v-else>{{$t('dialog.done')}}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.bid\">{{ error.bid}}</div>\n      </div>\n\n    </div>\n\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from 'bignumber.js'\n  export default {\n    name: \"Bid\",\n    data: function () {\n      let paytoken = this.$store.getters.defaultBidPayToken();\n      return {\n        visible: this.show,\n        confirm: false,\n        form: {\n          price: \"\",\n          payAddress: paytoken ? paytoken.address : \"\",\n          quantity: \"\",\n        },\n        formError: {\n          all: \"\",\n          price: \"\",\n          quantity: \"\",\n        },\n        step: {\n          approve: 0,\n          bid: 0,\n        },\n        error: {\n          all: \"\",\n          approve: \"\",\n          bid: \"\",\n        },\n        order: {},\n      };\n    },\n    emits: ['confirm', 'close'],\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      bid: {\n        type: Object,\n        default: null,\n      },\n      myAsset: {\n        type: Object,\n        default: null,\n      },\n      uri: {\n        type: Object,\n        default: null,\n      },\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n      payTokens () {\n        var payTokens = this.$store.state.payTokens;\n        let tokens = [];\n        for (var i = 0;i < payTokens.length;i++) {\n          let payToken = payTokens[i];\n          if (payToken.address.toLocaleLowerCase() == this.$sdk.NULL_ADDRESS().toLocaleLowerCase()) continue;\n          tokens.push(payToken);\n        }\n        return tokens;\n      },\n      serviceFee () {\n        let fee = this.$tools.decimal(this.$store.state.config.buyerFee / 100, 2);\n        return fee;\n      },\n      payToken () {\n        let payToken = this.$store.getters.payToken(\n          this.form.payAddress\n        );\n        return payToken;\n      },\n      pay () {\n        let balance = this.$store.getters.getBalance(this.form.payAddress)\n        let price = this.$tools.str2num(this.form.price)\n        if (!price) return { balance: balance || 0, pay: 0 }\n        price = price * this.form.quantity;\n        let pay = this.$tools.decimal(price + (price * this.serviceFee / 100), 6)\n        return { pay, balance }\n      }\n    },\n    methods: {\n      onOpen () {\n        if (!this.bid) {\n          if (this.$sdk.keyAssetType(this.nft.type) == \"ERC721\") {\n            this.form.quantity = \"1\";\n          } else {\n            this.form.quantity = \"\";\n          }\n        } else {\n          let paytoken = this.$store.getters.payToken(this.bid.sellToken)\n          this.form.payAddress = paytoken?.address.toLocaleLowerCase();\n          this.form.quantity = this.bid.buyerValue;\n          this.form.price = this.$tools.singlePrice(this.bid.sellValue, this.bid.buyerValue, this.bid.payToken);\n        }\n      },\n      checkForm () {\n        let error = false;\n        if (!parseFloat(this.form.price)) {\n          error = true;\n          this.formError.price = this.$t(\"form.noPrice\");\n        }\n        if (this.bid && (parseFloat(this.form.price) <= parseFloat(\n          this.$tools.singlePrice(this.bid.sellValue, this.bid.buyerValue, this.bid.payToken)\n        ))) {\n          error = true\n          this.formError.price = this.$t(\"form.lessPrice\")\n        }\n\n        if (!this.form.quantity) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.noQuantity\")\n        }\n        let quantity = this.nft.quantity;\n        if (this.myAsset) quantity = quantity - this.myAsset.quantity;\n\n        if (parseFloat(this.form.quantity) > parseFloat(quantity)) {\n          error = true;\n          this.formError.quantity = this.$t(\"form.exceedValue\");\n        }\n        return !error;\n      },\n      onSubmit () {\n        if (!this.checkForm()) return;\n        this.confirm = true;\n        let that = this;\n        setTimeout(async function () {\n          await that.onApprove();\n        }, 100);\n      },\n      async onApprove () {\n        this.step.approve = 1;\n        if (!this.bid) {\n          let payToken = this.$store.getters.payToken(this.form.payAddress);\n          this.order = {\n            address: this.nft.address,\n            tokenId: this.nft.tokenId,\n            type: this.nft.type,\n            payToken: payToken,\n            salt: \"0\",\n          };\n        } else {\n          let result = await this.getOrder();\n          if (result.error) {\n            this.error.all = result.error;\n            this.step.approve = 0;\n            return;\n          }\n        }\n        let result = await this.approvePayToken();\n        if (result.error) {\n          this.error.approve = result.error;\n          this.step.approve = 0;\n        } else {\n          this.error.approve = \"\";\n          this.step.approve = 2;\n        }\n      },\n      async approvePayToken () {\n        let order = {\n          address: this.order.payToken.address,\n          type: this.order.payToken.type,\n        };\n        let isAllowance = await this.$sdk.allowancePayToken(\n          order,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n        if (isAllowance.error) {\n          return isAllowance;\n        }\n        isAllowance = isAllowance.toString();\n        if (isAllowance != \"0\" && isAllowance) {\n          return true;\n        }\n        return await this.$sdk.approvePayToken(\n          order,\n          this.user.coinbase,\n          this.config.contract.erc20TransferProxyAddress,\n        );\n      },\n      async getOrder () {\n        return new Promise((resolve, reject) => {\n          var data = {\n            caddress: this.nft.address,\n            tokenId: this.nft.tokenId,\n            owner: this.bid.address,\n            type: this.$sdk.valueOrderType(\"BID\"),\n          };\n          let that = this;\n          this.$api(\"order.get\", data).then((res) => {\n            if (that.$tools.checkResponse(res)) {\n              that.order = {\n                address: res.data.buyerToken,\n                tokenId: res.data.buyerTokenId,\n                type: res.data.buyerType,\n                payToken: {\n                  address: res.data.sellToken,\n                  name: res.data.paytokenName,\n                  symbol: res.data.paytokenSymbol,\n                  decimals: res.data.paytokenDecimals,\n                  type: res.data.sellType,\n                },\n                salt: res.data.salt,\n              };\n              resolve(res.data);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      async onBid () {\n        if (this.step.approve != 2) return;\n        this.step.bid = 1;\n        let order = {\n          ...this.order,\n          price: this.form.price,\n          sellerFee: this.config.sellerFee,\n        };\n        let result = await this.bidToken(order);\n        if (result.error) {\n          this.error.bid = result.error;\n          this.step.bid = 0;\n        } else {\n          this.error.bid = \"\";\n          this.step.bid = 2;\n          this.$emit(\"confirm\");\n        }\n      },\n      async bidToken (order) {\n        return new Promise((resolve, reject) => {\n          let sellValue = new BigNumber(this.form.price);\n          sellValue = sellValue.multipliedBy(new BigNumber(this.form.quantity)).multipliedBy(\n            new BigNumber(10).exponentiatedBy(order.payToken.decimals)).toFixed();\n          var data = {\n            owner: this.user.coinbase,\n            sellToken: order.payToken.address,\n            sellTokenId: \"0\",\n            sellValue: sellValue,\n            sellType: order.payToken.type,\n            buyToken: order.address,\n            buyTokenId: order.tokenId,\n            buyValue: this.form.quantity,\n            buyType: order.type,\n            salt: order.salt,\n            type: this.$sdk.valueCommonType(\"BID\")\n          };\n          let that = this;\n          this.$api(\"order.prepare\", data).then(async function (res) {\n            if (that.$tools.checkResponse(res)) {\n              let message = res.data.message;\n              if (message.startsWith(\"0x\")) {\n                message = message.slice(2, message.length);\n              }\n              let salt = res.data.salt;\n              let signature = \"\";\n              try {\n                signature = await that.$web3.sign(message, that.user.coinbase);\n                if (signature.error) {\n                  return resolve(signature);\n                }\n              } catch (e) {\n                return resolve({ error: e.message });\n              }\n              var _data = {\n                type: !that.bid\n                  ? that.$sdk.valueCommonType(\"BID\")\n                  : that.$sdk.valueCommonType(\"EDIT_BID\"),\n                owner: data.owner,\n                sellToken: data.sellToken,\n                sellTokenId: data.sellTokenId,\n                sellValue: data.sellValue,\n                sellType: data.sellType,\n                buyToken: data.buyToken,\n                buyTokenId: data.buyTokenId,\n                buyValue: data.buyValue,\n                buyType: data.buyType,\n                salt: salt,\n                message: message,\n                signature: signature,\n              };\n              that.$api(\"order.add\", _data).then(function (res) {\n                if (that.$tools.checkResponse(res)) {\n                  that.$tools.message(that.$t('request.bidSuccess'), \"success\");\n                  resolve(res);\n                } else {\n                  resolve({ error: res.errmsg });\n                }\n              });\n            } else {\n              that.$tools.message(res.errmsg);\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      closed () {\n        let paytoken = this.$store.getters.defaultBidPayToken();\n        this.confirm = false;\n        this.form = {\n          price: \"\",\n          payAddress: paytoken ? paytoken.address : \"\",\n          quantity: \"\",\n        };\n        this.formError = {\n          all: \"\",\n          price: \"\",\n          quantity: \"\",\n        };\n        this.step = {\n          approve: 0,\n          bid: 0,\n        };\n        this.error = {\n          all: \"\",\n          approve: \"\",\n          bid: \"\",\n        };\n        this.order = {};\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}