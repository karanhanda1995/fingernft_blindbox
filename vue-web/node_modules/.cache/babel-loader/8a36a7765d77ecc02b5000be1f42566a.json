{"remainingRequest":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\CancelBid.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\CancelBid.vue","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\babel.config.js","mtime":1650964597000},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1652258014277},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652258014056},{"path":"C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652258044998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["BigNumber","name","data","visible","show","confirm","formError","all","cancel","step","error","order","emits","props","type","Boolean","default","nft","Object","bid","uri","watch","val","computed","user","$store","state","config","methods","onSubmit","that","setTimeout","onCancel","getOrder","cancelBid","result","$emit","owner","sellToken","sellTokenId","sellType","sellValue","buyToken","buyerToken","buyTokenId","buyerTokenId","buyType","buyerType","buyValue","buyerValue","salt","exchangeAddress","contract","nftExchangeAddress","cancelOrder","Promise","resolve","reject","$sdk","coinbase","caddress","address","tokenId","valueOrderType","$api","then","res","$tools","checkResponse","errmsg","close","closed"],"sourceRoot":"","sources":["C:\\Users\\Mohamed Tamim\\Desktop\\SONGTRADER-V2-FULL\\fingernft_blindbox\\fingernft_blindbox\\vue-web\\src\\components\\dialogs\\CancelBid.vue"],"sourcesContent":["<template>\n  <el-dialog :model-value=\"visible\" :show-close=\"false\" :close-on-click-modal=\"false\" @close=\"$emit('close')\" @closed=\"closed\" custom-class=\"fg-dialog\" destroy-on-close>\n    <template #title>\n      <div class=\"fg-dialog-title\">\n        <div class=\"left\">\n          <span v-if=\"uri\">{{ uri.name }}</span>\n        </div>\n        <div class=\"right\" @click=\"$emit('close')\">\n          <img class=\"close-img\" src=\"@/assets/create-img/pop_shut.png \" />\n        </div>\n      </div>\n    </template>\n    <div class=\"fg-dialog-body\" v-if=\"!confirm\">\n      <div class=\"all-error\" v-if=\"error.all\">{{ error.all }}</div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{ $t(\"dialog.cancelABid\") }}</span>\n          </div>\n        </div>\n        <div class=\"confirm-text\">\n          {{ $t(\"dialog.sureCancelBid\") }}\n        </div>\n        <div class=\"button-group\">\n          <div class=\"process-btn\">\n            <el-button @click=\"$emit('close')\">\n              {{$t(\"dialog.cancel\")}}\n            </el-button>\n          </div>\n          <div class=\"process-btn\">\n            <el-button @click=\"onSubmit\" type=\"primary\" :loading=\"step == 1\">\n              {{$t(\"dialog.confirm\")}}\n            </el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"fg-dialog-body\" v-else>\n      <div class=\"all-error\" v-if=\"error.all\">{{ error.all }}</div>\n      <div class=\"process\">\n        <div class=\"step-info\">\n          <div class=\"text\">\n            <span>{{ $t(\"dialog.cancelBid\") }}</span>\n          </div>\n          <span v-if=\"step.cancel != 1\" :class=\"step.cancel == 2 ? 'finish' : ''\" class=\"step iconfont icon-seleted\"></span>\n          <div class=\"step loading\" v-else>\n            <img class=\"loading-animation\" src=\"@/assets/img/loading.png\" />\n          </div>\n        </div>\n        <div class=\"process-btn\">\n          <el-button @click=\"onCancel\" v-if=\"step.cancel == 0\">{{\n            $t(\"dialog.cancel\")\n          }}</el-button>\n          <el-button disabled type=\"info\" v-else-if=\"step.cancel == 1\">{{\n            $t(\"dialog.inProgress\")\n          }}</el-button>\n          <el-button disabled type=\"info\" v-else>{{\n            $t(\"dialog.done\")\n          }}</el-button>\n        </div>\n        <div class=\"process-error\" v-if=\"error.cancel\">{{ error.cancel }}</div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import BigNumber from \"bignumber.js\";\n  export default {\n    name: \"CancelBid\",\n    data: function () {\n      return {\n        visible: this.show,\n        confirm: false,\n        formError: {\n          all: \"\",\n          cancel: \"\",\n        },\n        step: {\n          cancel: 0,\n        },\n        error: {\n          all: \"\",\n          cancel: \"\",\n        },\n        order: {},\n      };\n    },\n    emits: ['confirm'],\n    props: {\n      show: {\n        type: Boolean,\n        default: false,\n      },\n      nft: {\n        type: Object,\n        default: {},\n      },\n      bid: {\n        type: Object,\n        default: {},\n      },\n      uri: {\n        type: Object,\n        default: null,\n      },\n    },\n    watch: {\n      show (val) {\n        this.visible = this.show;\n      },\n    },\n    computed: {\n      user () {\n        return this.$store.state.user;\n      },\n      config () {\n        return this.$store.state.config;\n      },\n    },\n    methods: {\n      async onSubmit () {\n        this.confirm = true;\n        let that = this;\n        setTimeout(async function () {\n          await that.onCancel();\n        }, 100);\n      },\n      async onCancel () {\n        this.step.cancel = 1;\n        let order = await this.getOrder();\n        if (order.error) {\n          this.error.all = order.error;\n          this.step.cancel = 0;\n          return;\n        }\n        let result = await this.cancelBid();\n        if (result.error) {\n          this.error.cancel = result.error;\n          this.step.cancel = 0;\n        } else {\n          this.error.cancel = \"\";\n          this.step.cancel = 2;\n          this.$emit(\"confirm\");\n        }\n      },\n      async cancelBid () {\n        var order = {\n          owner: this.order.owner,\n          sellToken: this.order.sellToken,\n          sellTokenId: this.order.sellTokenId,\n          sellType: this.order.sellType,\n          sellValue: this.order.sellValue,\n          buyToken: this.order.buyerToken,\n          buyTokenId: this.order.buyerTokenId,\n          buyType: this.order.buyerType,\n          buyValue: this.order.buyerValue,\n          salt: this.order.salt,\n          exchangeAddress: this.config.contract.nftExchangeAddress,\n        };\n        return await this.cancelOrder(order);\n      },\n      async cancelOrder (order) {\n        let that = this;\n        return new Promise(async function (resolve, reject) {\n          let result = await that.$sdk.cancelOrder(that.user.coinbase, order);\n          resolve(result);\n        });\n      },\n      async getOrder () {\n        return new Promise((resolve, reject) => {\n          var data = {\n            caddress: this.nft.address,\n            tokenId: this.nft.tokenId,\n            owner: this.bid.owner,\n            type: this.$sdk.valueOrderType(\"BID\"),\n          };\n          var that = this;\n          this.$api(\"order.get\", data).then((res) => {\n            if (that.$tools.checkResponse(res)) {\n              that.order = res.data;\n              resolve(res.data);\n            } else {\n              resolve({ error: res.errmsg });\n            }\n          });\n        });\n      },\n      close () {\n        this.$emit(\"close\");\n      },\n      closed () {\n        this.confirm = false;\n        this.formError = {\n          all: \"\",\n          cancel: \"\",\n        };\n        this.step = {\n          cancel: 0,\n        };\n        this.error = {\n          all: \"\",\n          cancel: \"\",\n        };\n        this.order = {};\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}